//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

/* Imports */
var Meteor = Package.meteor.Meteor;
var global = Package.meteor.global;
var meteorEnv = Package.meteor.meteorEnv;
var $ = Package.jquery.$;
var jQuery = Package.jquery.jQuery;

(function(){

///////////////////////////////////////////////////////////////////////
//                                                                   //
// packages/semantic_ui-css/packages/semantic_ui-css.js              //
//                                                                   //
///////////////////////////////////////////////////////////////////////
                                                                     //
(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic:ui-css/semantic.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
 /*                                                                                                                    // 1
 * # Semantic UI - 2.1.2                                                                                               // 2
 * https://github.com/Semantic-Org/Semantic-UI                                                                         // 3
 * http://www.semantic-ui.com/                                                                                         // 4
 *                                                                                                                     // 5
 * Copyright 2014 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
/*!                                                                                                                    // 11
 * # Semantic UI 2.1.2 - Site                                                                                          // 12
 * http://github.com/semantic-org/semantic-ui/                                                                         // 13
 *                                                                                                                     // 14
 *                                                                                                                     // 15
 * Copyright 2015 Contributors                                                                                         // 16
 * Released under the MIT license                                                                                      // 17
 * http://opensource.org/licenses/MIT                                                                                  // 18
 *                                                                                                                     // 19
 */                                                                                                                    // 20
;(function ( $, window, document, undefined ) {                                                                        // 21
                                                                                                                       // 22
$.site = $.fn.site = function(parameters) {                                                                            // 23
  var                                                                                                                  // 24
    time           = new Date().getTime(),                                                                             // 25
    performance    = [],                                                                                               // 26
                                                                                                                       // 27
    query          = arguments[0],                                                                                     // 28
    methodInvoked  = (typeof query == 'string'),                                                                       // 29
    queryArguments = [].slice.call(arguments, 1),                                                                      // 30
                                                                                                                       // 31
    settings        = ( $.isPlainObject(parameters) )                                                                  // 32
      ? $.extend(true, {}, $.site.settings, parameters)                                                                // 33
      : $.extend({}, $.site.settings),                                                                                 // 34
                                                                                                                       // 35
    namespace       = settings.namespace,                                                                              // 36
    error           = settings.error,                                                                                  // 37
                                                                                                                       // 38
    eventNamespace  = '.' + namespace,                                                                                 // 39
    moduleNamespace = 'module-' + namespace,                                                                           // 40
                                                                                                                       // 41
    $document       = $(document),                                                                                     // 42
    $module         = $document,                                                                                       // 43
    element         = this,                                                                                            // 44
    instance        = $module.data(moduleNamespace),                                                                   // 45
                                                                                                                       // 46
    module,                                                                                                            // 47
    returnedValue                                                                                                      // 48
  ;                                                                                                                    // 49
  module = {                                                                                                           // 50
                                                                                                                       // 51
    initialize: function() {                                                                                           // 52
      module.instantiate();                                                                                            // 53
    },                                                                                                                 // 54
                                                                                                                       // 55
    instantiate: function() {                                                                                          // 56
      module.verbose('Storing instance of site', module);                                                              // 57
      instance = module;                                                                                               // 58
      $module                                                                                                          // 59
        .data(moduleNamespace, module)                                                                                 // 60
      ;                                                                                                                // 61
    },                                                                                                                 // 62
                                                                                                                       // 63
    normalize: function() {                                                                                            // 64
      module.fix.console();                                                                                            // 65
      module.fix.requestAnimationFrame();                                                                              // 66
    },                                                                                                                 // 67
                                                                                                                       // 68
    fix: {                                                                                                             // 69
      console: function() {                                                                                            // 70
        module.debug('Normalizing window.console');                                                                    // 71
        if (console === undefined || console.log === undefined) {                                                      // 72
          module.verbose('Console not available, normalizing events');                                                 // 73
          module.disable.console();                                                                                    // 74
        }                                                                                                              // 75
        if (typeof console.group == 'undefined' || typeof console.groupEnd == 'undefined' || typeof console.groupCollapsed == 'undefined') {
          module.verbose('Console group not available, normalizing events');                                           // 77
          window.console.group = function() {};                                                                        // 78
          window.console.groupEnd = function() {};                                                                     // 79
          window.console.groupCollapsed = function() {};                                                               // 80
        }                                                                                                              // 81
        if (typeof console.markTimeline == 'undefined') {                                                              // 82
          module.verbose('Mark timeline not available, normalizing events');                                           // 83
          window.console.markTimeline = function() {};                                                                 // 84
        }                                                                                                              // 85
      },                                                                                                               // 86
      consoleClear: function() {                                                                                       // 87
        module.debug('Disabling programmatic console clearing');                                                       // 88
        window.console.clear = function() {};                                                                          // 89
      },                                                                                                               // 90
      requestAnimationFrame: function() {                                                                              // 91
        module.debug('Normalizing requestAnimationFrame');                                                             // 92
        if(window.requestAnimationFrame === undefined) {                                                               // 93
          module.debug('RequestAnimationFrame not available, normailizing event');                                     // 94
          window.requestAnimationFrame = window.requestAnimationFrame                                                  // 95
            || window.mozRequestAnimationFrame                                                                         // 96
            || window.webkitRequestAnimationFrame                                                                      // 97
            || window.msRequestAnimationFrame                                                                          // 98
            || function(callback) { setTimeout(callback, 0); }                                                         // 99
          ;                                                                                                            // 100
        }                                                                                                              // 101
      }                                                                                                                // 102
    },                                                                                                                 // 103
                                                                                                                       // 104
    moduleExists: function(name) {                                                                                     // 105
      return ($.fn[name] !== undefined && $.fn[name].settings !== undefined);                                          // 106
    },                                                                                                                 // 107
                                                                                                                       // 108
    enabled: {                                                                                                         // 109
      modules: function(modules) {                                                                                     // 110
        var                                                                                                            // 111
          enabledModules = []                                                                                          // 112
        ;                                                                                                              // 113
        modules = modules || settings.modules;                                                                         // 114
        $.each(modules, function(index, name) {                                                                        // 115
          if(module.moduleExists(name)) {                                                                              // 116
            enabledModules.push(name);                                                                                 // 117
          }                                                                                                            // 118
        });                                                                                                            // 119
        return enabledModules;                                                                                         // 120
      }                                                                                                                // 121
    },                                                                                                                 // 122
                                                                                                                       // 123
    disabled: {                                                                                                        // 124
      modules: function(modules) {                                                                                     // 125
        var                                                                                                            // 126
          disabledModules = []                                                                                         // 127
        ;                                                                                                              // 128
        modules = modules || settings.modules;                                                                         // 129
        $.each(modules, function(index, name) {                                                                        // 130
          if(!module.moduleExists(name)) {                                                                             // 131
            disabledModules.push(name);                                                                                // 132
          }                                                                                                            // 133
        });                                                                                                            // 134
        return disabledModules;                                                                                        // 135
      }                                                                                                                // 136
    },                                                                                                                 // 137
                                                                                                                       // 138
    change: {                                                                                                          // 139
      setting: function(setting, value, modules, modifyExisting) {                                                     // 140
        modules = (typeof modules === 'string')                                                                        // 141
          ? (modules === 'all')                                                                                        // 142
            ? settings.modules                                                                                         // 143
            : [modules]                                                                                                // 144
          : modules || settings.modules                                                                                // 145
        ;                                                                                                              // 146
        modifyExisting = (modifyExisting !== undefined)                                                                // 147
          ? modifyExisting                                                                                             // 148
          : true                                                                                                       // 149
        ;                                                                                                              // 150
        $.each(modules, function(index, name) {                                                                        // 151
          var                                                                                                          // 152
            namespace = (module.moduleExists(name))                                                                    // 153
              ? $.fn[name].settings.namespace || false                                                                 // 154
              : true,                                                                                                  // 155
            $existingModules                                                                                           // 156
          ;                                                                                                            // 157
          if(module.moduleExists(name)) {                                                                              // 158
            module.verbose('Changing default setting', setting, value, name);                                          // 159
            $.fn[name].settings[setting] = value;                                                                      // 160
            if(modifyExisting && namespace) {                                                                          // 161
              $existingModules = $(':data(module-' + namespace + ')');                                                 // 162
              if($existingModules.length > 0) {                                                                        // 163
                module.verbose('Modifying existing settings', $existingModules);                                       // 164
                $existingModules[name]('setting', setting, value);                                                     // 165
              }                                                                                                        // 166
            }                                                                                                          // 167
          }                                                                                                            // 168
        });                                                                                                            // 169
      },                                                                                                               // 170
      settings: function(newSettings, modules, modifyExisting) {                                                       // 171
        modules = (typeof modules === 'string')                                                                        // 172
          ? [modules]                                                                                                  // 173
          : modules || settings.modules                                                                                // 174
        ;                                                                                                              // 175
        modifyExisting = (modifyExisting !== undefined)                                                                // 176
          ? modifyExisting                                                                                             // 177
          : true                                                                                                       // 178
        ;                                                                                                              // 179
        $.each(modules, function(index, name) {                                                                        // 180
          var                                                                                                          // 181
            $existingModules                                                                                           // 182
          ;                                                                                                            // 183
          if(module.moduleExists(name)) {                                                                              // 184
            module.verbose('Changing default setting', newSettings, name);                                             // 185
            $.extend(true, $.fn[name].settings, newSettings);                                                          // 186
            if(modifyExisting && namespace) {                                                                          // 187
              $existingModules = $(':data(module-' + namespace + ')');                                                 // 188
              if($existingModules.length > 0) {                                                                        // 189
                module.verbose('Modifying existing settings', $existingModules);                                       // 190
                $existingModules[name]('setting', newSettings);                                                        // 191
              }                                                                                                        // 192
            }                                                                                                          // 193
          }                                                                                                            // 194
        });                                                                                                            // 195
      }                                                                                                                // 196
    },                                                                                                                 // 197
                                                                                                                       // 198
    enable: {                                                                                                          // 199
      console: function() {                                                                                            // 200
        module.console(true);                                                                                          // 201
      },                                                                                                               // 202
      debug: function(modules, modifyExisting) {                                                                       // 203
        modules = modules || settings.modules;                                                                         // 204
        module.debug('Enabling debug for modules', modules);                                                           // 205
        module.change.setting('debug', true, modules, modifyExisting);                                                 // 206
      },                                                                                                               // 207
      verbose: function(modules, modifyExisting) {                                                                     // 208
        modules = modules || settings.modules;                                                                         // 209
        module.debug('Enabling verbose debug for modules', modules);                                                   // 210
        module.change.setting('verbose', true, modules, modifyExisting);                                               // 211
      }                                                                                                                // 212
    },                                                                                                                 // 213
    disable: {                                                                                                         // 214
      console: function() {                                                                                            // 215
        module.console(false);                                                                                         // 216
      },                                                                                                               // 217
      debug: function(modules, modifyExisting) {                                                                       // 218
        modules = modules || settings.modules;                                                                         // 219
        module.debug('Disabling debug for modules', modules);                                                          // 220
        module.change.setting('debug', false, modules, modifyExisting);                                                // 221
      },                                                                                                               // 222
      verbose: function(modules, modifyExisting) {                                                                     // 223
        modules = modules || settings.modules;                                                                         // 224
        module.debug('Disabling verbose debug for modules', modules);                                                  // 225
        module.change.setting('verbose', false, modules, modifyExisting);                                              // 226
      }                                                                                                                // 227
    },                                                                                                                 // 228
                                                                                                                       // 229
    console: function(enable) {                                                                                        // 230
      if(enable) {                                                                                                     // 231
        if(instance.cache.console === undefined) {                                                                     // 232
          module.error(error.console);                                                                                 // 233
          return;                                                                                                      // 234
        }                                                                                                              // 235
        module.debug('Restoring console function');                                                                    // 236
        window.console = instance.cache.console;                                                                       // 237
      }                                                                                                                // 238
      else {                                                                                                           // 239
        module.debug('Disabling console function');                                                                    // 240
        instance.cache.console = window.console;                                                                       // 241
        window.console = {                                                                                             // 242
          clear          : function(){},                                                                               // 243
          error          : function(){},                                                                               // 244
          group          : function(){},                                                                               // 245
          groupCollapsed : function(){},                                                                               // 246
          groupEnd       : function(){},                                                                               // 247
          info           : function(){},                                                                               // 248
          log            : function(){},                                                                               // 249
          markTimeline   : function(){},                                                                               // 250
          warn           : function(){}                                                                                // 251
        };                                                                                                             // 252
      }                                                                                                                // 253
    },                                                                                                                 // 254
                                                                                                                       // 255
    destroy: function() {                                                                                              // 256
      module.verbose('Destroying previous site for', $module);                                                         // 257
      $module                                                                                                          // 258
        .removeData(moduleNamespace)                                                                                   // 259
      ;                                                                                                                // 260
    },                                                                                                                 // 261
                                                                                                                       // 262
    cache: {},                                                                                                         // 263
                                                                                                                       // 264
    setting: function(name, value) {                                                                                   // 265
      if( $.isPlainObject(name) ) {                                                                                    // 266
        $.extend(true, settings, name);                                                                                // 267
      }                                                                                                                // 268
      else if(value !== undefined) {                                                                                   // 269
        settings[name] = value;                                                                                        // 270
      }                                                                                                                // 271
      else {                                                                                                           // 272
        return settings[name];                                                                                         // 273
      }                                                                                                                // 274
    },                                                                                                                 // 275
    internal: function(name, value) {                                                                                  // 276
      if( $.isPlainObject(name) ) {                                                                                    // 277
        $.extend(true, module, name);                                                                                  // 278
      }                                                                                                                // 279
      else if(value !== undefined) {                                                                                   // 280
        module[name] = value;                                                                                          // 281
      }                                                                                                                // 282
      else {                                                                                                           // 283
        return module[name];                                                                                           // 284
      }                                                                                                                // 285
    },                                                                                                                 // 286
    debug: function() {                                                                                                // 287
      if(settings.debug) {                                                                                             // 288
        if(settings.performance) {                                                                                     // 289
          module.performance.log(arguments);                                                                           // 290
        }                                                                                                              // 291
        else {                                                                                                         // 292
          module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                     // 293
          module.debug.apply(console, arguments);                                                                      // 294
        }                                                                                                              // 295
      }                                                                                                                // 296
    },                                                                                                                 // 297
    verbose: function() {                                                                                              // 298
      if(settings.verbose && settings.debug) {                                                                         // 299
        if(settings.performance) {                                                                                     // 300
          module.performance.log(arguments);                                                                           // 301
        }                                                                                                              // 302
        else {                                                                                                         // 303
          module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');                   // 304
          module.verbose.apply(console, arguments);                                                                    // 305
        }                                                                                                              // 306
      }                                                                                                                // 307
    },                                                                                                                 // 308
    error: function() {                                                                                                // 309
      module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                        // 310
      module.error.apply(console, arguments);                                                                          // 311
    },                                                                                                                 // 312
    performance: {                                                                                                     // 313
      log: function(message) {                                                                                         // 314
        var                                                                                                            // 315
          currentTime,                                                                                                 // 316
          executionTime,                                                                                               // 317
          previousTime                                                                                                 // 318
        ;                                                                                                              // 319
        if(settings.performance) {                                                                                     // 320
          currentTime   = new Date().getTime();                                                                        // 321
          previousTime  = time || currentTime;                                                                         // 322
          executionTime = currentTime - previousTime;                                                                  // 323
          time          = currentTime;                                                                                 // 324
          performance.push({                                                                                           // 325
            'Element'        : element,                                                                                // 326
            'Name'           : message[0],                                                                             // 327
            'Arguments'      : [].slice.call(message, 1) || '',                                                        // 328
            'Execution Time' : executionTime                                                                           // 329
          });                                                                                                          // 330
        }                                                                                                              // 331
        clearTimeout(module.performance.timer);                                                                        // 332
        module.performance.timer = setTimeout(module.performance.display, 500);                                        // 333
      },                                                                                                               // 334
      display: function() {                                                                                            // 335
        var                                                                                                            // 336
          title = settings.name + ':',                                                                                 // 337
          totalTime = 0                                                                                                // 338
        ;                                                                                                              // 339
        time = false;                                                                                                  // 340
        clearTimeout(module.performance.timer);                                                                        // 341
        $.each(performance, function(index, data) {                                                                    // 342
          totalTime += data['Execution Time'];                                                                         // 343
        });                                                                                                            // 344
        title += ' ' + totalTime + 'ms';                                                                               // 345
        if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {                  // 346
          console.groupCollapsed(title);                                                                               // 347
          if(console.table) {                                                                                          // 348
            console.table(performance);                                                                                // 349
          }                                                                                                            // 350
          else {                                                                                                       // 351
            $.each(performance, function(index, data) {                                                                // 352
              console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                          // 353
            });                                                                                                        // 354
          }                                                                                                            // 355
          console.groupEnd();                                                                                          // 356
        }                                                                                                              // 357
        performance = [];                                                                                              // 358
      }                                                                                                                // 359
    },                                                                                                                 // 360
    invoke: function(query, passedArguments, context) {                                                                // 361
      var                                                                                                              // 362
        object = instance,                                                                                             // 363
        maxDepth,                                                                                                      // 364
        found,                                                                                                         // 365
        response                                                                                                       // 366
      ;                                                                                                                // 367
      passedArguments = passedArguments || queryArguments;                                                             // 368
      context         = element         || context;                                                                    // 369
      if(typeof query == 'string' && object !== undefined) {                                                           // 370
        query    = query.split(/[\. ]/);                                                                               // 371
        maxDepth = query.length - 1;                                                                                   // 372
        $.each(query, function(depth, value) {                                                                         // 373
          var camelCaseValue = (depth != maxDepth)                                                                     // 374
            ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                             // 375
            : query                                                                                                    // 376
          ;                                                                                                            // 377
          if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                     // 378
            object = object[camelCaseValue];                                                                           // 379
          }                                                                                                            // 380
          else if( object[camelCaseValue] !== undefined ) {                                                            // 381
            found = object[camelCaseValue];                                                                            // 382
            return false;                                                                                              // 383
          }                                                                                                            // 384
          else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                         // 385
            object = object[value];                                                                                    // 386
          }                                                                                                            // 387
          else if( object[value] !== undefined ) {                                                                     // 388
            found = object[value];                                                                                     // 389
            return false;                                                                                              // 390
          }                                                                                                            // 391
          else {                                                                                                       // 392
            module.error(error.method, query);                                                                         // 393
            return false;                                                                                              // 394
          }                                                                                                            // 395
        });                                                                                                            // 396
      }                                                                                                                // 397
      if ( $.isFunction( found ) ) {                                                                                   // 398
        response = found.apply(context, passedArguments);                                                              // 399
      }                                                                                                                // 400
      else if(found !== undefined) {                                                                                   // 401
        response = found;                                                                                              // 402
      }                                                                                                                // 403
      if($.isArray(returnedValue)) {                                                                                   // 404
        returnedValue.push(response);                                                                                  // 405
      }                                                                                                                // 406
      else if(returnedValue !== undefined) {                                                                           // 407
        returnedValue = [returnedValue, response];                                                                     // 408
      }                                                                                                                // 409
      else if(response !== undefined) {                                                                                // 410
        returnedValue = response;                                                                                      // 411
      }                                                                                                                // 412
      return found;                                                                                                    // 413
    }                                                                                                                  // 414
  };                                                                                                                   // 415
                                                                                                                       // 416
  if(methodInvoked) {                                                                                                  // 417
    if(instance === undefined) {                                                                                       // 418
      module.initialize();                                                                                             // 419
    }                                                                                                                  // 420
    module.invoke(query);                                                                                              // 421
  }                                                                                                                    // 422
  else {                                                                                                               // 423
    if(instance !== undefined) {                                                                                       // 424
      module.destroy();                                                                                                // 425
    }                                                                                                                  // 426
    module.initialize();                                                                                               // 427
  }                                                                                                                    // 428
  return (returnedValue !== undefined)                                                                                 // 429
    ? returnedValue                                                                                                    // 430
    : this                                                                                                             // 431
  ;                                                                                                                    // 432
};                                                                                                                     // 433
                                                                                                                       // 434
$.site.settings = {                                                                                                    // 435
                                                                                                                       // 436
  name        : 'Site',                                                                                                // 437
  namespace   : 'site',                                                                                                // 438
                                                                                                                       // 439
  error : {                                                                                                            // 440
    console : 'Console cannot be restored, most likely it was overwritten outside of module',                          // 441
    method : 'The method you called is not defined.'                                                                   // 442
  },                                                                                                                   // 443
                                                                                                                       // 444
  debug       : false,                                                                                                 // 445
  verbose     : false,                                                                                                 // 446
  performance : true,                                                                                                  // 447
                                                                                                                       // 448
  modules: [                                                                                                           // 449
    'accordion',                                                                                                       // 450
    'api',                                                                                                             // 451
    'checkbox',                                                                                                        // 452
    'dimmer',                                                                                                          // 453
    'dropdown',                                                                                                        // 454
    'embed',                                                                                                           // 455
    'form',                                                                                                            // 456
    'modal',                                                                                                           // 457
    'nag',                                                                                                             // 458
    'popup',                                                                                                           // 459
    'rating',                                                                                                          // 460
    'shape',                                                                                                           // 461
    'sidebar',                                                                                                         // 462
    'state',                                                                                                           // 463
    'sticky',                                                                                                          // 464
    'tab',                                                                                                             // 465
    'transition',                                                                                                      // 466
    'visit',                                                                                                           // 467
    'visibility'                                                                                                       // 468
  ],                                                                                                                   // 469
                                                                                                                       // 470
  siteNamespace   : 'site',                                                                                            // 471
  namespaceStub   : {                                                                                                  // 472
    cache     : {},                                                                                                    // 473
    config    : {},                                                                                                    // 474
    sections  : {},                                                                                                    // 475
    section   : {},                                                                                                    // 476
    utilities : {}                                                                                                     // 477
  }                                                                                                                    // 478
                                                                                                                       // 479
};                                                                                                                     // 480
                                                                                                                       // 481
// allows for selection of elements with data attributes                                                               // 482
$.extend($.expr[ ":" ], {                                                                                              // 483
  data: ($.expr.createPseudo)                                                                                          // 484
    ? $.expr.createPseudo(function(dataName) {                                                                         // 485
        return function(elem) {                                                                                        // 486
          return !!$.data(elem, dataName);                                                                             // 487
        };                                                                                                             // 488
      })                                                                                                               // 489
    : function(elem, i, match) {                                                                                       // 490
      // support: jQuery < 1.8                                                                                         // 491
      return !!$.data(elem, match[ 3 ]);                                                                               // 492
    }                                                                                                                  // 493
});                                                                                                                    // 494
                                                                                                                       // 495
                                                                                                                       // 496
})( jQuery, window , document );                                                                                       // 497
/*!                                                                                                                    // 498
 * # Semantic UI 2.1.2 - Form Validation                                                                               // 499
 * http://github.com/semantic-org/semantic-ui/                                                                         // 500
 *                                                                                                                     // 501
 *                                                                                                                     // 502
 * Copyright 2015 Contributors                                                                                         // 503
 * Released under the MIT license                                                                                      // 504
 * http://opensource.org/licenses/MIT                                                                                  // 505
 *                                                                                                                     // 506
 */                                                                                                                    // 507
                                                                                                                       // 508
;(function ( $, window, document, undefined ) {                                                                        // 509
                                                                                                                       // 510
"use strict";                                                                                                          // 511
                                                                                                                       // 512
$.fn.form = function(parameters) {                                                                                     // 513
  var                                                                                                                  // 514
    $allModules      = $(this),                                                                                        // 515
    moduleSelector   = $allModules.selector || '',                                                                     // 516
                                                                                                                       // 517
    time             = new Date().getTime(),                                                                           // 518
    performance      = [],                                                                                             // 519
                                                                                                                       // 520
    query            = arguments[0],                                                                                   // 521
    legacyParameters = arguments[1],                                                                                   // 522
    methodInvoked    = (typeof query == 'string'),                                                                     // 523
    queryArguments   = [].slice.call(arguments, 1),                                                                    // 524
    returnedValue                                                                                                      // 525
  ;                                                                                                                    // 526
  $allModules                                                                                                          // 527
    .each(function() {                                                                                                 // 528
      var                                                                                                              // 529
        $module     = $(this),                                                                                         // 530
        element     = this,                                                                                            // 531
                                                                                                                       // 532
        formErrors  = [],                                                                                              // 533
        keyHeldDown = false,                                                                                           // 534
                                                                                                                       // 535
        // set at run-time                                                                                             // 536
        $field,                                                                                                        // 537
        $group,                                                                                                        // 538
        $message,                                                                                                      // 539
        $prompt,                                                                                                       // 540
        $submit,                                                                                                       // 541
        $clear,                                                                                                        // 542
        $reset,                                                                                                        // 543
                                                                                                                       // 544
        settings,                                                                                                      // 545
        validation,                                                                                                    // 546
                                                                                                                       // 547
        metadata,                                                                                                      // 548
        selector,                                                                                                      // 549
        className,                                                                                                     // 550
        error,                                                                                                         // 551
                                                                                                                       // 552
        namespace,                                                                                                     // 553
        moduleNamespace,                                                                                               // 554
        eventNamespace,                                                                                                // 555
                                                                                                                       // 556
        instance,                                                                                                      // 557
        module                                                                                                         // 558
      ;                                                                                                                // 559
                                                                                                                       // 560
      module      = {                                                                                                  // 561
                                                                                                                       // 562
        initialize: function() {                                                                                       // 563
                                                                                                                       // 564
          // settings grabbed at run time                                                                              // 565
          module.get.settings();                                                                                       // 566
          if(methodInvoked) {                                                                                          // 567
            if(instance === undefined) {                                                                               // 568
              module.instantiate();                                                                                    // 569
            }                                                                                                          // 570
            module.invoke(query);                                                                                      // 571
          }                                                                                                            // 572
          else {                                                                                                       // 573
            module.verbose('Initializing form validation', $module, settings);                                         // 574
            module.bindEvents();                                                                                       // 575
            module.set.defaults();                                                                                     // 576
            module.instantiate();                                                                                      // 577
          }                                                                                                            // 578
        },                                                                                                             // 579
                                                                                                                       // 580
        instantiate: function() {                                                                                      // 581
          module.verbose('Storing instance of module', module);                                                        // 582
          instance = module;                                                                                           // 583
          $module                                                                                                      // 584
            .data(moduleNamespace, module)                                                                             // 585
          ;                                                                                                            // 586
        },                                                                                                             // 587
                                                                                                                       // 588
        destroy: function() {                                                                                          // 589
          module.verbose('Destroying previous module', instance);                                                      // 590
          module.removeEvents();                                                                                       // 591
          $module                                                                                                      // 592
            .removeData(moduleNamespace)                                                                               // 593
          ;                                                                                                            // 594
        },                                                                                                             // 595
                                                                                                                       // 596
        refresh: function() {                                                                                          // 597
          module.verbose('Refreshing selector cache');                                                                 // 598
          $field      = $module.find(selector.field);                                                                  // 599
          $group      = $module.find(selector.group);                                                                  // 600
          $message    = $module.find(selector.message);                                                                // 601
          $prompt     = $module.find(selector.prompt);                                                                 // 602
                                                                                                                       // 603
          $submit     = $module.find(selector.submit);                                                                 // 604
          $clear      = $module.find(selector.clear);                                                                  // 605
          $reset      = $module.find(selector.reset);                                                                  // 606
        },                                                                                                             // 607
                                                                                                                       // 608
        submit: function() {                                                                                           // 609
          module.verbose('Submitting form', $module);                                                                  // 610
          $module                                                                                                      // 611
            .submit()                                                                                                  // 612
          ;                                                                                                            // 613
        },                                                                                                             // 614
                                                                                                                       // 615
        attachEvents: function(selector, action) {                                                                     // 616
          action = action || 'submit';                                                                                 // 617
          $(selector)                                                                                                  // 618
            .on('click' + eventNamespace, function(event) {                                                            // 619
              module[action]();                                                                                        // 620
              event.preventDefault();                                                                                  // 621
            })                                                                                                         // 622
          ;                                                                                                            // 623
        },                                                                                                             // 624
                                                                                                                       // 625
        bindEvents: function() {                                                                                       // 626
          module.verbose('Attaching form events');                                                                     // 627
          $module                                                                                                      // 628
            .on('submit' + eventNamespace, module.validate.form)                                                       // 629
            .on('blur'   + eventNamespace, selector.field, module.event.field.blur)                                    // 630
            .on('click'  + eventNamespace, selector.submit, module.submit)                                             // 631
            .on('click'  + eventNamespace, selector.reset, module.reset)                                               // 632
            .on('click'  + eventNamespace, selector.clear, module.clear)                                               // 633
          ;                                                                                                            // 634
          if(settings.keyboardShortcuts) {                                                                             // 635
            $module                                                                                                    // 636
              .on('keydown' + eventNamespace, selector.field, module.event.field.keydown)                              // 637
            ;                                                                                                          // 638
          }                                                                                                            // 639
          $field                                                                                                       // 640
            .each(function() {                                                                                         // 641
              var                                                                                                      // 642
                $input     = $(this),                                                                                  // 643
                type       = $input.prop('type'),                                                                      // 644
                inputEvent = module.get.changeEvent(type, $input)                                                      // 645
              ;                                                                                                        // 646
              $(this)                                                                                                  // 647
                .on(inputEvent + eventNamespace, module.event.field.change)                                            // 648
              ;                                                                                                        // 649
            })                                                                                                         // 650
          ;                                                                                                            // 651
        },                                                                                                             // 652
                                                                                                                       // 653
        clear: function() {                                                                                            // 654
          $field                                                                                                       // 655
            .each(function () {                                                                                        // 656
              var                                                                                                      // 657
                $field       = $(this),                                                                                // 658
                $element     = $field.parent(),                                                                        // 659
                $fieldGroup  = $field.closest($group),                                                                 // 660
                $prompt      = $fieldGroup.find(selector.prompt),                                                      // 661
                defaultValue = $field.data(metadata.defaultValue) || '',                                               // 662
                isCheckbox   = $element.is(selector.uiCheckbox),                                                       // 663
                isDropdown   = $element.is(selector.uiDropdown),                                                       // 664
                isErrored    = $fieldGroup.hasClass(className.error)                                                   // 665
              ;                                                                                                        // 666
              if(isErrored) {                                                                                          // 667
                module.verbose('Resetting error on field', $fieldGroup);                                               // 668
                $fieldGroup.removeClass(className.error);                                                              // 669
                $prompt.remove();                                                                                      // 670
              }                                                                                                        // 671
              if(isDropdown) {                                                                                         // 672
                module.verbose('Resetting dropdown value', $element, defaultValue);                                    // 673
                $element.dropdown('clear');                                                                            // 674
              }                                                                                                        // 675
              else if(isCheckbox) {                                                                                    // 676
                $field.prop('checked', false);                                                                         // 677
              }                                                                                                        // 678
              else {                                                                                                   // 679
                module.verbose('Resetting field value', $field, defaultValue);                                         // 680
                $field.val('');                                                                                        // 681
              }                                                                                                        // 682
            })                                                                                                         // 683
          ;                                                                                                            // 684
        },                                                                                                             // 685
                                                                                                                       // 686
        reset: function() {                                                                                            // 687
          $field                                                                                                       // 688
            .each(function () {                                                                                        // 689
              var                                                                                                      // 690
                $field       = $(this),                                                                                // 691
                $element     = $field.parent(),                                                                        // 692
                $fieldGroup  = $field.closest($group),                                                                 // 693
                $prompt      = $fieldGroup.find(selector.prompt),                                                      // 694
                defaultValue = $field.data(metadata.defaultValue),                                                     // 695
                isCheckbox   = $element.is(selector.uiCheckbox),                                                       // 696
                isDropdown   = $element.is(selector.uiDropdown),                                                       // 697
                isErrored    = $fieldGroup.hasClass(className.error)                                                   // 698
              ;                                                                                                        // 699
              if(defaultValue === undefined) {                                                                         // 700
                return;                                                                                                // 701
              }                                                                                                        // 702
              if(isErrored) {                                                                                          // 703
                module.verbose('Resetting error on field', $fieldGroup);                                               // 704
                $fieldGroup.removeClass(className.error);                                                              // 705
                $prompt.remove();                                                                                      // 706
              }                                                                                                        // 707
              if(isDropdown) {                                                                                         // 708
                module.verbose('Resetting dropdown value', $element, defaultValue);                                    // 709
                $element.dropdown('restore defaults');                                                                 // 710
              }                                                                                                        // 711
              else if(isCheckbox) {                                                                                    // 712
                module.verbose('Resetting checkbox value', $element, defaultValue);                                    // 713
                $field.prop('checked', defaultValue);                                                                  // 714
              }                                                                                                        // 715
              else {                                                                                                   // 716
                module.verbose('Resetting field value', $field, defaultValue);                                         // 717
                $field.val(defaultValue);                                                                              // 718
              }                                                                                                        // 719
            })                                                                                                         // 720
          ;                                                                                                            // 721
        },                                                                                                             // 722
                                                                                                                       // 723
        is: {                                                                                                          // 724
          valid: function() {                                                                                          // 725
            var                                                                                                        // 726
              allValid = true                                                                                          // 727
            ;                                                                                                          // 728
            module.verbose('Checking if form is valid');                                                               // 729
            $.each(validation, function(fieldName, field) {                                                            // 730
              if( !( module.validate.field(field) ) ) {                                                                // 731
                allValid = false;                                                                                      // 732
              }                                                                                                        // 733
            });                                                                                                        // 734
            return allValid;                                                                                           // 735
          }                                                                                                            // 736
        },                                                                                                             // 737
                                                                                                                       // 738
        removeEvents: function() {                                                                                     // 739
          $module                                                                                                      // 740
            .off(eventNamespace)                                                                                       // 741
          ;                                                                                                            // 742
          $field                                                                                                       // 743
            .off(eventNamespace)                                                                                       // 744
          ;                                                                                                            // 745
          $submit                                                                                                      // 746
            .off(eventNamespace)                                                                                       // 747
          ;                                                                                                            // 748
          $field                                                                                                       // 749
            .off(eventNamespace)                                                                                       // 750
          ;                                                                                                            // 751
        },                                                                                                             // 752
                                                                                                                       // 753
        event: {                                                                                                       // 754
          field: {                                                                                                     // 755
            keydown: function(event) {                                                                                 // 756
              var                                                                                                      // 757
                $field  = $(this),                                                                                     // 758
                key     = event.which,                                                                                 // 759
                keyCode = {                                                                                            // 760
                  enter  : 13,                                                                                         // 761
                  escape : 27                                                                                          // 762
                }                                                                                                      // 763
              ;                                                                                                        // 764
              if( key == keyCode.escape) {                                                                             // 765
                module.verbose('Escape key pressed blurring field');                                                   // 766
                $field                                                                                                 // 767
                  .blur()                                                                                              // 768
                ;                                                                                                      // 769
              }                                                                                                        // 770
              if(!event.ctrlKey && key == keyCode.enter && $field.is(selector.input) && $field.not(selector.checkbox).length > 0 ) {
                if(!keyHeldDown) {                                                                                     // 772
                  $field                                                                                               // 773
                    .one('keyup' + eventNamespace, module.event.field.keyup)                                           // 774
                  ;                                                                                                    // 775
                  module.submit();                                                                                     // 776
                  module.debug('Enter pressed on input submitting form');                                              // 777
                }                                                                                                      // 778
                keyHeldDown = true;                                                                                    // 779
              }                                                                                                        // 780
            },                                                                                                         // 781
            keyup: function() {                                                                                        // 782
              keyHeldDown = false;                                                                                     // 783
            },                                                                                                         // 784
            blur: function() {                                                                                         // 785
              var                                                                                                      // 786
                $field          = $(this),                                                                             // 787
                $fieldGroup     = $field.closest($group),                                                              // 788
                validationRules = module.get.validation($field)                                                        // 789
              ;                                                                                                        // 790
              if( $fieldGroup.hasClass(className.error) ) {                                                            // 791
                module.debug('Revalidating field', $field, validationRules);                                           // 792
                module.validate.field( validationRules );                                                              // 793
              }                                                                                                        // 794
              else if(settings.on == 'blur' || settings.on == 'change') {                                              // 795
                module.validate.field( validationRules );                                                              // 796
              }                                                                                                        // 797
            },                                                                                                         // 798
            change: function() {                                                                                       // 799
              var                                                                                                      // 800
                $field      = $(this),                                                                                 // 801
                $fieldGroup = $field.closest($group)                                                                   // 802
              ;                                                                                                        // 803
              if(settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) ) {        // 804
                clearTimeout(module.timer);                                                                            // 805
                module.timer = setTimeout(function() {                                                                 // 806
                  module.debug('Revalidating field', $field,  module.get.validation($field));                          // 807
                  module.validate.field( module.get.validation($field) );                                              // 808
                }, settings.delay);                                                                                    // 809
              }                                                                                                        // 810
            }                                                                                                          // 811
          }                                                                                                            // 812
                                                                                                                       // 813
        },                                                                                                             // 814
                                                                                                                       // 815
        get: {                                                                                                         // 816
          changeEvent: function(type, $input) {                                                                        // 817
            if(type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {                     // 818
              return 'change';                                                                                         // 819
            }                                                                                                          // 820
            else {                                                                                                     // 821
              return module.get.inputEvent();                                                                          // 822
            }                                                                                                          // 823
          },                                                                                                           // 824
          inputEvent: function() {                                                                                     // 825
            return (document.createElement('input').oninput !== undefined)                                             // 826
              ? 'input'                                                                                                // 827
              : (document.createElement('input').onpropertychange !== undefined)                                       // 828
                ? 'propertychange'                                                                                     // 829
                : 'keyup'                                                                                              // 830
            ;                                                                                                          // 831
          },                                                                                                           // 832
          settings: function() {                                                                                       // 833
            var                                                                                                        // 834
              firstProperty                                                                                            // 835
            ;                                                                                                          // 836
            if($.isPlainObject(parameters)) {                                                                          // 837
              var                                                                                                      // 838
                keys             = Object.keys(parameters),                                                            // 839
                isLegacySettings = (keys.length > 0)                                                                   // 840
                  ? (parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined)          // 841
                  : false                                                                                              // 842
              ;                                                                                                        // 843
              if(isLegacySettings) {                                                                                   // 844
                // 1.x (ducktyped)                                                                                     // 845
                settings   = $.extend(true, {}, $.fn.form.settings, legacyParameters);                                 // 846
                validation = $.extend({}, $.fn.form.settings.defaults, parameters);                                    // 847
                module.error(settings.error.oldSyntax, element);                                                       // 848
                module.verbose('Extending settings from legacy parameters', validation, settings);                     // 849
              }                                                                                                        // 850
              else {                                                                                                   // 851
                // 2.x                                                                                                 // 852
                settings   = $.extend(true, {}, $.fn.form.settings, parameters);                                       // 853
                validation = $.extend({}, $.fn.form.settings.defaults, settings.fields);                               // 854
                module.verbose('Extending settings', validation, settings);                                            // 855
              }                                                                                                        // 856
            }                                                                                                          // 857
            else {                                                                                                     // 858
              settings   = $.fn.form.settings;                                                                         // 859
              validation = $.fn.form.settings.defaults;                                                                // 860
              module.verbose('Using default form validation', validation, settings);                                   // 861
            }                                                                                                          // 862
                                                                                                                       // 863
            // shorthand                                                                                               // 864
            namespace       = settings.namespace;                                                                      // 865
            metadata        = settings.metadata;                                                                       // 866
            selector        = settings.selector;                                                                       // 867
            className       = settings.className;                                                                      // 868
            error           = settings.error;                                                                          // 869
            moduleNamespace = 'module-' + namespace;                                                                   // 870
            eventNamespace  = '.' + namespace;                                                                         // 871
                                                                                                                       // 872
            // grab instance                                                                                           // 873
            instance = $module.data(moduleNamespace);                                                                  // 874
                                                                                                                       // 875
            // refresh selector cache                                                                                  // 876
            module.refresh();                                                                                          // 877
          },                                                                                                           // 878
          field: function(identifier) {                                                                                // 879
            module.verbose('Finding field with identifier', identifier);                                               // 880
            if( $field.filter('#' + identifier).length > 0 ) {                                                         // 881
              return $field.filter('#' + identifier);                                                                  // 882
            }                                                                                                          // 883
            else if( $field.filter('[name="' + identifier +'"]').length > 0 ) {                                        // 884
              return $field.filter('[name="' + identifier +'"]');                                                      // 885
            }                                                                                                          // 886
            else if( $field.filter('[name="' + identifier +'[]"]').length > 0 ) {                                      // 887
              return $field.filter('[name="' + identifier +'[]"]');                                                    // 888
            }                                                                                                          // 889
            else if( $field.filter('[data-' + metadata.validate + '="'+ identifier +'"]').length > 0 ) {               // 890
              return $field.filter('[data-' + metadata.validate + '="'+ identifier +'"]');                             // 891
            }                                                                                                          // 892
            return $('<input/>');                                                                                      // 893
          },                                                                                                           // 894
          fields: function(fields) {                                                                                   // 895
            var                                                                                                        // 896
              $fields = $()                                                                                            // 897
            ;                                                                                                          // 898
            $.each(fields, function(index, name) {                                                                     // 899
              $fields = $fields.add( module.get.field(name) );                                                         // 900
            });                                                                                                        // 901
            return $fields;                                                                                            // 902
          },                                                                                                           // 903
          validation: function($field) {                                                                               // 904
            var                                                                                                        // 905
              rules                                                                                                    // 906
            ;                                                                                                          // 907
            if(!validation) {                                                                                          // 908
              return false;                                                                                            // 909
            }                                                                                                          // 910
            $.each(validation, function(fieldName, field) {                                                            // 911
              if( module.get.field(field.identifier)[0] == $field[0] ) {                                               // 912
                rules = field;                                                                                         // 913
              }                                                                                                        // 914
            });                                                                                                        // 915
            return rules || false;                                                                                     // 916
          },                                                                                                           // 917
          value: function (field) {                                                                                    // 918
            var                                                                                                        // 919
              fields = [],                                                                                             // 920
              results                                                                                                  // 921
            ;                                                                                                          // 922
            fields.push(field);                                                                                        // 923
            results = module.get.values.call(element, fields);                                                         // 924
            return results[field];                                                                                     // 925
          },                                                                                                           // 926
          values: function (fields) {                                                                                  // 927
            var                                                                                                        // 928
              $fields = $.isArray(fields)                                                                              // 929
                ? module.get.fields(fields)                                                                            // 930
                : $field,                                                                                              // 931
              values = {}                                                                                              // 932
            ;                                                                                                          // 933
            $fields.each(function(index, field) {                                                                      // 934
              var                                                                                                      // 935
                $field     = $(field),                                                                                 // 936
                type       = $field.prop('type'),                                                                      // 937
                name       = $field.prop('name'),                                                                      // 938
                value      = $field.val(),                                                                             // 939
                isCheckbox = $field.is(selector.checkbox),                                                             // 940
                isRadio    = $field.is(selector.radio),                                                                // 941
                isMultiple = (name.indexOf('[]') !== -1),                                                              // 942
                isChecked  = (isCheckbox)                                                                              // 943
                  ? $field.is(':checked')                                                                              // 944
                  : false                                                                                              // 945
              ;                                                                                                        // 946
              if(name) {                                                                                               // 947
                if(isMultiple) {                                                                                       // 948
                  name = name.replace('[]', '');                                                                       // 949
                  if(!values[name]) {                                                                                  // 950
                    values[name] = [];                                                                                 // 951
                  }                                                                                                    // 952
                  if(isCheckbox) {                                                                                     // 953
                    if(isChecked) {                                                                                    // 954
                      values[name].push(true);                                                                         // 955
                    }                                                                                                  // 956
                    else {                                                                                             // 957
                      values[name].push(false);                                                                        // 958
                    }                                                                                                  // 959
                  }                                                                                                    // 960
                  else {                                                                                               // 961
                    values[name].push(value);                                                                          // 962
                  }                                                                                                    // 963
                }                                                                                                      // 964
                else {                                                                                                 // 965
                  if(isRadio) {                                                                                        // 966
                    if(isChecked) {                                                                                    // 967
                      values[name] = value;                                                                            // 968
                    }                                                                                                  // 969
                  }                                                                                                    // 970
                  else if(isCheckbox) {                                                                                // 971
                    if(isChecked) {                                                                                    // 972
                      values[name] = true;                                                                             // 973
                    }                                                                                                  // 974
                    else {                                                                                             // 975
                      values[name] = false;                                                                            // 976
                    }                                                                                                  // 977
                  }                                                                                                    // 978
                  else {                                                                                               // 979
                    values[name] = value;                                                                              // 980
                  }                                                                                                    // 981
                }                                                                                                      // 982
              }                                                                                                        // 983
            });                                                                                                        // 984
            return values;                                                                                             // 985
          }                                                                                                            // 986
        },                                                                                                             // 987
                                                                                                                       // 988
        has: {                                                                                                         // 989
                                                                                                                       // 990
          field: function(identifier) {                                                                                // 991
            module.verbose('Checking for existence of a field with identifier', identifier);                           // 992
            if(typeof identifier !== 'string') {                                                                       // 993
              module.error(error.identifier, identifier);                                                              // 994
            }                                                                                                          // 995
            if( $field.filter('#' + identifier).length > 0 ) {                                                         // 996
              return true;                                                                                             // 997
            }                                                                                                          // 998
            else if( $field.filter('[name="' + identifier +'"]').length > 0 ) {                                        // 999
              return true;                                                                                             // 1000
            }                                                                                                          // 1001
            else if( $field.filter('[data-' + metadata.validate + '="'+ identifier +'"]').length > 0 ) {               // 1002
              return true;                                                                                             // 1003
            }                                                                                                          // 1004
            return false;                                                                                              // 1005
          }                                                                                                            // 1006
                                                                                                                       // 1007
        },                                                                                                             // 1008
                                                                                                                       // 1009
        add: {                                                                                                         // 1010
          prompt: function(identifier, errors) {                                                                       // 1011
            var                                                                                                        // 1012
              $field       = module.get.field(identifier),                                                             // 1013
              $fieldGroup  = $field.closest($group),                                                                   // 1014
              $prompt      = $fieldGroup.children(selector.prompt),                                                    // 1015
              promptExists = ($prompt.length !== 0)                                                                    // 1016
            ;                                                                                                          // 1017
            errors = (typeof errors == 'string')                                                                       // 1018
              ? [errors]                                                                                               // 1019
              : errors                                                                                                 // 1020
            ;                                                                                                          // 1021
            module.verbose('Adding field error state', identifier);                                                    // 1022
            $fieldGroup                                                                                                // 1023
              .addClass(className.error)                                                                               // 1024
            ;                                                                                                          // 1025
            if(settings.inline) {                                                                                      // 1026
              if(!promptExists) {                                                                                      // 1027
                $prompt = settings.templates.prompt(errors);                                                           // 1028
                $prompt                                                                                                // 1029
                  .appendTo($fieldGroup)                                                                               // 1030
                ;                                                                                                      // 1031
              }                                                                                                        // 1032
              $prompt                                                                                                  // 1033
                .html(errors[0])                                                                                       // 1034
              ;                                                                                                        // 1035
              if(!promptExists) {                                                                                      // 1036
                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {       // 1037
                  module.verbose('Displaying error with css transition', settings.transition);                         // 1038
                  $prompt.transition(settings.transition + ' in', settings.duration);                                  // 1039
                }                                                                                                      // 1040
                else {                                                                                                 // 1041
                  module.verbose('Displaying error with fallback javascript animation');                               // 1042
                  $prompt                                                                                              // 1043
                    .fadeIn(settings.duration)                                                                         // 1044
                  ;                                                                                                    // 1045
                }                                                                                                      // 1046
              }                                                                                                        // 1047
              else {                                                                                                   // 1048
                module.verbose('Inline errors are disabled, no inline error added', identifier);                       // 1049
              }                                                                                                        // 1050
            }                                                                                                          // 1051
          },                                                                                                           // 1052
          errors: function(errors) {                                                                                   // 1053
            module.debug('Adding form error messages', errors);                                                        // 1054
            $message                                                                                                   // 1055
              .html( settings.templates.error(errors) )                                                                // 1056
            ;                                                                                                          // 1057
          }                                                                                                            // 1058
        },                                                                                                             // 1059
                                                                                                                       // 1060
        remove: {                                                                                                      // 1061
          prompt: function(field) {                                                                                    // 1062
            var                                                                                                        // 1063
              $field      = module.get.field(field.identifier),                                                        // 1064
              $fieldGroup = $field.closest($group),                                                                    // 1065
              $prompt     = $fieldGroup.children(selector.prompt)                                                      // 1066
            ;                                                                                                          // 1067
            $fieldGroup                                                                                                // 1068
              .removeClass(className.error)                                                                            // 1069
            ;                                                                                                          // 1070
            if(settings.inline && $prompt.is(':visible')) {                                                            // 1071
              module.verbose('Removing prompt for field', field);                                                      // 1072
              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {         // 1073
                $prompt.transition(settings.transition + ' out', settings.duration, function() {                       // 1074
                  $prompt.remove();                                                                                    // 1075
                });                                                                                                    // 1076
              }                                                                                                        // 1077
              else {                                                                                                   // 1078
                $prompt                                                                                                // 1079
                  .fadeOut(settings.duration, function(){                                                              // 1080
                    $prompt.remove();                                                                                  // 1081
                  })                                                                                                   // 1082
                ;                                                                                                      // 1083
              }                                                                                                        // 1084
            }                                                                                                          // 1085
          }                                                                                                            // 1086
        },                                                                                                             // 1087
                                                                                                                       // 1088
        set: {                                                                                                         // 1089
          success: function() {                                                                                        // 1090
            $module                                                                                                    // 1091
              .removeClass(className.error)                                                                            // 1092
              .addClass(className.success)                                                                             // 1093
            ;                                                                                                          // 1094
          },                                                                                                           // 1095
          defaults: function () {                                                                                      // 1096
            $field                                                                                                     // 1097
              .each(function () {                                                                                      // 1098
                var                                                                                                    // 1099
                  $field     = $(this),                                                                                // 1100
                  isCheckbox = ($field.filter(selector.checkbox).length > 0),                                          // 1101
                  value      = (isCheckbox)                                                                            // 1102
                    ? $field.is(':checked')                                                                            // 1103
                    : $field.val()                                                                                     // 1104
                ;                                                                                                      // 1105
                $field.data(metadata.defaultValue, value);                                                             // 1106
              })                                                                                                       // 1107
            ;                                                                                                          // 1108
          },                                                                                                           // 1109
          error: function() {                                                                                          // 1110
            $module                                                                                                    // 1111
              .removeClass(className.success)                                                                          // 1112
              .addClass(className.error)                                                                               // 1113
            ;                                                                                                          // 1114
          },                                                                                                           // 1115
          value: function (field, value) {                                                                             // 1116
            var                                                                                                        // 1117
              fields = {}                                                                                              // 1118
            ;                                                                                                          // 1119
            fields[field] = value;                                                                                     // 1120
            return module.set.values.call(element, fields);                                                            // 1121
          },                                                                                                           // 1122
          values: function (fields) {                                                                                  // 1123
            if($.isEmptyObject(fields)) {                                                                              // 1124
              return;                                                                                                  // 1125
            }                                                                                                          // 1126
            $.each(fields, function(key, value) {                                                                      // 1127
              var                                                                                                      // 1128
                $field      = module.get.field(key),                                                                   // 1129
                $element    = $field.parent(),                                                                         // 1130
                isMultiple  = $.isArray(value),                                                                        // 1131
                isCheckbox  = $element.is(selector.uiCheckbox),                                                        // 1132
                isDropdown  = $element.is(selector.uiDropdown),                                                        // 1133
                isRadio     = ($field.is(selector.radio) && isCheckbox),                                               // 1134
                fieldExists = ($field.length > 0),                                                                     // 1135
                $multipleField                                                                                         // 1136
              ;                                                                                                        // 1137
              if(fieldExists) {                                                                                        // 1138
                if(isMultiple && isCheckbox) {                                                                         // 1139
                  module.verbose('Selecting multiple', value, $field);                                                 // 1140
                  $element.checkbox('uncheck');                                                                        // 1141
                  $.each(value, function(index, value) {                                                               // 1142
                    $multipleField = $field.filter('[value="' + value + '"]');                                         // 1143
                    $element       = $multipleField.parent();                                                          // 1144
                    if($multipleField.length > 0) {                                                                    // 1145
                      $element.checkbox('check');                                                                      // 1146
                    }                                                                                                  // 1147
                  });                                                                                                  // 1148
                }                                                                                                      // 1149
                else if(isRadio) {                                                                                     // 1150
                  module.verbose('Selecting radio value', value, $field);                                              // 1151
                  $field.filter('[value="' + value + '"]')                                                             // 1152
                    .parent(selector.uiCheckbox)                                                                       // 1153
                      .checkbox('check')                                                                               // 1154
                  ;                                                                                                    // 1155
                }                                                                                                      // 1156
                else if(isCheckbox) {                                                                                  // 1157
                  module.verbose('Setting checkbox value', value, $element);                                           // 1158
                  if(value === true) {                                                                                 // 1159
                    $element.checkbox('check');                                                                        // 1160
                  }                                                                                                    // 1161
                  else {                                                                                               // 1162
                    $element.checkbox('uncheck');                                                                      // 1163
                  }                                                                                                    // 1164
                }                                                                                                      // 1165
                else if(isDropdown) {                                                                                  // 1166
                  module.verbose('Setting dropdown value', value, $element);                                           // 1167
                  $element.dropdown('set selected', value);                                                            // 1168
                }                                                                                                      // 1169
                else {                                                                                                 // 1170
                  module.verbose('Setting field value', value, $field);                                                // 1171
                  $field.val(value);                                                                                   // 1172
                }                                                                                                      // 1173
              }                                                                                                        // 1174
            });                                                                                                        // 1175
          }                                                                                                            // 1176
        },                                                                                                             // 1177
                                                                                                                       // 1178
        validate: {                                                                                                    // 1179
                                                                                                                       // 1180
          form: function(event) {                                                                                      // 1181
            var                                                                                                        // 1182
              values = module.get.values(),                                                                            // 1183
              apiRequest                                                                                               // 1184
            ;                                                                                                          // 1185
                                                                                                                       // 1186
            // input keydown event will fire submit repeatedly by browser default                                      // 1187
            if(keyHeldDown) {                                                                                          // 1188
              return false;                                                                                            // 1189
            }                                                                                                          // 1190
                                                                                                                       // 1191
            // reset errors                                                                                            // 1192
            formErrors = [];                                                                                           // 1193
            if( module.is.valid() ) {                                                                                  // 1194
              module.debug('Form has no validation errors, submitting');                                               // 1195
              module.set.success();                                                                                    // 1196
              return settings.onSuccess.call(element, event, values);                                                  // 1197
            }                                                                                                          // 1198
            else {                                                                                                     // 1199
              module.debug('Form has errors');                                                                         // 1200
              module.set.error();                                                                                      // 1201
              if(!settings.inline) {                                                                                   // 1202
                module.add.errors(formErrors);                                                                         // 1203
              }                                                                                                        // 1204
              // prevent ajax submit                                                                                   // 1205
              if($module.data('moduleApi') !== undefined) {                                                            // 1206
                event.stopImmediatePropagation();                                                                      // 1207
              }                                                                                                        // 1208
              return settings.onFailure.call(element, formErrors, values);                                             // 1209
            }                                                                                                          // 1210
          },                                                                                                           // 1211
                                                                                                                       // 1212
          // takes a validation object and returns whether field passes validation                                     // 1213
          field: function(field) {                                                                                     // 1214
            var                                                                                                        // 1215
              $field      = module.get.field(field.identifier),                                                        // 1216
              fieldValid  = true,                                                                                      // 1217
              fieldErrors = []                                                                                         // 1218
            ;                                                                                                          // 1219
            if($field.prop('disabled')) {                                                                              // 1220
              module.debug('Field is disabled. Skipping', field.identifier);                                           // 1221
              fieldValid = true;                                                                                       // 1222
            }                                                                                                          // 1223
            else if(field.optional && $.trim($field.val()) === ''){                                                    // 1224
              module.debug('Field is optional and empty. Skipping', field.identifier);                                 // 1225
              fieldValid = true;                                                                                       // 1226
            }                                                                                                          // 1227
            else if(field.rules !== undefined) {                                                                       // 1228
              $.each(field.rules, function(index, rule) {                                                              // 1229
                if( module.has.field(field.identifier) && !( module.validate.rule(field, rule) ) ) {                   // 1230
                  module.debug('Field is invalid', field.identifier, rule.type);                                       // 1231
                  fieldErrors.push(rule.prompt);                                                                       // 1232
                  fieldValid = false;                                                                                  // 1233
                }                                                                                                      // 1234
              });                                                                                                      // 1235
            }                                                                                                          // 1236
            if(fieldValid) {                                                                                           // 1237
              module.remove.prompt(field, fieldErrors);                                                                // 1238
              settings.onValid.call($field);                                                                           // 1239
            }                                                                                                          // 1240
            else {                                                                                                     // 1241
              formErrors = formErrors.concat(fieldErrors);                                                             // 1242
              module.add.prompt(field.identifier, fieldErrors);                                                        // 1243
              settings.onInvalid.call($field, fieldErrors);                                                            // 1244
              return false;                                                                                            // 1245
            }                                                                                                          // 1246
            return true;                                                                                               // 1247
          },                                                                                                           // 1248
                                                                                                                       // 1249
          // takes validation rule and returns whether field passes rule                                               // 1250
          rule: function(field, validation) {                                                                          // 1251
            var                                                                                                        // 1252
              $field        = module.get.field(field.identifier),                                                      // 1253
              type          = validation.type,                                                                         // 1254
              value         = $field.val(),                                                                            // 1255
              bracket       = type.match(settings.regExp.bracket),                                                     // 1256
              isValid       = true,                                                                                    // 1257
              rule,                                                                                                    // 1258
              ancillary,                                                                                               // 1259
              functionType                                                                                             // 1260
            ;                                                                                                          // 1261
            // cast to string avoiding encoding special values                                                         // 1262
            value = (value === undefined || value === '' || value === null)                                            // 1263
              ? ''                                                                                                     // 1264
              : $.trim(value + '')                                                                                     // 1265
            ;                                                                                                          // 1266
            // if bracket notation is used, pass in extra parameters                                                   // 1267
            if(bracket) {                                                                                              // 1268
              ancillary    = '' + bracket[1];                                                                          // 1269
              functionType = type.replace(bracket[0], '');                                                             // 1270
              rule         = settings.rules[functionType];                                                             // 1271
              if( !$.isFunction(rule) ) {                                                                              // 1272
                module.error(error.noRule, functionType);                                                              // 1273
                return;                                                                                                // 1274
              }                                                                                                        // 1275
              isValid = rule.call($field, value, ancillary);                                                           // 1276
            }                                                                                                          // 1277
            else {                                                                                                     // 1278
              rule = settings.rules[type];                                                                             // 1279
              if( !$.isFunction(rule) ) {                                                                              // 1280
                module.error(error.noRule, type);                                                                      // 1281
                return;                                                                                                // 1282
              }                                                                                                        // 1283
              isValid = rule.call($field, value);                                                                      // 1284
            }                                                                                                          // 1285
            return isValid;                                                                                            // 1286
          }                                                                                                            // 1287
        },                                                                                                             // 1288
                                                                                                                       // 1289
        setting: function(name, value) {                                                                               // 1290
          if( $.isPlainObject(name) ) {                                                                                // 1291
            $.extend(true, settings, name);                                                                            // 1292
          }                                                                                                            // 1293
          else if(value !== undefined) {                                                                               // 1294
            settings[name] = value;                                                                                    // 1295
          }                                                                                                            // 1296
          else {                                                                                                       // 1297
            return settings[name];                                                                                     // 1298
          }                                                                                                            // 1299
        },                                                                                                             // 1300
        internal: function(name, value) {                                                                              // 1301
          if( $.isPlainObject(name) ) {                                                                                // 1302
            $.extend(true, module, name);                                                                              // 1303
          }                                                                                                            // 1304
          else if(value !== undefined) {                                                                               // 1305
            module[name] = value;                                                                                      // 1306
          }                                                                                                            // 1307
          else {                                                                                                       // 1308
            return module[name];                                                                                       // 1309
          }                                                                                                            // 1310
        },                                                                                                             // 1311
        debug: function() {                                                                                            // 1312
          if(settings.debug) {                                                                                         // 1313
            if(settings.performance) {                                                                                 // 1314
              module.performance.log(arguments);                                                                       // 1315
            }                                                                                                          // 1316
            else {                                                                                                     // 1317
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 1318
              module.debug.apply(console, arguments);                                                                  // 1319
            }                                                                                                          // 1320
          }                                                                                                            // 1321
        },                                                                                                             // 1322
        verbose: function() {                                                                                          // 1323
          if(settings.verbose && settings.debug) {                                                                     // 1324
            if(settings.performance) {                                                                                 // 1325
              module.performance.log(arguments);                                                                       // 1326
            }                                                                                                          // 1327
            else {                                                                                                     // 1328
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 1329
              module.verbose.apply(console, arguments);                                                                // 1330
            }                                                                                                          // 1331
          }                                                                                                            // 1332
        },                                                                                                             // 1333
        error: function() {                                                                                            // 1334
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 1335
          module.error.apply(console, arguments);                                                                      // 1336
        },                                                                                                             // 1337
        performance: {                                                                                                 // 1338
          log: function(message) {                                                                                     // 1339
            var                                                                                                        // 1340
              currentTime,                                                                                             // 1341
              executionTime,                                                                                           // 1342
              previousTime                                                                                             // 1343
            ;                                                                                                          // 1344
            if(settings.performance) {                                                                                 // 1345
              currentTime   = new Date().getTime();                                                                    // 1346
              previousTime  = time || currentTime;                                                                     // 1347
              executionTime = currentTime - previousTime;                                                              // 1348
              time          = currentTime;                                                                             // 1349
              performance.push({                                                                                       // 1350
                'Name'           : message[0],                                                                         // 1351
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 1352
                'Element'        : element,                                                                            // 1353
                'Execution Time' : executionTime                                                                       // 1354
              });                                                                                                      // 1355
            }                                                                                                          // 1356
            clearTimeout(module.performance.timer);                                                                    // 1357
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 1358
          },                                                                                                           // 1359
          display: function() {                                                                                        // 1360
            var                                                                                                        // 1361
              title = settings.name + ':',                                                                             // 1362
              totalTime = 0                                                                                            // 1363
            ;                                                                                                          // 1364
            time = false;                                                                                              // 1365
            clearTimeout(module.performance.timer);                                                                    // 1366
            $.each(performance, function(index, data) {                                                                // 1367
              totalTime += data['Execution Time'];                                                                     // 1368
            });                                                                                                        // 1369
            title += ' ' + totalTime + 'ms';                                                                           // 1370
            if(moduleSelector) {                                                                                       // 1371
              title += ' \'' + moduleSelector + '\'';                                                                  // 1372
            }                                                                                                          // 1373
            if($allModules.length > 1) {                                                                               // 1374
              title += ' ' + '(' + $allModules.length + ')';                                                           // 1375
            }                                                                                                          // 1376
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 1377
              console.groupCollapsed(title);                                                                           // 1378
              if(console.table) {                                                                                      // 1379
                console.table(performance);                                                                            // 1380
              }                                                                                                        // 1381
              else {                                                                                                   // 1382
                $.each(performance, function(index, data) {                                                            // 1383
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 1384
                });                                                                                                    // 1385
              }                                                                                                        // 1386
              console.groupEnd();                                                                                      // 1387
            }                                                                                                          // 1388
            performance = [];                                                                                          // 1389
          }                                                                                                            // 1390
        },                                                                                                             // 1391
        invoke: function(query, passedArguments, context) {                                                            // 1392
          var                                                                                                          // 1393
            object = instance,                                                                                         // 1394
            maxDepth,                                                                                                  // 1395
            found,                                                                                                     // 1396
            response                                                                                                   // 1397
          ;                                                                                                            // 1398
          passedArguments = passedArguments || queryArguments;                                                         // 1399
          context         = element         || context;                                                                // 1400
          if(typeof query == 'string' && object !== undefined) {                                                       // 1401
            query    = query.split(/[\. ]/);                                                                           // 1402
            maxDepth = query.length - 1;                                                                               // 1403
            $.each(query, function(depth, value) {                                                                     // 1404
              var camelCaseValue = (depth != maxDepth)                                                                 // 1405
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 1406
                : query                                                                                                // 1407
              ;                                                                                                        // 1408
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 1409
                object = object[camelCaseValue];                                                                       // 1410
              }                                                                                                        // 1411
              else if( object[camelCaseValue] !== undefined ) {                                                        // 1412
                found = object[camelCaseValue];                                                                        // 1413
                return false;                                                                                          // 1414
              }                                                                                                        // 1415
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 1416
                object = object[value];                                                                                // 1417
              }                                                                                                        // 1418
              else if( object[value] !== undefined ) {                                                                 // 1419
                found = object[value];                                                                                 // 1420
                return false;                                                                                          // 1421
              }                                                                                                        // 1422
              else {                                                                                                   // 1423
                return false;                                                                                          // 1424
              }                                                                                                        // 1425
            });                                                                                                        // 1426
          }                                                                                                            // 1427
          if( $.isFunction( found ) ) {                                                                                // 1428
            response = found.apply(context, passedArguments);                                                          // 1429
          }                                                                                                            // 1430
          else if(found !== undefined) {                                                                               // 1431
            response = found;                                                                                          // 1432
          }                                                                                                            // 1433
          if($.isArray(returnedValue)) {                                                                               // 1434
            returnedValue.push(response);                                                                              // 1435
          }                                                                                                            // 1436
          else if(returnedValue !== undefined) {                                                                       // 1437
            returnedValue = [returnedValue, response];                                                                 // 1438
          }                                                                                                            // 1439
          else if(response !== undefined) {                                                                            // 1440
            returnedValue = response;                                                                                  // 1441
          }                                                                                                            // 1442
          return found;                                                                                                // 1443
        }                                                                                                              // 1444
      };                                                                                                               // 1445
      module.initialize();                                                                                             // 1446
    })                                                                                                                 // 1447
  ;                                                                                                                    // 1448
                                                                                                                       // 1449
  return (returnedValue !== undefined)                                                                                 // 1450
    ? returnedValue                                                                                                    // 1451
    : this                                                                                                             // 1452
  ;                                                                                                                    // 1453
};                                                                                                                     // 1454
                                                                                                                       // 1455
$.fn.form.settings = {                                                                                                 // 1456
                                                                                                                       // 1457
  name              : 'Form',                                                                                          // 1458
  namespace         : 'form',                                                                                          // 1459
                                                                                                                       // 1460
  debug             : false,                                                                                           // 1461
  verbose           : false,                                                                                           // 1462
  performance       : true,                                                                                            // 1463
                                                                                                                       // 1464
  fields            : false,                                                                                           // 1465
                                                                                                                       // 1466
  keyboardShortcuts : true,                                                                                            // 1467
  on                : 'submit',                                                                                        // 1468
  inline            : false,                                                                                           // 1469
                                                                                                                       // 1470
  delay             : 200,                                                                                             // 1471
  revalidate        : true,                                                                                            // 1472
                                                                                                                       // 1473
  transition        : 'scale',                                                                                         // 1474
  duration          : 200,                                                                                             // 1475
                                                                                                                       // 1476
  onValid           : function() {},                                                                                   // 1477
  onInvalid         : function() {},                                                                                   // 1478
  onSuccess         : function() { return true; },                                                                     // 1479
  onFailure         : function() { return false; },                                                                    // 1480
                                                                                                                       // 1481
  metadata : {                                                                                                         // 1482
    defaultValue : 'default',                                                                                          // 1483
    validate     : 'validate'                                                                                          // 1484
  },                                                                                                                   // 1485
                                                                                                                       // 1486
  regExp: {                                                                                                            // 1487
    bracket : /\[(.*)\]/i,                                                                                             // 1488
    decimal : /^\-?\d*(\.\d+)?$/,                                                                                      // 1489
    email   : "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
    escape  : /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,                                                                   // 1491
    flags   : /^\/(.*)\/(.*)?/,                                                                                        // 1492
    integer : /^\-?\d+$/,                                                                                              // 1493
    number  : /^\-?\d*(\.\d+)?$/,                                                                                      // 1494
    url     : /(https?:\/\/(?:www\.|(?!www))[^\s\.]+\.[^\s]{2,}|www\.[^\s]+\.[^\s]{2,})/i                              // 1495
  },                                                                                                                   // 1496
                                                                                                                       // 1497
  selector : {                                                                                                         // 1498
    checkbox   : 'input[type="checkbox"], input[type="radio"]',                                                        // 1499
    clear      : '.clear',                                                                                             // 1500
    field      : 'input, textarea, select',                                                                            // 1501
    group      : '.field',                                                                                             // 1502
    input      : 'input',                                                                                              // 1503
    message    : '.error.message',                                                                                     // 1504
    prompt     : '.prompt.label',                                                                                      // 1505
    radio      : 'input[type="radio"]',                                                                                // 1506
    reset      : '.reset:not([type="reset"])',                                                                         // 1507
    submit     : '.submit:not([type="submit"])',                                                                       // 1508
    uiCheckbox : '.ui.checkbox',                                                                                       // 1509
    uiDropdown : '.ui.dropdown'                                                                                        // 1510
  },                                                                                                                   // 1511
                                                                                                                       // 1512
  className : {                                                                                                        // 1513
    error   : 'error',                                                                                                 // 1514
    label   : 'ui prompt label',                                                                                       // 1515
    pressed : 'down',                                                                                                  // 1516
    success : 'success'                                                                                                // 1517
  },                                                                                                                   // 1518
                                                                                                                       // 1519
  error: {                                                                                                             // 1520
    identifier : 'You must specify a string identifier for each field',                                                // 1521
    method     : 'The method you called is not defined.',                                                              // 1522
    noRule     : 'There is no rule matching the one you specified',                                                    // 1523
    oldSyntax  : 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'
  },                                                                                                                   // 1525
                                                                                                                       // 1526
  templates: {                                                                                                         // 1527
                                                                                                                       // 1528
    // template that produces error message                                                                            // 1529
    error: function(errors) {                                                                                          // 1530
      var                                                                                                              // 1531
        html = '<ul class="list">'                                                                                     // 1532
      ;                                                                                                                // 1533
      $.each(errors, function(index, value) {                                                                          // 1534
        html += '<li>' + value + '</li>';                                                                              // 1535
      });                                                                                                              // 1536
      html += '</ul>';                                                                                                 // 1537
      return $(html);                                                                                                  // 1538
    },                                                                                                                 // 1539
                                                                                                                       // 1540
    // template that produces label                                                                                    // 1541
    prompt: function(errors) {                                                                                         // 1542
      return $('<div/>')                                                                                               // 1543
        .addClass('ui basic red pointing prompt label')                                                                // 1544
        .html(errors[0])                                                                                               // 1545
      ;                                                                                                                // 1546
    }                                                                                                                  // 1547
  },                                                                                                                   // 1548
                                                                                                                       // 1549
  rules: {                                                                                                             // 1550
                                                                                                                       // 1551
    // is not empty or blank string                                                                                    // 1552
    empty: function(value) {                                                                                           // 1553
      return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);                         // 1554
    },                                                                                                                 // 1555
                                                                                                                       // 1556
    // checkbox checked                                                                                                // 1557
    checked: function() {                                                                                              // 1558
      return ($(this).filter(':checked').length > 0);                                                                  // 1559
    },                                                                                                                 // 1560
                                                                                                                       // 1561
    // is most likely an email                                                                                         // 1562
    email: function(value){                                                                                            // 1563
      var                                                                                                              // 1564
        emailRegExp = new RegExp($.fn.form.settings.regExp.email, 'i')                                                 // 1565
      ;                                                                                                                // 1566
      return emailRegExp.test(value);                                                                                  // 1567
    },                                                                                                                 // 1568
                                                                                                                       // 1569
    // value is most likely url                                                                                        // 1570
    url: function(value) {                                                                                             // 1571
      return $.fn.form.settings.regExp.url.test(value);                                                                // 1572
    },                                                                                                                 // 1573
                                                                                                                       // 1574
    // matches specified regExp                                                                                        // 1575
    regExp: function(value, regExp) {                                                                                  // 1576
      var                                                                                                              // 1577
        regExpParts = regExp.match($.fn.form.settings.regExp.flags),                                                   // 1578
        flags                                                                                                          // 1579
      ;                                                                                                                // 1580
      // regular expression specified as /baz/gi (flags)                                                               // 1581
      if(regExpParts) {                                                                                                // 1582
        regExp = (regExpParts.length >= 2)                                                                             // 1583
          ? regExpParts[1]                                                                                             // 1584
          : regExp                                                                                                     // 1585
        ;                                                                                                              // 1586
        flags = (regExpParts.length >= 3)                                                                              // 1587
          ? regExpParts[2]                                                                                             // 1588
          : ''                                                                                                         // 1589
        ;                                                                                                              // 1590
      }                                                                                                                // 1591
      return value.match( new RegExp(regExp, flags) );                                                                 // 1592
    },                                                                                                                 // 1593
                                                                                                                       // 1594
    // is valid integer or matches range                                                                               // 1595
    integer: function(value, range) {                                                                                  // 1596
      var                                                                                                              // 1597
        intRegExp = $.fn.form.settings.regExp.integer,                                                                 // 1598
        min,                                                                                                           // 1599
        max,                                                                                                           // 1600
        parts                                                                                                          // 1601
      ;                                                                                                                // 1602
      if(range === undefined || range === '' || range === '..') {                                                      // 1603
        // do nothing                                                                                                  // 1604
      }                                                                                                                // 1605
      else if(range.indexOf('..') == -1) {                                                                             // 1606
        if(intRegExp.test(range)) {                                                                                    // 1607
          min = max = range - 0;                                                                                       // 1608
        }                                                                                                              // 1609
      }                                                                                                                // 1610
      else {                                                                                                           // 1611
        parts = range.split('..', 2);                                                                                  // 1612
        if(intRegExp.test(parts[0])) {                                                                                 // 1613
          min = parts[0] - 0;                                                                                          // 1614
        }                                                                                                              // 1615
        if(intRegExp.test(parts[1])) {                                                                                 // 1616
          max = parts[1] - 0;                                                                                          // 1617
        }                                                                                                              // 1618
      }                                                                                                                // 1619
      return (                                                                                                         // 1620
        intRegExp.test(value) &&                                                                                       // 1621
        (min === undefined || value >= min) &&                                                                         // 1622
        (max === undefined || value <= max)                                                                            // 1623
      );                                                                                                               // 1624
    },                                                                                                                 // 1625
                                                                                                                       // 1626
    // is valid number (with decimal)                                                                                  // 1627
    decimal: function(value) {                                                                                         // 1628
      return $.fn.form.settings.regExp.decimal.test(value);                                                            // 1629
    },                                                                                                                 // 1630
                                                                                                                       // 1631
    // is valid number                                                                                                 // 1632
    number: function(value) {                                                                                          // 1633
      return $.fn.form.settings.regExp.number.test(value);                                                             // 1634
    },                                                                                                                 // 1635
                                                                                                                       // 1636
    // is value (case insensitive)                                                                                     // 1637
    is: function(value, text) {                                                                                        // 1638
      text = (typeof text == 'string')                                                                                 // 1639
        ? text.toLowerCase()                                                                                           // 1640
        : text                                                                                                         // 1641
      ;                                                                                                                // 1642
      value = (typeof value == 'string')                                                                               // 1643
        ? value.toLowerCase()                                                                                          // 1644
        : value                                                                                                        // 1645
      ;                                                                                                                // 1646
      return (value == text);                                                                                          // 1647
    },                                                                                                                 // 1648
                                                                                                                       // 1649
    // is value                                                                                                        // 1650
    isExactly: function(value, text) {                                                                                 // 1651
      return (value == text);                                                                                          // 1652
    },                                                                                                                 // 1653
                                                                                                                       // 1654
    // value is not another value (case insensitive)                                                                   // 1655
    not: function(value, notValue) {                                                                                   // 1656
      value = (typeof value == 'string')                                                                               // 1657
        ? value.toLowerCase()                                                                                          // 1658
        : value                                                                                                        // 1659
      ;                                                                                                                // 1660
      notValue = (typeof notValue == 'string')                                                                         // 1661
        ? notValue.toLowerCase()                                                                                       // 1662
        : notValue                                                                                                     // 1663
      ;                                                                                                                // 1664
      return (value != notValue);                                                                                      // 1665
    },                                                                                                                 // 1666
                                                                                                                       // 1667
    // value is not another value (case sensitive)                                                                     // 1668
    notExactly: function(value, notValue) {                                                                            // 1669
      return (value != notValue);                                                                                      // 1670
    },                                                                                                                 // 1671
                                                                                                                       // 1672
    // value contains text (insensitive)                                                                               // 1673
    contains: function(value, text) {                                                                                  // 1674
      // escape regex characters                                                                                       // 1675
      text = text.replace($.fn.form.settings.regExp.escape, "\\$&");                                                   // 1676
      return (value.search( new RegExp(text, 'i') ) !== -1);                                                           // 1677
    },                                                                                                                 // 1678
                                                                                                                       // 1679
    // value contains text (case sensitive)                                                                            // 1680
    containsExactly: function(value, text) {                                                                           // 1681
      // escape regex characters                                                                                       // 1682
      text = text.replace($.fn.form.settings.regExp.escape, "\\$&");                                                   // 1683
      return (value.search( new RegExp(text) ) !== -1);                                                                // 1684
    },                                                                                                                 // 1685
                                                                                                                       // 1686
    // value contains text (insensitive)                                                                               // 1687
    doesntContain: function(value, text) {                                                                             // 1688
      // escape regex characters                                                                                       // 1689
      text = text.replace($.fn.form.settings.regExp.escape, "\\$&");                                                   // 1690
      return (value.search( new RegExp(text, 'i') ) === -1);                                                           // 1691
    },                                                                                                                 // 1692
                                                                                                                       // 1693
    // value contains text (case sensitive)                                                                            // 1694
    doesntContainExactly: function(value, text) {                                                                      // 1695
      // escape regex characters                                                                                       // 1696
      text = text.replace($.fn.form.settings.regExp.escape, "\\$&");                                                   // 1697
      return (value.search( new RegExp(text) ) === -1);                                                                // 1698
    },                                                                                                                 // 1699
                                                                                                                       // 1700
    // is at least string length                                                                                       // 1701
    minLength: function(value, requiredLength) {                                                                       // 1702
      return (value !== undefined)                                                                                     // 1703
        ? (value.length >= requiredLength)                                                                             // 1704
        : false                                                                                                        // 1705
      ;                                                                                                                // 1706
    },                                                                                                                 // 1707
                                                                                                                       // 1708
    // see rls notes for 2.0.6 (this is a duplicate of minLength)                                                      // 1709
    length: function(value, requiredLength) {                                                                          // 1710
      return (value !== undefined)                                                                                     // 1711
        ? (value.length >= requiredLength)                                                                             // 1712
        : false                                                                                                        // 1713
      ;                                                                                                                // 1714
    },                                                                                                                 // 1715
                                                                                                                       // 1716
    // is exactly length                                                                                               // 1717
    exactLength: function(value, requiredLength) {                                                                     // 1718
      return (value !== undefined)                                                                                     // 1719
        ? (value.length == requiredLength)                                                                             // 1720
        : false                                                                                                        // 1721
      ;                                                                                                                // 1722
    },                                                                                                                 // 1723
                                                                                                                       // 1724
    // is less than length                                                                                             // 1725
    maxLength: function(value, maxLength) {                                                                            // 1726
      return (value !== undefined)                                                                                     // 1727
        ? (value.length <= maxLength)                                                                                  // 1728
        : false                                                                                                        // 1729
      ;                                                                                                                // 1730
    },                                                                                                                 // 1731
                                                                                                                       // 1732
    // matches another field                                                                                           // 1733
    match: function(value, identifier) {                                                                               // 1734
      var                                                                                                              // 1735
        $form = $(this),                                                                                               // 1736
        matchingValue                                                                                                  // 1737
      ;                                                                                                                // 1738
      if( $('[data-validate="'+ identifier +'"]').length > 0 ) {                                                       // 1739
        matchingValue = $('[data-validate="'+ identifier +'"]').val();                                                 // 1740
      }                                                                                                                // 1741
      else if($('#' + identifier).length > 0) {                                                                        // 1742
        matchingValue = $('#' + identifier).val();                                                                     // 1743
      }                                                                                                                // 1744
      else if($('[name="' + identifier +'"]').length > 0) {                                                            // 1745
        matchingValue = $('[name="' + identifier + '"]').val();                                                        // 1746
      }                                                                                                                // 1747
      else if( $('[name="' + identifier +'[]"]').length > 0 ) {                                                        // 1748
        matchingValue = $('[name="' + identifier +'[]"]');                                                             // 1749
      }                                                                                                                // 1750
      return (matchingValue !== undefined)                                                                             // 1751
        ? ( value.toString() == matchingValue.toString() )                                                             // 1752
        : false                                                                                                        // 1753
      ;                                                                                                                // 1754
    },                                                                                                                 // 1755
    creditCard: function(cardNumber, cardTypes) {                                                                      // 1756
      var                                                                                                              // 1757
        cards = {                                                                                                      // 1758
          visa: {                                                                                                      // 1759
            pattern : /^4/,                                                                                            // 1760
            length  : [16]                                                                                             // 1761
          },                                                                                                           // 1762
          amex: {                                                                                                      // 1763
            pattern : /^3[47]/,                                                                                        // 1764
            length  : [15]                                                                                             // 1765
          },                                                                                                           // 1766
          mastercard: {                                                                                                // 1767
            pattern : /^5[1-5]/,                                                                                       // 1768
            length  : [16]                                                                                             // 1769
          },                                                                                                           // 1770
          discover: {                                                                                                  // 1771
            pattern : /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,                 // 1772
            length  : [16]                                                                                             // 1773
          },                                                                                                           // 1774
          unionPay: {                                                                                                  // 1775
            pattern : /^(62|88)/,                                                                                      // 1776
            length  : [16, 17, 18, 19]                                                                                 // 1777
          },                                                                                                           // 1778
          jcb: {                                                                                                       // 1779
            pattern : /^35(2[89]|[3-8][0-9])/,                                                                         // 1780
            length  : [16]                                                                                             // 1781
          },                                                                                                           // 1782
          maestro: {                                                                                                   // 1783
            pattern : /^(5018|5020|5038|6304|6759|676[1-3])/,                                                          // 1784
            length  : [12, 13, 14, 15, 16, 17, 18, 19]                                                                 // 1785
          },                                                                                                           // 1786
          dinersClub: {                                                                                                // 1787
            pattern : /^(30[0-5]|^36)/,                                                                                // 1788
            length  : [14]                                                                                             // 1789
          },                                                                                                           // 1790
          laser: {                                                                                                     // 1791
            pattern : /^(6304|670[69]|6771)/,                                                                          // 1792
            length  : [16, 17, 18, 19]                                                                                 // 1793
          },                                                                                                           // 1794
          visaElectron: {                                                                                              // 1795
            pattern : /^(4026|417500|4508|4844|491(3|7))/,                                                             // 1796
            length  : [16]                                                                                             // 1797
          }                                                                                                            // 1798
        },                                                                                                             // 1799
        valid         = {},                                                                                            // 1800
        validCard     = false,                                                                                         // 1801
        requiredTypes = (typeof cardTypes == 'string')                                                                 // 1802
          ? cardTypes.split(',')                                                                                       // 1803
          : false,                                                                                                     // 1804
        unionPay,                                                                                                      // 1805
        validation                                                                                                     // 1806
      ;                                                                                                                // 1807
                                                                                                                       // 1808
      if(typeof cardNumber !== 'string' || cardNumber.length === 0) {                                                  // 1809
        return;                                                                                                        // 1810
      }                                                                                                                // 1811
                                                                                                                       // 1812
      // verify card types                                                                                             // 1813
      if(requiredTypes) {                                                                                              // 1814
        $.each(requiredTypes, function(index, type){                                                                   // 1815
          // verify each card type                                                                                     // 1816
          validation = cards[type];                                                                                    // 1817
          if(validation) {                                                                                             // 1818
            valid = {                                                                                                  // 1819
              length  : ($.inArray(cardNumber.length, validation.length) !== -1),                                      // 1820
              pattern : (cardNumber.search(validation.pattern) !== -1)                                                 // 1821
            };                                                                                                         // 1822
            if(valid.length && valid.pattern) {                                                                        // 1823
              validCard = true;                                                                                        // 1824
            }                                                                                                          // 1825
          }                                                                                                            // 1826
        });                                                                                                            // 1827
                                                                                                                       // 1828
        if(!validCard) {                                                                                               // 1829
          return false;                                                                                                // 1830
        }                                                                                                              // 1831
      }                                                                                                                // 1832
                                                                                                                       // 1833
      // skip luhn for UnionPay                                                                                        // 1834
      unionPay = {                                                                                                     // 1835
        number  : ($.inArray(cardNumber.length, cards.unionPay.length) !== -1),                                        // 1836
        pattern : (cardNumber.search(cards.unionPay.pattern) !== -1)                                                   // 1837
      };                                                                                                               // 1838
      if(unionPay.number && unionPay.pattern) {                                                                        // 1839
        return true;                                                                                                   // 1840
      }                                                                                                                // 1841
                                                                                                                       // 1842
      // verify luhn, adapted from  <https://gist.github.com/2134376>                                                  // 1843
      var                                                                                                              // 1844
        length        = cardNumber.length,                                                                             // 1845
        multiple      = 0,                                                                                             // 1846
        producedValue = [                                                                                              // 1847
          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],                                                                              // 1848
          [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]                                                                               // 1849
        ],                                                                                                             // 1850
        sum           = 0                                                                                              // 1851
      ;                                                                                                                // 1852
      while (length--) {                                                                                               // 1853
        sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];                                       // 1854
        multiple ^= 1;                                                                                                 // 1855
      }                                                                                                                // 1856
      return (sum % 10 === 0 && sum > 0);                                                                              // 1857
    },                                                                                                                 // 1858
                                                                                                                       // 1859
    // different than another field                                                                                    // 1860
    different: function(value, identifier) {                                                                           // 1861
      // use either id or name of field                                                                                // 1862
      var                                                                                                              // 1863
        $form = $(this),                                                                                               // 1864
        matchingValue                                                                                                  // 1865
      ;                                                                                                                // 1866
      if( $('[data-validate="'+ identifier +'"]').length > 0 ) {                                                       // 1867
        matchingValue = $('[data-validate="'+ identifier +'"]').val();                                                 // 1868
      }                                                                                                                // 1869
      else if($('#' + identifier).length > 0) {                                                                        // 1870
        matchingValue = $('#' + identifier).val();                                                                     // 1871
      }                                                                                                                // 1872
      else if($('[name="' + identifier +'"]').length > 0) {                                                            // 1873
        matchingValue = $('[name="' + identifier + '"]').val();                                                        // 1874
      }                                                                                                                // 1875
      else if( $('[name="' + identifier +'[]"]').length > 0 ) {                                                        // 1876
        matchingValue = $('[name="' + identifier +'[]"]');                                                             // 1877
      }                                                                                                                // 1878
      return (matchingValue !== undefined)                                                                             // 1879
        ? ( value.toString() !== matchingValue.toString() )                                                            // 1880
        : false                                                                                                        // 1881
      ;                                                                                                                // 1882
    },                                                                                                                 // 1883
                                                                                                                       // 1884
    exactCount: function(value, exactCount) {                                                                          // 1885
      if(exactCount == 0) {                                                                                            // 1886
        return (value === '');                                                                                         // 1887
      }                                                                                                                // 1888
      if(exactCount == 1) {                                                                                            // 1889
        return (value !== '' && value.search(',') === -1);                                                             // 1890
      }                                                                                                                // 1891
      return (value.split(',').length == exactCount);                                                                  // 1892
    },                                                                                                                 // 1893
                                                                                                                       // 1894
    minCount: function(value, minCount) {                                                                              // 1895
      if(minCount == 0) {                                                                                              // 1896
        return true;                                                                                                   // 1897
      }                                                                                                                // 1898
      if(minCount == 1) {                                                                                              // 1899
        return (value !== '');                                                                                         // 1900
      }                                                                                                                // 1901
      return (value.split(',').length >= minCount);                                                                    // 1902
    },                                                                                                                 // 1903
                                                                                                                       // 1904
    maxCount: function(value, maxCount) {                                                                              // 1905
      if(maxCount == 0) {                                                                                              // 1906
        return false;                                                                                                  // 1907
      }                                                                                                                // 1908
      if(maxCount == 1) {                                                                                              // 1909
        return (value.search(',') === -1);                                                                             // 1910
      }                                                                                                                // 1911
      return (value.split(',').length <= maxCount);                                                                    // 1912
    }                                                                                                                  // 1913
  }                                                                                                                    // 1914
                                                                                                                       // 1915
};                                                                                                                     // 1916
                                                                                                                       // 1917
})( jQuery, window , document );                                                                                       // 1918
                                                                                                                       // 1919
/*!                                                                                                                    // 1920
 * # Semantic UI 2.1.2 - Accordion                                                                                     // 1921
 * http://github.com/semantic-org/semantic-ui/                                                                         // 1922
 *                                                                                                                     // 1923
 *                                                                                                                     // 1924
 * Copyright 2015 Contributors                                                                                         // 1925
 * Released under the MIT license                                                                                      // 1926
 * http://opensource.org/licenses/MIT                                                                                  // 1927
 *                                                                                                                     // 1928
 */                                                                                                                    // 1929
                                                                                                                       // 1930
;(function ($, window, document, undefined) {                                                                          // 1931
                                                                                                                       // 1932
"use strict";                                                                                                          // 1933
                                                                                                                       // 1934
$.fn.accordion = function(parameters) {                                                                                // 1935
  var                                                                                                                  // 1936
    $allModules     = $(this),                                                                                         // 1937
                                                                                                                       // 1938
    time            = new Date().getTime(),                                                                            // 1939
    performance     = [],                                                                                              // 1940
                                                                                                                       // 1941
    query           = arguments[0],                                                                                    // 1942
    methodInvoked   = (typeof query == 'string'),                                                                      // 1943
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 1944
                                                                                                                       // 1945
    requestAnimationFrame = window.requestAnimationFrame                                                               // 1946
      || window.mozRequestAnimationFrame                                                                               // 1947
      || window.webkitRequestAnimationFrame                                                                            // 1948
      || window.msRequestAnimationFrame                                                                                // 1949
      || function(callback) { setTimeout(callback, 0); },                                                              // 1950
                                                                                                                       // 1951
    returnedValue                                                                                                      // 1952
  ;                                                                                                                    // 1953
  $allModules                                                                                                          // 1954
    .each(function() {                                                                                                 // 1955
      var                                                                                                              // 1956
        settings        = ( $.isPlainObject(parameters) )                                                              // 1957
          ? $.extend(true, {}, $.fn.accordion.settings, parameters)                                                    // 1958
          : $.extend({}, $.fn.accordion.settings),                                                                     // 1959
                                                                                                                       // 1960
        className       = settings.className,                                                                          // 1961
        namespace       = settings.namespace,                                                                          // 1962
        selector        = settings.selector,                                                                           // 1963
        error           = settings.error,                                                                              // 1964
                                                                                                                       // 1965
        eventNamespace  = '.' + namespace,                                                                             // 1966
        moduleNamespace = 'module-' + namespace,                                                                       // 1967
        moduleSelector  = $allModules.selector || '',                                                                  // 1968
                                                                                                                       // 1969
        $module  = $(this),                                                                                            // 1970
        $title   = $module.find(selector.title),                                                                       // 1971
        $content = $module.find(selector.content),                                                                     // 1972
                                                                                                                       // 1973
        element  = this,                                                                                               // 1974
        instance = $module.data(moduleNamespace),                                                                      // 1975
        observer,                                                                                                      // 1976
        module                                                                                                         // 1977
      ;                                                                                                                // 1978
                                                                                                                       // 1979
      module = {                                                                                                       // 1980
                                                                                                                       // 1981
        initialize: function() {                                                                                       // 1982
          module.debug('Initializing', $module);                                                                       // 1983
          module.bind.events();                                                                                        // 1984
          if(settings.observeChanges) {                                                                                // 1985
            module.observeChanges();                                                                                   // 1986
          }                                                                                                            // 1987
          module.instantiate();                                                                                        // 1988
        },                                                                                                             // 1989
                                                                                                                       // 1990
        instantiate: function() {                                                                                      // 1991
          instance = module;                                                                                           // 1992
          $module                                                                                                      // 1993
            .data(moduleNamespace, module)                                                                             // 1994
          ;                                                                                                            // 1995
        },                                                                                                             // 1996
                                                                                                                       // 1997
        destroy: function() {                                                                                          // 1998
          module.debug('Destroying previous instance', $module);                                                       // 1999
          $module                                                                                                      // 2000
            .off(eventNamespace)                                                                                       // 2001
            .removeData(moduleNamespace)                                                                               // 2002
          ;                                                                                                            // 2003
        },                                                                                                             // 2004
                                                                                                                       // 2005
        refresh: function() {                                                                                          // 2006
          $title   = $module.find(selector.title);                                                                     // 2007
          $content = $module.find(selector.content);                                                                   // 2008
        },                                                                                                             // 2009
                                                                                                                       // 2010
        observeChanges: function() {                                                                                   // 2011
          if('MutationObserver' in window) {                                                                           // 2012
            observer = new MutationObserver(function(mutations) {                                                      // 2013
              module.debug('DOM tree modified, updating selector cache');                                              // 2014
              module.refresh();                                                                                        // 2015
            });                                                                                                        // 2016
            observer.observe(element, {                                                                                // 2017
              childList : true,                                                                                        // 2018
              subtree   : true                                                                                         // 2019
            });                                                                                                        // 2020
            module.debug('Setting up mutation observer', observer);                                                    // 2021
          }                                                                                                            // 2022
        },                                                                                                             // 2023
                                                                                                                       // 2024
        bind: {                                                                                                        // 2025
          events: function() {                                                                                         // 2026
            module.debug('Binding delegated events');                                                                  // 2027
            $module                                                                                                    // 2028
              .on(settings.on + eventNamespace, selector.trigger, module.event.click)                                  // 2029
            ;                                                                                                          // 2030
          }                                                                                                            // 2031
        },                                                                                                             // 2032
                                                                                                                       // 2033
        event: {                                                                                                       // 2034
          click: function() {                                                                                          // 2035
            module.toggle.call(this);                                                                                  // 2036
          }                                                                                                            // 2037
        },                                                                                                             // 2038
                                                                                                                       // 2039
        toggle: function(query) {                                                                                      // 2040
          var                                                                                                          // 2041
            $activeTitle = (query !== undefined)                                                                       // 2042
              ? (typeof query === 'number')                                                                            // 2043
                ? $title.eq(query)                                                                                     // 2044
                : $(query).closest(selector.title)                                                                     // 2045
              : $(this).closest(selector.title),                                                                       // 2046
            $activeContent = $activeTitle.next($content),                                                              // 2047
            isAnimating = $activeContent.hasClass(className.animating),                                                // 2048
            isActive    = $activeContent.hasClass(className.active),                                                   // 2049
            isOpen      = (isActive && !isAnimating),                                                                  // 2050
            isOpening   = (!isActive && isAnimating)                                                                   // 2051
          ;                                                                                                            // 2052
          module.debug('Toggling visibility of content', $activeTitle);                                                // 2053
          if(isOpen || isOpening) {                                                                                    // 2054
            if(settings.collapsible) {                                                                                 // 2055
              module.close.call($activeTitle);                                                                         // 2056
            }                                                                                                          // 2057
            else {                                                                                                     // 2058
              module.debug('Cannot close accordion content collapsing is disabled');                                   // 2059
            }                                                                                                          // 2060
          }                                                                                                            // 2061
          else {                                                                                                       // 2062
            module.open.call($activeTitle);                                                                            // 2063
          }                                                                                                            // 2064
        },                                                                                                             // 2065
                                                                                                                       // 2066
        open: function(query) {                                                                                        // 2067
          var                                                                                                          // 2068
            $activeTitle = (query !== undefined)                                                                       // 2069
              ? (typeof query === 'number')                                                                            // 2070
                ? $title.eq(query)                                                                                     // 2071
                : $(query).closest(selector.title)                                                                     // 2072
              : $(this).closest(selector.title),                                                                       // 2073
            $activeContent = $activeTitle.next($content),                                                              // 2074
            isAnimating = $activeContent.hasClass(className.animating),                                                // 2075
            isActive    = $activeContent.hasClass(className.active),                                                   // 2076
            isOpen      = (isActive || isAnimating)                                                                    // 2077
          ;                                                                                                            // 2078
          if(isOpen) {                                                                                                 // 2079
            module.debug('Accordion already open, skipping', $activeContent);                                          // 2080
            return;                                                                                                    // 2081
          }                                                                                                            // 2082
          module.debug('Opening accordion content', $activeTitle);                                                     // 2083
          settings.onOpening.call($activeContent);                                                                     // 2084
          if(settings.exclusive) {                                                                                     // 2085
            module.closeOthers.call($activeTitle);                                                                     // 2086
          }                                                                                                            // 2087
          $activeTitle                                                                                                 // 2088
            .addClass(className.active)                                                                                // 2089
          ;                                                                                                            // 2090
          $activeContent                                                                                               // 2091
            .stop(true, true)                                                                                          // 2092
            .addClass(className.animating)                                                                             // 2093
          ;                                                                                                            // 2094
          if(settings.animateChildren) {                                                                               // 2095
            if($.fn.transition !== undefined && $module.transition('is supported')) {                                  // 2096
              $activeContent                                                                                           // 2097
                .children()                                                                                            // 2098
                  .transition({                                                                                        // 2099
                    animation   : 'fade in',                                                                           // 2100
                    queue       : false,                                                                               // 2101
                    useFailSafe : true,                                                                                // 2102
                    debug       : settings.debug,                                                                      // 2103
                    verbose     : settings.verbose,                                                                    // 2104
                    duration    : settings.duration                                                                    // 2105
                  })                                                                                                   // 2106
              ;                                                                                                        // 2107
            }                                                                                                          // 2108
            else {                                                                                                     // 2109
              $activeContent                                                                                           // 2110
                .children()                                                                                            // 2111
                  .stop(true, true)                                                                                    // 2112
                  .animate({                                                                                           // 2113
                    opacity: 1                                                                                         // 2114
                  }, settings.duration, module.resetOpacity)                                                           // 2115
              ;                                                                                                        // 2116
            }                                                                                                          // 2117
          }                                                                                                            // 2118
          $activeContent                                                                                               // 2119
            .slideDown(settings.duration, settings.easing, function() {                                                // 2120
              $activeContent                                                                                           // 2121
                .removeClass(className.animating)                                                                      // 2122
                .addClass(className.active)                                                                            // 2123
              ;                                                                                                        // 2124
              module.reset.display.call(this);                                                                         // 2125
              settings.onOpen.call(this);                                                                              // 2126
              settings.onChange.call(this);                                                                            // 2127
            })                                                                                                         // 2128
          ;                                                                                                            // 2129
        },                                                                                                             // 2130
                                                                                                                       // 2131
        close: function(query) {                                                                                       // 2132
          var                                                                                                          // 2133
            $activeTitle = (query !== undefined)                                                                       // 2134
              ? (typeof query === 'number')                                                                            // 2135
                ? $title.eq(query)                                                                                     // 2136
                : $(query).closest(selector.title)                                                                     // 2137
              : $(this).closest(selector.title),                                                                       // 2138
            $activeContent = $activeTitle.next($content),                                                              // 2139
            isAnimating    = $activeContent.hasClass(className.animating),                                             // 2140
            isActive       = $activeContent.hasClass(className.active),                                                // 2141
            isOpening      = (!isActive && isAnimating),                                                               // 2142
            isClosing      = (isActive && isAnimating)                                                                 // 2143
          ;                                                                                                            // 2144
          if((isActive || isOpening) && !isClosing) {                                                                  // 2145
            module.debug('Closing accordion content', $activeContent);                                                 // 2146
            settings.onClosing.call($activeContent);                                                                   // 2147
            $activeTitle                                                                                               // 2148
              .removeClass(className.active)                                                                           // 2149
            ;                                                                                                          // 2150
            $activeContent                                                                                             // 2151
              .stop(true, true)                                                                                        // 2152
              .addClass(className.animating)                                                                           // 2153
            ;                                                                                                          // 2154
            if(settings.animateChildren) {                                                                             // 2155
              if($.fn.transition !== undefined && $module.transition('is supported')) {                                // 2156
                $activeContent                                                                                         // 2157
                  .children()                                                                                          // 2158
                    .transition({                                                                                      // 2159
                      animation   : 'fade out',                                                                        // 2160
                      queue       : false,                                                                             // 2161
                      useFailSafe : true,                                                                              // 2162
                      debug       : settings.debug,                                                                    // 2163
                      verbose     : settings.verbose,                                                                  // 2164
                      duration    : settings.duration                                                                  // 2165
                    })                                                                                                 // 2166
                ;                                                                                                      // 2167
              }                                                                                                        // 2168
              else {                                                                                                   // 2169
                $activeContent                                                                                         // 2170
                  .children()                                                                                          // 2171
                    .stop(true, true)                                                                                  // 2172
                    .animate({                                                                                         // 2173
                      opacity: 0                                                                                       // 2174
                    }, settings.duration, module.resetOpacity)                                                         // 2175
                ;                                                                                                      // 2176
              }                                                                                                        // 2177
            }                                                                                                          // 2178
            $activeContent                                                                                             // 2179
              .slideUp(settings.duration, settings.easing, function() {                                                // 2180
                $activeContent                                                                                         // 2181
                  .removeClass(className.animating)                                                                    // 2182
                  .removeClass(className.active)                                                                       // 2183
                ;                                                                                                      // 2184
                module.reset.display.call(this);                                                                       // 2185
                settings.onClose.call(this);                                                                           // 2186
                settings.onChange.call(this);                                                                          // 2187
              })                                                                                                       // 2188
            ;                                                                                                          // 2189
          }                                                                                                            // 2190
        },                                                                                                             // 2191
                                                                                                                       // 2192
        closeOthers: function(index) {                                                                                 // 2193
          var                                                                                                          // 2194
            $activeTitle = (index !== undefined)                                                                       // 2195
              ? $title.eq(index)                                                                                       // 2196
              : $(this).closest(selector.title),                                                                       // 2197
            $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),                            // 2198
            $activeAccordion = $activeTitle.closest(selector.accordion),                                               // 2199
            activeSelector   = selector.title + '.' + className.active + ':visible',                                   // 2200
            activeContent    = selector.content + '.' + className.active + ':visible',                                 // 2201
            $openTitles,                                                                                               // 2202
            $nestedTitles,                                                                                             // 2203
            $openContents                                                                                              // 2204
          ;                                                                                                            // 2205
          if(settings.closeNested) {                                                                                   // 2206
            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);                                  // 2207
            $openContents = $openTitles.next($content);                                                                // 2208
          }                                                                                                            // 2209
          else {                                                                                                       // 2210
            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);                                  // 2211
            $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);              // 2212
            $openTitles   = $openTitles.not($nestedTitles);                                                            // 2213
            $openContents = $openTitles.next($content);                                                                // 2214
          }                                                                                                            // 2215
          if( ($openTitles.length > 0) ) {                                                                             // 2216
            module.debug('Exclusive enabled, closing other content', $openTitles);                                     // 2217
            $openTitles                                                                                                // 2218
              .removeClass(className.active)                                                                           // 2219
            ;                                                                                                          // 2220
            $openContents                                                                                              // 2221
              .removeClass(className.animating)                                                                        // 2222
              .stop(true, true)                                                                                        // 2223
            ;                                                                                                          // 2224
            if(settings.animateChildren) {                                                                             // 2225
              if($.fn.transition !== undefined && $module.transition('is supported')) {                                // 2226
                $openContents                                                                                          // 2227
                  .children()                                                                                          // 2228
                    .transition({                                                                                      // 2229
                      animation   : 'fade out',                                                                        // 2230
                      useFailSafe : true,                                                                              // 2231
                      debug       : settings.debug,                                                                    // 2232
                      verbose     : settings.verbose,                                                                  // 2233
                      duration    : settings.duration                                                                  // 2234
                    })                                                                                                 // 2235
                ;                                                                                                      // 2236
              }                                                                                                        // 2237
              else {                                                                                                   // 2238
                $openContents                                                                                          // 2239
                  .children()                                                                                          // 2240
                    .stop(true, true)                                                                                  // 2241
                    .animate({                                                                                         // 2242
                      opacity: 0                                                                                       // 2243
                    }, settings.duration, module.resetOpacity)                                                         // 2244
                ;                                                                                                      // 2245
              }                                                                                                        // 2246
            }                                                                                                          // 2247
            $openContents                                                                                              // 2248
              .slideUp(settings.duration , settings.easing, function() {                                               // 2249
                $(this).removeClass(className.active);                                                                 // 2250
                module.reset.display.call(this);                                                                       // 2251
              })                                                                                                       // 2252
            ;                                                                                                          // 2253
          }                                                                                                            // 2254
        },                                                                                                             // 2255
                                                                                                                       // 2256
        reset: {                                                                                                       // 2257
                                                                                                                       // 2258
          display: function() {                                                                                        // 2259
            module.verbose('Removing inline display from element', this);                                              // 2260
            $(this).css('display', '');                                                                                // 2261
            if( $(this).attr('style') === '') {                                                                        // 2262
              $(this)                                                                                                  // 2263
                .attr('style', '')                                                                                     // 2264
                .removeAttr('style')                                                                                   // 2265
              ;                                                                                                        // 2266
            }                                                                                                          // 2267
          },                                                                                                           // 2268
                                                                                                                       // 2269
          opacity: function() {                                                                                        // 2270
            module.verbose('Removing inline opacity from element', this);                                              // 2271
            $(this).css('opacity', '');                                                                                // 2272
            if( $(this).attr('style') === '') {                                                                        // 2273
              $(this)                                                                                                  // 2274
                .attr('style', '')                                                                                     // 2275
                .removeAttr('style')                                                                                   // 2276
              ;                                                                                                        // 2277
            }                                                                                                          // 2278
          },                                                                                                           // 2279
                                                                                                                       // 2280
        },                                                                                                             // 2281
                                                                                                                       // 2282
        setting: function(name, value) {                                                                               // 2283
          module.debug('Changing setting', name, value);                                                               // 2284
          if( $.isPlainObject(name) ) {                                                                                // 2285
            $.extend(true, settings, name);                                                                            // 2286
          }                                                                                                            // 2287
          else if(value !== undefined) {                                                                               // 2288
            settings[name] = value;                                                                                    // 2289
          }                                                                                                            // 2290
          else {                                                                                                       // 2291
            return settings[name];                                                                                     // 2292
          }                                                                                                            // 2293
        },                                                                                                             // 2294
        internal: function(name, value) {                                                                              // 2295
          module.debug('Changing internal', name, value);                                                              // 2296
          if(value !== undefined) {                                                                                    // 2297
            if( $.isPlainObject(name) ) {                                                                              // 2298
              $.extend(true, module, name);                                                                            // 2299
            }                                                                                                          // 2300
            else {                                                                                                     // 2301
              module[name] = value;                                                                                    // 2302
            }                                                                                                          // 2303
          }                                                                                                            // 2304
          else {                                                                                                       // 2305
            return module[name];                                                                                       // 2306
          }                                                                                                            // 2307
        },                                                                                                             // 2308
        debug: function() {                                                                                            // 2309
          if(settings.debug) {                                                                                         // 2310
            if(settings.performance) {                                                                                 // 2311
              module.performance.log(arguments);                                                                       // 2312
            }                                                                                                          // 2313
            else {                                                                                                     // 2314
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 2315
              module.debug.apply(console, arguments);                                                                  // 2316
            }                                                                                                          // 2317
          }                                                                                                            // 2318
        },                                                                                                             // 2319
        verbose: function() {                                                                                          // 2320
          if(settings.verbose && settings.debug) {                                                                     // 2321
            if(settings.performance) {                                                                                 // 2322
              module.performance.log(arguments);                                                                       // 2323
            }                                                                                                          // 2324
            else {                                                                                                     // 2325
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 2326
              module.verbose.apply(console, arguments);                                                                // 2327
            }                                                                                                          // 2328
          }                                                                                                            // 2329
        },                                                                                                             // 2330
        error: function() {                                                                                            // 2331
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 2332
          module.error.apply(console, arguments);                                                                      // 2333
        },                                                                                                             // 2334
        performance: {                                                                                                 // 2335
          log: function(message) {                                                                                     // 2336
            var                                                                                                        // 2337
              currentTime,                                                                                             // 2338
              executionTime,                                                                                           // 2339
              previousTime                                                                                             // 2340
            ;                                                                                                          // 2341
            if(settings.performance) {                                                                                 // 2342
              currentTime   = new Date().getTime();                                                                    // 2343
              previousTime  = time || currentTime;                                                                     // 2344
              executionTime = currentTime - previousTime;                                                              // 2345
              time          = currentTime;                                                                             // 2346
              performance.push({                                                                                       // 2347
                'Name'           : message[0],                                                                         // 2348
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 2349
                'Element'        : element,                                                                            // 2350
                'Execution Time' : executionTime                                                                       // 2351
              });                                                                                                      // 2352
            }                                                                                                          // 2353
            clearTimeout(module.performance.timer);                                                                    // 2354
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 2355
          },                                                                                                           // 2356
          display: function() {                                                                                        // 2357
            var                                                                                                        // 2358
              title = settings.name + ':',                                                                             // 2359
              totalTime = 0                                                                                            // 2360
            ;                                                                                                          // 2361
            time = false;                                                                                              // 2362
            clearTimeout(module.performance.timer);                                                                    // 2363
            $.each(performance, function(index, data) {                                                                // 2364
              totalTime += data['Execution Time'];                                                                     // 2365
            });                                                                                                        // 2366
            title += ' ' + totalTime + 'ms';                                                                           // 2367
            if(moduleSelector) {                                                                                       // 2368
              title += ' \'' + moduleSelector + '\'';                                                                  // 2369
            }                                                                                                          // 2370
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 2371
              console.groupCollapsed(title);                                                                           // 2372
              if(console.table) {                                                                                      // 2373
                console.table(performance);                                                                            // 2374
              }                                                                                                        // 2375
              else {                                                                                                   // 2376
                $.each(performance, function(index, data) {                                                            // 2377
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 2378
                });                                                                                                    // 2379
              }                                                                                                        // 2380
              console.groupEnd();                                                                                      // 2381
            }                                                                                                          // 2382
            performance = [];                                                                                          // 2383
          }                                                                                                            // 2384
        },                                                                                                             // 2385
        invoke: function(query, passedArguments, context) {                                                            // 2386
          var                                                                                                          // 2387
            object = instance,                                                                                         // 2388
            maxDepth,                                                                                                  // 2389
            found,                                                                                                     // 2390
            response                                                                                                   // 2391
          ;                                                                                                            // 2392
          passedArguments = passedArguments || queryArguments;                                                         // 2393
          context         = element         || context;                                                                // 2394
          if(typeof query == 'string' && object !== undefined) {                                                       // 2395
            query    = query.split(/[\. ]/);                                                                           // 2396
            maxDepth = query.length - 1;                                                                               // 2397
            $.each(query, function(depth, value) {                                                                     // 2398
              var camelCaseValue = (depth != maxDepth)                                                                 // 2399
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 2400
                : query                                                                                                // 2401
              ;                                                                                                        // 2402
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 2403
                object = object[camelCaseValue];                                                                       // 2404
              }                                                                                                        // 2405
              else if( object[camelCaseValue] !== undefined ) {                                                        // 2406
                found = object[camelCaseValue];                                                                        // 2407
                return false;                                                                                          // 2408
              }                                                                                                        // 2409
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 2410
                object = object[value];                                                                                // 2411
              }                                                                                                        // 2412
              else if( object[value] !== undefined ) {                                                                 // 2413
                found = object[value];                                                                                 // 2414
                return false;                                                                                          // 2415
              }                                                                                                        // 2416
              else {                                                                                                   // 2417
                module.error(error.method, query);                                                                     // 2418
                return false;                                                                                          // 2419
              }                                                                                                        // 2420
            });                                                                                                        // 2421
          }                                                                                                            // 2422
          if ( $.isFunction( found ) ) {                                                                               // 2423
            response = found.apply(context, passedArguments);                                                          // 2424
          }                                                                                                            // 2425
          else if(found !== undefined) {                                                                               // 2426
            response = found;                                                                                          // 2427
          }                                                                                                            // 2428
          if($.isArray(returnedValue)) {                                                                               // 2429
            returnedValue.push(response);                                                                              // 2430
          }                                                                                                            // 2431
          else if(returnedValue !== undefined) {                                                                       // 2432
            returnedValue = [returnedValue, response];                                                                 // 2433
          }                                                                                                            // 2434
          else if(response !== undefined) {                                                                            // 2435
            returnedValue = response;                                                                                  // 2436
          }                                                                                                            // 2437
          return found;                                                                                                // 2438
        }                                                                                                              // 2439
      };                                                                                                               // 2440
      if(methodInvoked) {                                                                                              // 2441
        if(instance === undefined) {                                                                                   // 2442
          module.initialize();                                                                                         // 2443
        }                                                                                                              // 2444
        module.invoke(query);                                                                                          // 2445
      }                                                                                                                // 2446
      else {                                                                                                           // 2447
        if(instance !== undefined) {                                                                                   // 2448
          instance.invoke('destroy');                                                                                  // 2449
        }                                                                                                              // 2450
        module.initialize();                                                                                           // 2451
      }                                                                                                                // 2452
    })                                                                                                                 // 2453
  ;                                                                                                                    // 2454
  return (returnedValue !== undefined)                                                                                 // 2455
    ? returnedValue                                                                                                    // 2456
    : this                                                                                                             // 2457
  ;                                                                                                                    // 2458
};                                                                                                                     // 2459
                                                                                                                       // 2460
$.fn.accordion.settings = {                                                                                            // 2461
                                                                                                                       // 2462
  name            : 'Accordion',                                                                                       // 2463
  namespace       : 'accordion',                                                                                       // 2464
                                                                                                                       // 2465
  debug           : false,                                                                                             // 2466
  verbose         : false,                                                                                             // 2467
  performance     : true,                                                                                              // 2468
                                                                                                                       // 2469
  on              : 'click', // event on title that opens accordion                                                    // 2470
                                                                                                                       // 2471
  observeChanges  : true,  // whether accordion should automatically refresh on DOM insertion                          // 2472
                                                                                                                       // 2473
  exclusive       : true,  // whether a single accordion content panel should be open at once                          // 2474
  collapsible     : true,  // whether accordion content can be closed                                                  // 2475
  closeNested     : false, // whether nested content should be closed when a panel is closed                           // 2476
  animateChildren : true,  // whether children opacity should be animated                                              // 2477
                                                                                                                       // 2478
  duration        : 350, // duration of animation                                                                      // 2479
  easing          : 'easeOutQuad', // easing equation for animation                                                    // 2480
                                                                                                                       // 2481
                                                                                                                       // 2482
  onOpening       : function(){}, // callback before open animation                                                    // 2483
  onOpen          : function(){}, // callback after open animation                                                     // 2484
  onClosing       : function(){}, // callback before closing animation                                                 // 2485
  onClose         : function(){}, // callback after closing animation                                                  // 2486
  onChange        : function(){}, // callback after closing or opening animation                                       // 2487
                                                                                                                       // 2488
  error: {                                                                                                             // 2489
    method : 'The method you called is not defined'                                                                    // 2490
  },                                                                                                                   // 2491
                                                                                                                       // 2492
  className   : {                                                                                                      // 2493
    active    : 'active',                                                                                              // 2494
    animating : 'animating'                                                                                            // 2495
  },                                                                                                                   // 2496
                                                                                                                       // 2497
  selector    : {                                                                                                      // 2498
    accordion : '.accordion',                                                                                          // 2499
    title     : '.title',                                                                                              // 2500
    trigger   : '.title',                                                                                              // 2501
    content   : '.content'                                                                                             // 2502
  }                                                                                                                    // 2503
                                                                                                                       // 2504
};                                                                                                                     // 2505
                                                                                                                       // 2506
// Adds easing                                                                                                         // 2507
$.extend( $.easing, {                                                                                                  // 2508
  easeOutQuad: function (x, t, b, c, d) {                                                                              // 2509
    return -c *(t/=d)*(t-2) + b;                                                                                       // 2510
  }                                                                                                                    // 2511
});                                                                                                                    // 2512
                                                                                                                       // 2513
})( jQuery, window , document );                                                                                       // 2514
                                                                                                                       // 2515
                                                                                                                       // 2516
/*!                                                                                                                    // 2517
 * # Semantic UI 2.1.2 - Checkbox                                                                                      // 2518
 * http://github.com/semantic-org/semantic-ui/                                                                         // 2519
 *                                                                                                                     // 2520
 *                                                                                                                     // 2521
 * Copyright 2015 Contributors                                                                                         // 2522
 * Released under the MIT license                                                                                      // 2523
 * http://opensource.org/licenses/MIT                                                                                  // 2524
 *                                                                                                                     // 2525
 */                                                                                                                    // 2526
                                                                                                                       // 2527
;(function ( $, window, document, undefined ) {                                                                        // 2528
                                                                                                                       // 2529
"use strict";                                                                                                          // 2530
                                                                                                                       // 2531
$.fn.checkbox = function(parameters) {                                                                                 // 2532
  var                                                                                                                  // 2533
    $allModules    = $(this),                                                                                          // 2534
    moduleSelector = $allModules.selector || '',                                                                       // 2535
                                                                                                                       // 2536
    time           = new Date().getTime(),                                                                             // 2537
    performance    = [],                                                                                               // 2538
                                                                                                                       // 2539
    query          = arguments[0],                                                                                     // 2540
    methodInvoked  = (typeof query == 'string'),                                                                       // 2541
    queryArguments = [].slice.call(arguments, 1),                                                                      // 2542
    returnedValue                                                                                                      // 2543
  ;                                                                                                                    // 2544
                                                                                                                       // 2545
  $allModules                                                                                                          // 2546
    .each(function() {                                                                                                 // 2547
      var                                                                                                              // 2548
        settings        = $.extend(true, {}, $.fn.checkbox.settings, parameters),                                      // 2549
                                                                                                                       // 2550
        className       = settings.className,                                                                          // 2551
        namespace       = settings.namespace,                                                                          // 2552
        selector        = settings.selector,                                                                           // 2553
        error           = settings.error,                                                                              // 2554
                                                                                                                       // 2555
        eventNamespace  = '.' + namespace,                                                                             // 2556
        moduleNamespace = 'module-' + namespace,                                                                       // 2557
                                                                                                                       // 2558
        $module         = $(this),                                                                                     // 2559
        $label          = $(this).children(selector.label),                                                            // 2560
        $input          = $(this).children(selector.input),                                                            // 2561
        input           = $input[0],                                                                                   // 2562
                                                                                                                       // 2563
        initialLoad     = false,                                                                                       // 2564
        shortcutPressed = false,                                                                                       // 2565
        instance        = $module.data(moduleNamespace),                                                               // 2566
                                                                                                                       // 2567
        observer,                                                                                                      // 2568
        element         = this,                                                                                        // 2569
        module                                                                                                         // 2570
      ;                                                                                                                // 2571
                                                                                                                       // 2572
      module      = {                                                                                                  // 2573
                                                                                                                       // 2574
        initialize: function() {                                                                                       // 2575
          module.verbose('Initializing checkbox', settings);                                                           // 2576
                                                                                                                       // 2577
          module.create.label();                                                                                       // 2578
          module.bind.events();                                                                                        // 2579
                                                                                                                       // 2580
          module.set.tabbable();                                                                                       // 2581
          module.hide.input();                                                                                         // 2582
                                                                                                                       // 2583
          module.observeChanges();                                                                                     // 2584
          module.instantiate();                                                                                        // 2585
          module.setup();                                                                                              // 2586
        },                                                                                                             // 2587
                                                                                                                       // 2588
        instantiate: function() {                                                                                      // 2589
          module.verbose('Storing instance of module', module);                                                        // 2590
          instance = module;                                                                                           // 2591
          $module                                                                                                      // 2592
            .data(moduleNamespace, module)                                                                             // 2593
          ;                                                                                                            // 2594
        },                                                                                                             // 2595
                                                                                                                       // 2596
        destroy: function() {                                                                                          // 2597
          module.verbose('Destroying module');                                                                         // 2598
          module.unbind.events();                                                                                      // 2599
          module.show.input();                                                                                         // 2600
          $module.removeData(moduleNamespace);                                                                         // 2601
        },                                                                                                             // 2602
                                                                                                                       // 2603
        fix: {                                                                                                         // 2604
          reference: function() {                                                                                      // 2605
            if( $module.is(selector.input) ) {                                                                         // 2606
              module.debug('Behavior called on <input> adjusting invoked element');                                    // 2607
              $module = $module.closest(selector.checkbox);                                                            // 2608
              module.refresh();                                                                                        // 2609
            }                                                                                                          // 2610
          }                                                                                                            // 2611
        },                                                                                                             // 2612
                                                                                                                       // 2613
        setup: function() {                                                                                            // 2614
          module.set.initialLoad();                                                                                    // 2615
          if( module.is.indeterminate() ) {                                                                            // 2616
            module.debug('Initial value is indeterminate');                                                            // 2617
            module.indeterminate();                                                                                    // 2618
          }                                                                                                            // 2619
          else if( module.is.checked() ) {                                                                             // 2620
            module.debug('Initial value is checked');                                                                  // 2621
            module.check();                                                                                            // 2622
          }                                                                                                            // 2623
          else {                                                                                                       // 2624
            module.debug('Initial value is unchecked');                                                                // 2625
            module.uncheck();                                                                                          // 2626
          }                                                                                                            // 2627
          module.remove.initialLoad();                                                                                 // 2628
        },                                                                                                             // 2629
                                                                                                                       // 2630
        refresh: function() {                                                                                          // 2631
          $label = $module.children(selector.label);                                                                   // 2632
          $input = $module.children(selector.input);                                                                   // 2633
          input  = $input[0];                                                                                          // 2634
        },                                                                                                             // 2635
                                                                                                                       // 2636
        hide: {                                                                                                        // 2637
          input: function() {                                                                                          // 2638
            module.verbose('Modfying <input> z-index to be unselectable');                                             // 2639
            $input.addClass(className.hidden);                                                                         // 2640
          }                                                                                                            // 2641
        },                                                                                                             // 2642
        show: {                                                                                                        // 2643
          input: function() {                                                                                          // 2644
            module.verbose('Modfying <input> z-index to be selectable');                                               // 2645
            $input.removeClass(className.hidden);                                                                      // 2646
          }                                                                                                            // 2647
        },                                                                                                             // 2648
                                                                                                                       // 2649
        observeChanges: function() {                                                                                   // 2650
          if('MutationObserver' in window) {                                                                           // 2651
            observer = new MutationObserver(function(mutations) {                                                      // 2652
              module.debug('DOM tree modified, updating selector cache');                                              // 2653
              module.refresh();                                                                                        // 2654
            });                                                                                                        // 2655
            observer.observe(element, {                                                                                // 2656
              childList : true,                                                                                        // 2657
              subtree   : true                                                                                         // 2658
            });                                                                                                        // 2659
            module.debug('Setting up mutation observer', observer);                                                    // 2660
          }                                                                                                            // 2661
        },                                                                                                             // 2662
                                                                                                                       // 2663
        attachEvents: function(selector, event) {                                                                      // 2664
          var                                                                                                          // 2665
            $element = $(selector)                                                                                     // 2666
          ;                                                                                                            // 2667
          event = $.isFunction(module[event])                                                                          // 2668
            ? module[event]                                                                                            // 2669
            : module.toggle                                                                                            // 2670
          ;                                                                                                            // 2671
          if($element.length > 0) {                                                                                    // 2672
            module.debug('Attaching checkbox events to element', selector, event);                                     // 2673
            $element                                                                                                   // 2674
              .on('click' + eventNamespace, event)                                                                     // 2675
            ;                                                                                                          // 2676
          }                                                                                                            // 2677
          else {                                                                                                       // 2678
            module.error(error.notFound);                                                                              // 2679
          }                                                                                                            // 2680
        },                                                                                                             // 2681
                                                                                                                       // 2682
        event: {                                                                                                       // 2683
          click: function(event) {                                                                                     // 2684
            var                                                                                                        // 2685
              $target = $(event.target)                                                                                // 2686
            ;                                                                                                          // 2687
            if( $target.is(selector.input) ) {                                                                         // 2688
              module.verbose('Using default check action on initialized checkbox');                                    // 2689
              return;                                                                                                  // 2690
            }                                                                                                          // 2691
            if( $target.is(selector.link) ) {                                                                          // 2692
              module.debug('Clicking link inside checkbox, skipping toggle');                                          // 2693
              return;                                                                                                  // 2694
            }                                                                                                          // 2695
            module.toggle();                                                                                           // 2696
            $input.focus();                                                                                            // 2697
            event.preventDefault();                                                                                    // 2698
          },                                                                                                           // 2699
          keydown: function(event) {                                                                                   // 2700
            var                                                                                                        // 2701
              key     = event.which,                                                                                   // 2702
              keyCode = {                                                                                              // 2703
                enter  : 13,                                                                                           // 2704
                space  : 32,                                                                                           // 2705
                escape : 27                                                                                            // 2706
              }                                                                                                        // 2707
            ;                                                                                                          // 2708
            if(key == keyCode.escape) {                                                                                // 2709
              module.verbose('Escape key pressed blurring field');                                                     // 2710
              $input.blur();                                                                                           // 2711
              shortcutPressed = true;                                                                                  // 2712
            }                                                                                                          // 2713
            else if(!event.ctrlKey && ( key == keyCode.space || key == keyCode.enter) ) {                              // 2714
              module.verbose('Enter/space key pressed, toggling checkbox');                                            // 2715
              module.toggle();                                                                                         // 2716
              shortcutPressed = true;                                                                                  // 2717
            }                                                                                                          // 2718
            else {                                                                                                     // 2719
              shortcutPressed = false;                                                                                 // 2720
            }                                                                                                          // 2721
          },                                                                                                           // 2722
          keyup: function(event) {                                                                                     // 2723
            if(shortcutPressed) {                                                                                      // 2724
              event.preventDefault();                                                                                  // 2725
            }                                                                                                          // 2726
          }                                                                                                            // 2727
        },                                                                                                             // 2728
                                                                                                                       // 2729
        check: function() {                                                                                            // 2730
          if( !module.should.allowCheck() ) {                                                                          // 2731
            return;                                                                                                    // 2732
          }                                                                                                            // 2733
          module.debug('Checking checkbox', $input);                                                                   // 2734
          module.set.checked();                                                                                        // 2735
          if( !module.should.ignoreCallbacks() ) {                                                                     // 2736
            settings.onChecked.call(input);                                                                            // 2737
            settings.onChange.call(input);                                                                             // 2738
          }                                                                                                            // 2739
        },                                                                                                             // 2740
                                                                                                                       // 2741
        uncheck: function() {                                                                                          // 2742
          if( !module.should.allowUncheck() ) {                                                                        // 2743
            return;                                                                                                    // 2744
          }                                                                                                            // 2745
          module.debug('Unchecking checkbox');                                                                         // 2746
          module.set.unchecked();                                                                                      // 2747
          if( !module.should.ignoreCallbacks() ) {                                                                     // 2748
            settings.onUnchecked.call(input);                                                                          // 2749
            settings.onChange.call(input);                                                                             // 2750
          }                                                                                                            // 2751
        },                                                                                                             // 2752
                                                                                                                       // 2753
        indeterminate: function() {                                                                                    // 2754
          if( module.should.allowIndeterminate() ) {                                                                   // 2755
            module.debug('Checkbox is already indeterminate');                                                         // 2756
            return;                                                                                                    // 2757
          }                                                                                                            // 2758
          module.debug('Making checkbox indeterminate');                                                               // 2759
          module.set.indeterminate();                                                                                  // 2760
          if( !module.should.ignoreCallbacks() ) {                                                                     // 2761
            settings.onIndeterminate.call(input);                                                                      // 2762
            settings.onChange.call(input);                                                                             // 2763
          }                                                                                                            // 2764
        },                                                                                                             // 2765
                                                                                                                       // 2766
        determinate: function() {                                                                                      // 2767
          if( module.should.allowDeterminate() ) {                                                                     // 2768
            module.debug('Checkbox is already determinate');                                                           // 2769
            return;                                                                                                    // 2770
          }                                                                                                            // 2771
          module.debug('Making checkbox determinate');                                                                 // 2772
          module.set.determinate();                                                                                    // 2773
          if( !module.should.ignoreCallbacks() ) {                                                                     // 2774
            settings.onDeterminate.call(input);                                                                        // 2775
            settings.onChange.call(input);                                                                             // 2776
          }                                                                                                            // 2777
        },                                                                                                             // 2778
                                                                                                                       // 2779
        enable: function() {                                                                                           // 2780
          if( module.is.enabled() ) {                                                                                  // 2781
            module.debug('Checkbox is already enabled');                                                               // 2782
            return;                                                                                                    // 2783
          }                                                                                                            // 2784
          module.debug('Enabling checkbox');                                                                           // 2785
          module.set.enabled();                                                                                        // 2786
          settings.onEnable.call(input);                                                                               // 2787
        },                                                                                                             // 2788
                                                                                                                       // 2789
        disable: function() {                                                                                          // 2790
          if( module.is.disabled() ) {                                                                                 // 2791
            module.debug('Checkbox is already disabled');                                                              // 2792
            return;                                                                                                    // 2793
          }                                                                                                            // 2794
          module.debug('Disabling checkbox');                                                                          // 2795
          module.set.disabled();                                                                                       // 2796
          settings.onDisable.call(input);                                                                              // 2797
        },                                                                                                             // 2798
                                                                                                                       // 2799
        get: {                                                                                                         // 2800
          radios: function() {                                                                                         // 2801
            var                                                                                                        // 2802
              name = module.get.name()                                                                                 // 2803
            ;                                                                                                          // 2804
            return $('input[name="' + name + '"]').closest(selector.checkbox);                                         // 2805
          },                                                                                                           // 2806
          otherRadios: function() {                                                                                    // 2807
            return module.get.radios().not($module);                                                                   // 2808
          },                                                                                                           // 2809
          name: function() {                                                                                           // 2810
            return $input.attr('name');                                                                                // 2811
          }                                                                                                            // 2812
        },                                                                                                             // 2813
                                                                                                                       // 2814
        is: {                                                                                                          // 2815
          initialLoad: function() {                                                                                    // 2816
            return initialLoad;                                                                                        // 2817
          },                                                                                                           // 2818
          radio: function() {                                                                                          // 2819
            return ($input.hasClass(className.radio) || $input.attr('type') == 'radio');                               // 2820
          },                                                                                                           // 2821
          indeterminate: function() {                                                                                  // 2822
            return $input.prop('indeterminate') !== undefined && $input.prop('indeterminate');                         // 2823
          },                                                                                                           // 2824
          checked: function() {                                                                                        // 2825
            return $input.prop('checked') !== undefined && $input.prop('checked');                                     // 2826
          },                                                                                                           // 2827
          disabled: function() {                                                                                       // 2828
            return $input.prop('disabled') !== undefined && $input.prop('disabled');                                   // 2829
          },                                                                                                           // 2830
          enabled: function() {                                                                                        // 2831
            return !module.is.disabled();                                                                              // 2832
          },                                                                                                           // 2833
          determinate: function() {                                                                                    // 2834
            return !module.is.indeterminate();                                                                         // 2835
          },                                                                                                           // 2836
          unchecked: function() {                                                                                      // 2837
            return !module.is.checked();                                                                               // 2838
          }                                                                                                            // 2839
        },                                                                                                             // 2840
                                                                                                                       // 2841
        should: {                                                                                                      // 2842
          allowCheck: function() {                                                                                     // 2843
            if(module.is.determinate() && module.is.checked() && !module.should.forceCallbacks() ) {                   // 2844
              module.debug('Should not allow check, checkbox is already checked');                                     // 2845
              return false;                                                                                            // 2846
            }                                                                                                          // 2847
            if(settings.beforeChecked.apply(input) === false) {                                                        // 2848
              module.debug('Should not allow check, beforeChecked cancelled');                                         // 2849
              return false;                                                                                            // 2850
            }                                                                                                          // 2851
            return true;                                                                                               // 2852
          },                                                                                                           // 2853
          allowUncheck: function() {                                                                                   // 2854
            if(module.is.determinate() && module.is.unchecked() && !module.should.forceCallbacks() ) {                 // 2855
              module.debug('Should not allow uncheck, checkbox is already unchecked');                                 // 2856
              return false;                                                                                            // 2857
            }                                                                                                          // 2858
            if(settings.beforeUnchecked.apply(input) === false) {                                                      // 2859
              module.debug('Should not allow uncheck, beforeUnchecked cancelled');                                     // 2860
              return false;                                                                                            // 2861
            }                                                                                                          // 2862
            return true;                                                                                               // 2863
          },                                                                                                           // 2864
          allowIndeterminate: function() {                                                                             // 2865
            if(module.is.indeterminate() && !module.should.forceCallbacks() ) {                                        // 2866
              module.debug('Should not allow indeterminate, checkbox is already indeterminate');                       // 2867
              return false;                                                                                            // 2868
            }                                                                                                          // 2869
            if(settings.beforeIndeterminate.apply(input) === false) {                                                  // 2870
              module.debug('Should not allow indeterminate, beforeIndeterminate cancelled');                           // 2871
              return false;                                                                                            // 2872
            }                                                                                                          // 2873
            return true;                                                                                               // 2874
          },                                                                                                           // 2875
          allowDeterminate: function() {                                                                               // 2876
            if(module.is.determinate() && !module.should.forceCallbacks() ) {                                          // 2877
              module.debug('Should not allow determinate, checkbox is already determinate');                           // 2878
              return false;                                                                                            // 2879
            }                                                                                                          // 2880
            if(settings.beforeDeterminate.apply(input) === false) {                                                    // 2881
              module.debug('Should not allow determinate, beforeDeterminate cancelled');                               // 2882
              return false;                                                                                            // 2883
            }                                                                                                          // 2884
            return true;                                                                                               // 2885
          },                                                                                                           // 2886
          forceCallbacks: function() {                                                                                 // 2887
            return (module.is.initialLoad() && settings.fireOnInit);                                                   // 2888
          },                                                                                                           // 2889
          ignoreCallbacks: function() {                                                                                // 2890
            return (initialLoad && !settings.fireOnInit);                                                              // 2891
          }                                                                                                            // 2892
        },                                                                                                             // 2893
                                                                                                                       // 2894
        can: {                                                                                                         // 2895
          change: function() {                                                                                         // 2896
            return !( $module.hasClass(className.disabled) || $module.hasClass(className.readOnly) || $input.prop('disabled') || $input.prop('readonly') );
          },                                                                                                           // 2898
          uncheck: function() {                                                                                        // 2899
            return (typeof settings.uncheckable === 'boolean')                                                         // 2900
              ? settings.uncheckable                                                                                   // 2901
              : !module.is.radio()                                                                                     // 2902
            ;                                                                                                          // 2903
          }                                                                                                            // 2904
        },                                                                                                             // 2905
                                                                                                                       // 2906
        set: {                                                                                                         // 2907
          initialLoad: function() {                                                                                    // 2908
            initialLoad = true;                                                                                        // 2909
          },                                                                                                           // 2910
          checked: function() {                                                                                        // 2911
            module.verbose('Setting class to checked');                                                                // 2912
            $module                                                                                                    // 2913
              .removeClass(className.indeterminate)                                                                    // 2914
              .addClass(className.checked)                                                                             // 2915
            ;                                                                                                          // 2916
            if( module.is.radio() ) {                                                                                  // 2917
              module.uncheckOthers();                                                                                  // 2918
            }                                                                                                          // 2919
            if(!module.is.indeterminate() && module.is.checked()) {                                                    // 2920
              module.debug('Input is already checked, skipping input property change');                                // 2921
              return;                                                                                                  // 2922
            }                                                                                                          // 2923
            module.verbose('Setting state to checked', input);                                                         // 2924
            $input                                                                                                     // 2925
              .prop('indeterminate', false)                                                                            // 2926
              .prop('checked', true)                                                                                   // 2927
            ;                                                                                                          // 2928
            module.trigger.change();                                                                                   // 2929
          },                                                                                                           // 2930
          unchecked: function() {                                                                                      // 2931
            module.verbose('Removing checked class');                                                                  // 2932
            $module                                                                                                    // 2933
              .removeClass(className.indeterminate)                                                                    // 2934
              .removeClass(className.checked)                                                                          // 2935
            ;                                                                                                          // 2936
            if(!module.is.indeterminate() &&  module.is.unchecked() ) {                                                // 2937
              module.debug('Input is already unchecked');                                                              // 2938
              return;                                                                                                  // 2939
            }                                                                                                          // 2940
            module.debug('Setting state to unchecked');                                                                // 2941
            $input                                                                                                     // 2942
              .prop('indeterminate', false)                                                                            // 2943
              .prop('checked', false)                                                                                  // 2944
            ;                                                                                                          // 2945
            module.trigger.change();                                                                                   // 2946
          },                                                                                                           // 2947
          indeterminate: function() {                                                                                  // 2948
            module.verbose('Setting class to indeterminate');                                                          // 2949
            $module                                                                                                    // 2950
              .addClass(className.indeterminate)                                                                       // 2951
            ;                                                                                                          // 2952
            if( module.is.indeterminate() ) {                                                                          // 2953
              module.debug('Input is already indeterminate, skipping input property change');                          // 2954
              return;                                                                                                  // 2955
            }                                                                                                          // 2956
            module.debug('Setting state to indeterminate');                                                            // 2957
            $input                                                                                                     // 2958
              .prop('indeterminate', true)                                                                             // 2959
            ;                                                                                                          // 2960
            module.trigger.change();                                                                                   // 2961
          },                                                                                                           // 2962
          determinate: function() {                                                                                    // 2963
            module.verbose('Removing indeterminate class');                                                            // 2964
            $module                                                                                                    // 2965
              .removeClass(className.indeterminate)                                                                    // 2966
            ;                                                                                                          // 2967
            if( module.is.determinate() ) {                                                                            // 2968
              module.debug('Input is already determinate, skipping input property change');                            // 2969
              return;                                                                                                  // 2970
            }                                                                                                          // 2971
            module.debug('Setting state to determinate');                                                              // 2972
            $input                                                                                                     // 2973
              .prop('indeterminate', false)                                                                            // 2974
            ;                                                                                                          // 2975
          },                                                                                                           // 2976
          disabled: function() {                                                                                       // 2977
            module.verbose('Setting class to disabled');                                                               // 2978
            $module                                                                                                    // 2979
              .addClass(className.disabled)                                                                            // 2980
            ;                                                                                                          // 2981
            if( module.is.disabled() ) {                                                                               // 2982
              module.debug('Input is already disabled, skipping input property change');                               // 2983
              return;                                                                                                  // 2984
            }                                                                                                          // 2985
            module.debug('Setting state to disabled');                                                                 // 2986
            $input                                                                                                     // 2987
              .prop('disabled', 'disabled')                                                                            // 2988
            ;                                                                                                          // 2989
            module.trigger.change();                                                                                   // 2990
          },                                                                                                           // 2991
          enabled: function() {                                                                                        // 2992
            module.verbose('Removing disabled class');                                                                 // 2993
            $module.removeClass(className.disabled);                                                                   // 2994
            if( module.is.enabled() ) {                                                                                // 2995
              module.debug('Input is already enabled, skipping input property change');                                // 2996
              return;                                                                                                  // 2997
            }                                                                                                          // 2998
            module.debug('Setting state to enabled');                                                                  // 2999
            $input                                                                                                     // 3000
              .prop('disabled', false)                                                                                 // 3001
            ;                                                                                                          // 3002
            module.trigger.change();                                                                                   // 3003
          },                                                                                                           // 3004
          tabbable: function() {                                                                                       // 3005
            module.verbose('Adding tabindex to checkbox');                                                             // 3006
            if( $input.attr('tabindex') === undefined) {                                                               // 3007
              $input.attr('tabindex', 0);                                                                              // 3008
            }                                                                                                          // 3009
          }                                                                                                            // 3010
        },                                                                                                             // 3011
                                                                                                                       // 3012
        remove: {                                                                                                      // 3013
          initialLoad: function() {                                                                                    // 3014
            initialLoad = false;                                                                                       // 3015
          }                                                                                                            // 3016
        },                                                                                                             // 3017
                                                                                                                       // 3018
        trigger: {                                                                                                     // 3019
          change: function() {                                                                                         // 3020
            module.verbose('Triggering change event from programmatic change');                                        // 3021
            $input                                                                                                     // 3022
              .trigger('change')                                                                                       // 3023
            ;                                                                                                          // 3024
          }                                                                                                            // 3025
        },                                                                                                             // 3026
                                                                                                                       // 3027
                                                                                                                       // 3028
        create: {                                                                                                      // 3029
          label: function() {                                                                                          // 3030
            if($input.prevAll(selector.label).length > 0) {                                                            // 3031
              $input.prev(selector.label).detach().insertAfter($input);                                                // 3032
              module.debug('Moving existing label', $label);                                                           // 3033
            }                                                                                                          // 3034
            else if( !module.has.label() ) {                                                                           // 3035
              $label = $('<label>').insertAfter($input);                                                               // 3036
              module.debug('Creating label', $label);                                                                  // 3037
            }                                                                                                          // 3038
          }                                                                                                            // 3039
        },                                                                                                             // 3040
                                                                                                                       // 3041
        has: {                                                                                                         // 3042
          label: function() {                                                                                          // 3043
            return ($label.length > 0);                                                                                // 3044
          }                                                                                                            // 3045
        },                                                                                                             // 3046
                                                                                                                       // 3047
        bind: {                                                                                                        // 3048
          events: function() {                                                                                         // 3049
            module.verbose('Attaching checkbox events');                                                               // 3050
            $module                                                                                                    // 3051
              .on('click'   + eventNamespace, module.event.click)                                                      // 3052
              .on('keydown' + eventNamespace, selector.input, module.event.keydown)                                    // 3053
              .on('keyup'   + eventNamespace, selector.input, module.event.keyup)                                      // 3054
            ;                                                                                                          // 3055
          }                                                                                                            // 3056
        },                                                                                                             // 3057
                                                                                                                       // 3058
        unbind: {                                                                                                      // 3059
          events: function() {                                                                                         // 3060
            module.debug('Removing events');                                                                           // 3061
            $module                                                                                                    // 3062
              .off(eventNamespace)                                                                                     // 3063
            ;                                                                                                          // 3064
          }                                                                                                            // 3065
        },                                                                                                             // 3066
                                                                                                                       // 3067
        uncheckOthers: function() {                                                                                    // 3068
          var                                                                                                          // 3069
            $radios = module.get.otherRadios()                                                                         // 3070
          ;                                                                                                            // 3071
          module.debug('Unchecking other radios', $radios);                                                            // 3072
          $radios.removeClass(className.checked);                                                                      // 3073
        },                                                                                                             // 3074
                                                                                                                       // 3075
        toggle: function() {                                                                                           // 3076
          if( !module.can.change() ) {                                                                                 // 3077
            if(!module.is.radio()) {                                                                                   // 3078
              module.debug('Checkbox is read-only or disabled, ignoring toggle');                                      // 3079
            }                                                                                                          // 3080
            return;                                                                                                    // 3081
          }                                                                                                            // 3082
          if( module.is.indeterminate() || module.is.unchecked() ) {                                                   // 3083
            module.debug('Currently unchecked');                                                                       // 3084
            module.check();                                                                                            // 3085
          }                                                                                                            // 3086
          else if( module.is.checked() && module.can.uncheck() ) {                                                     // 3087
            module.debug('Currently checked');                                                                         // 3088
            module.uncheck();                                                                                          // 3089
          }                                                                                                            // 3090
        },                                                                                                             // 3091
        setting: function(name, value) {                                                                               // 3092
          module.debug('Changing setting', name, value);                                                               // 3093
          if( $.isPlainObject(name) ) {                                                                                // 3094
            $.extend(true, settings, name);                                                                            // 3095
          }                                                                                                            // 3096
          else if(value !== undefined) {                                                                               // 3097
            settings[name] = value;                                                                                    // 3098
          }                                                                                                            // 3099
          else {                                                                                                       // 3100
            return settings[name];                                                                                     // 3101
          }                                                                                                            // 3102
        },                                                                                                             // 3103
        internal: function(name, value) {                                                                              // 3104
          if( $.isPlainObject(name) ) {                                                                                // 3105
            $.extend(true, module, name);                                                                              // 3106
          }                                                                                                            // 3107
          else if(value !== undefined) {                                                                               // 3108
            module[name] = value;                                                                                      // 3109
          }                                                                                                            // 3110
          else {                                                                                                       // 3111
            return module[name];                                                                                       // 3112
          }                                                                                                            // 3113
        },                                                                                                             // 3114
        debug: function() {                                                                                            // 3115
          if(settings.debug) {                                                                                         // 3116
            if(settings.performance) {                                                                                 // 3117
              module.performance.log(arguments);                                                                       // 3118
            }                                                                                                          // 3119
            else {                                                                                                     // 3120
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 3121
              module.debug.apply(console, arguments);                                                                  // 3122
            }                                                                                                          // 3123
          }                                                                                                            // 3124
        },                                                                                                             // 3125
        verbose: function() {                                                                                          // 3126
          if(settings.verbose && settings.debug) {                                                                     // 3127
            if(settings.performance) {                                                                                 // 3128
              module.performance.log(arguments);                                                                       // 3129
            }                                                                                                          // 3130
            else {                                                                                                     // 3131
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 3132
              module.verbose.apply(console, arguments);                                                                // 3133
            }                                                                                                          // 3134
          }                                                                                                            // 3135
        },                                                                                                             // 3136
        error: function() {                                                                                            // 3137
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 3138
          module.error.apply(console, arguments);                                                                      // 3139
        },                                                                                                             // 3140
        performance: {                                                                                                 // 3141
          log: function(message) {                                                                                     // 3142
            var                                                                                                        // 3143
              currentTime,                                                                                             // 3144
              executionTime,                                                                                           // 3145
              previousTime                                                                                             // 3146
            ;                                                                                                          // 3147
            if(settings.performance) {                                                                                 // 3148
              currentTime   = new Date().getTime();                                                                    // 3149
              previousTime  = time || currentTime;                                                                     // 3150
              executionTime = currentTime - previousTime;                                                              // 3151
              time          = currentTime;                                                                             // 3152
              performance.push({                                                                                       // 3153
                'Name'           : message[0],                                                                         // 3154
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 3155
                'Element'        : element,                                                                            // 3156
                'Execution Time' : executionTime                                                                       // 3157
              });                                                                                                      // 3158
            }                                                                                                          // 3159
            clearTimeout(module.performance.timer);                                                                    // 3160
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 3161
          },                                                                                                           // 3162
          display: function() {                                                                                        // 3163
            var                                                                                                        // 3164
              title = settings.name + ':',                                                                             // 3165
              totalTime = 0                                                                                            // 3166
            ;                                                                                                          // 3167
            time = false;                                                                                              // 3168
            clearTimeout(module.performance.timer);                                                                    // 3169
            $.each(performance, function(index, data) {                                                                // 3170
              totalTime += data['Execution Time'];                                                                     // 3171
            });                                                                                                        // 3172
            title += ' ' + totalTime + 'ms';                                                                           // 3173
            if(moduleSelector) {                                                                                       // 3174
              title += ' \'' + moduleSelector + '\'';                                                                  // 3175
            }                                                                                                          // 3176
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 3177
              console.groupCollapsed(title);                                                                           // 3178
              if(console.table) {                                                                                      // 3179
                console.table(performance);                                                                            // 3180
              }                                                                                                        // 3181
              else {                                                                                                   // 3182
                $.each(performance, function(index, data) {                                                            // 3183
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 3184
                });                                                                                                    // 3185
              }                                                                                                        // 3186
              console.groupEnd();                                                                                      // 3187
            }                                                                                                          // 3188
            performance = [];                                                                                          // 3189
          }                                                                                                            // 3190
        },                                                                                                             // 3191
        invoke: function(query, passedArguments, context) {                                                            // 3192
          var                                                                                                          // 3193
            object = instance,                                                                                         // 3194
            maxDepth,                                                                                                  // 3195
            found,                                                                                                     // 3196
            response                                                                                                   // 3197
          ;                                                                                                            // 3198
          passedArguments = passedArguments || queryArguments;                                                         // 3199
          context         = element         || context;                                                                // 3200
          if(typeof query == 'string' && object !== undefined) {                                                       // 3201
            query    = query.split(/[\. ]/);                                                                           // 3202
            maxDepth = query.length - 1;                                                                               // 3203
            $.each(query, function(depth, value) {                                                                     // 3204
              var camelCaseValue = (depth != maxDepth)                                                                 // 3205
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 3206
                : query                                                                                                // 3207
              ;                                                                                                        // 3208
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 3209
                object = object[camelCaseValue];                                                                       // 3210
              }                                                                                                        // 3211
              else if( object[camelCaseValue] !== undefined ) {                                                        // 3212
                found = object[camelCaseValue];                                                                        // 3213
                return false;                                                                                          // 3214
              }                                                                                                        // 3215
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 3216
                object = object[value];                                                                                // 3217
              }                                                                                                        // 3218
              else if( object[value] !== undefined ) {                                                                 // 3219
                found = object[value];                                                                                 // 3220
                return false;                                                                                          // 3221
              }                                                                                                        // 3222
              else {                                                                                                   // 3223
                module.error(error.method, query);                                                                     // 3224
                return false;                                                                                          // 3225
              }                                                                                                        // 3226
            });                                                                                                        // 3227
          }                                                                                                            // 3228
          if ( $.isFunction( found ) ) {                                                                               // 3229
            response = found.apply(context, passedArguments);                                                          // 3230
          }                                                                                                            // 3231
          else if(found !== undefined) {                                                                               // 3232
            response = found;                                                                                          // 3233
          }                                                                                                            // 3234
          if($.isArray(returnedValue)) {                                                                               // 3235
            returnedValue.push(response);                                                                              // 3236
          }                                                                                                            // 3237
          else if(returnedValue !== undefined) {                                                                       // 3238
            returnedValue = [returnedValue, response];                                                                 // 3239
          }                                                                                                            // 3240
          else if(response !== undefined) {                                                                            // 3241
            returnedValue = response;                                                                                  // 3242
          }                                                                                                            // 3243
          return found;                                                                                                // 3244
        }                                                                                                              // 3245
      };                                                                                                               // 3246
                                                                                                                       // 3247
      if(methodInvoked) {                                                                                              // 3248
        if(instance === undefined) {                                                                                   // 3249
          module.initialize();                                                                                         // 3250
        }                                                                                                              // 3251
        module.invoke(query);                                                                                          // 3252
      }                                                                                                                // 3253
      else {                                                                                                           // 3254
        if(instance !== undefined) {                                                                                   // 3255
          instance.invoke('destroy');                                                                                  // 3256
        }                                                                                                              // 3257
        module.initialize();                                                                                           // 3258
      }                                                                                                                // 3259
    })                                                                                                                 // 3260
  ;                                                                                                                    // 3261
                                                                                                                       // 3262
  return (returnedValue !== undefined)                                                                                 // 3263
    ? returnedValue                                                                                                    // 3264
    : this                                                                                                             // 3265
  ;                                                                                                                    // 3266
};                                                                                                                     // 3267
                                                                                                                       // 3268
$.fn.checkbox.settings = {                                                                                             // 3269
                                                                                                                       // 3270
  name                : 'Checkbox',                                                                                    // 3271
  namespace           : 'checkbox',                                                                                    // 3272
                                                                                                                       // 3273
  debug               : false,                                                                                         // 3274
  verbose             : true,                                                                                          // 3275
  performance         : true,                                                                                          // 3276
                                                                                                                       // 3277
  // delegated event context                                                                                           // 3278
  uncheckable         : 'auto',                                                                                        // 3279
  fireOnInit          : false,                                                                                         // 3280
                                                                                                                       // 3281
  onChange            : function(){},                                                                                  // 3282
                                                                                                                       // 3283
  beforeChecked       : function(){},                                                                                  // 3284
  beforeUnchecked     : function(){},                                                                                  // 3285
  beforeDeterminate   : function(){},                                                                                  // 3286
  beforeIndeterminate : function(){},                                                                                  // 3287
                                                                                                                       // 3288
  onChecked           : function(){},                                                                                  // 3289
  onUnchecked         : function(){},                                                                                  // 3290
                                                                                                                       // 3291
  onDeterminate       : function() {},                                                                                 // 3292
  onIndeterminate     : function() {},                                                                                 // 3293
                                                                                                                       // 3294
  onEnabled           : function(){},                                                                                  // 3295
  onDisabled          : function(){},                                                                                  // 3296
                                                                                                                       // 3297
  className       : {                                                                                                  // 3298
    checked       : 'checked',                                                                                         // 3299
    indeterminate : 'indeterminate',                                                                                   // 3300
    disabled      : 'disabled',                                                                                        // 3301
    hidden        : 'hidden',                                                                                          // 3302
    radio         : 'radio',                                                                                           // 3303
    readOnly      : 'read-only'                                                                                        // 3304
  },                                                                                                                   // 3305
                                                                                                                       // 3306
  error     : {                                                                                                        // 3307
    method       : 'The method you called is not defined'                                                              // 3308
  },                                                                                                                   // 3309
                                                                                                                       // 3310
  selector : {                                                                                                         // 3311
    checkbox : '.ui.checkbox',                                                                                         // 3312
    label    : 'label, .box',                                                                                          // 3313
    input    : 'input[type="checkbox"], input[type="radio"]',                                                          // 3314
    link     : 'a[href]'                                                                                               // 3315
  }                                                                                                                    // 3316
                                                                                                                       // 3317
};                                                                                                                     // 3318
                                                                                                                       // 3319
})( jQuery, window , document );                                                                                       // 3320
                                                                                                                       // 3321
/*!                                                                                                                    // 3322
 * # Semantic UI 2.1.2 - Dimmer                                                                                        // 3323
 * http://github.com/semantic-org/semantic-ui/                                                                         // 3324
 *                                                                                                                     // 3325
 *                                                                                                                     // 3326
 * Copyright 2015 Contributors                                                                                         // 3327
 * Released under the MIT license                                                                                      // 3328
 * http://opensource.org/licenses/MIT                                                                                  // 3329
 *                                                                                                                     // 3330
 */                                                                                                                    // 3331
                                                                                                                       // 3332
;(function ( $, window, document, undefined ) {                                                                        // 3333
                                                                                                                       // 3334
"use strict";                                                                                                          // 3335
                                                                                                                       // 3336
$.fn.dimmer = function(parameters) {                                                                                   // 3337
  var                                                                                                                  // 3338
    $allModules     = $(this),                                                                                         // 3339
                                                                                                                       // 3340
    time            = new Date().getTime(),                                                                            // 3341
    performance     = [],                                                                                              // 3342
                                                                                                                       // 3343
    query           = arguments[0],                                                                                    // 3344
    methodInvoked   = (typeof query == 'string'),                                                                      // 3345
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 3346
                                                                                                                       // 3347
    returnedValue                                                                                                      // 3348
  ;                                                                                                                    // 3349
                                                                                                                       // 3350
  $allModules                                                                                                          // 3351
    .each(function() {                                                                                                 // 3352
      var                                                                                                              // 3353
        settings        = ( $.isPlainObject(parameters) )                                                              // 3354
          ? $.extend(true, {}, $.fn.dimmer.settings, parameters)                                                       // 3355
          : $.extend({}, $.fn.dimmer.settings),                                                                        // 3356
                                                                                                                       // 3357
        selector        = settings.selector,                                                                           // 3358
        namespace       = settings.namespace,                                                                          // 3359
        className       = settings.className,                                                                          // 3360
        error           = settings.error,                                                                              // 3361
                                                                                                                       // 3362
        eventNamespace  = '.' + namespace,                                                                             // 3363
        moduleNamespace = 'module-' + namespace,                                                                       // 3364
        moduleSelector  = $allModules.selector || '',                                                                  // 3365
                                                                                                                       // 3366
        clickEvent      = ('ontouchstart' in document.documentElement)                                                 // 3367
          ? 'touchstart'                                                                                               // 3368
          : 'click',                                                                                                   // 3369
                                                                                                                       // 3370
        $module = $(this),                                                                                             // 3371
        $dimmer,                                                                                                       // 3372
        $dimmable,                                                                                                     // 3373
                                                                                                                       // 3374
        element   = this,                                                                                              // 3375
        instance  = $module.data(moduleNamespace),                                                                     // 3376
        module                                                                                                         // 3377
      ;                                                                                                                // 3378
                                                                                                                       // 3379
      module = {                                                                                                       // 3380
                                                                                                                       // 3381
        preinitialize: function() {                                                                                    // 3382
          if( module.is.dimmer() ) {                                                                                   // 3383
                                                                                                                       // 3384
            $dimmable = $module.parent();                                                                              // 3385
            $dimmer   = $module;                                                                                       // 3386
          }                                                                                                            // 3387
          else {                                                                                                       // 3388
            $dimmable = $module;                                                                                       // 3389
            if( module.has.dimmer() ) {                                                                                // 3390
              if(settings.dimmerName) {                                                                                // 3391
                $dimmer = $dimmable.find(selector.dimmer).filter('.' + settings.dimmerName);                           // 3392
              }                                                                                                        // 3393
              else {                                                                                                   // 3394
                $dimmer = $dimmable.find(selector.dimmer);                                                             // 3395
              }                                                                                                        // 3396
            }                                                                                                          // 3397
            else {                                                                                                     // 3398
              $dimmer = module.create();                                                                               // 3399
            }                                                                                                          // 3400
          }                                                                                                            // 3401
        },                                                                                                             // 3402
                                                                                                                       // 3403
        initialize: function() {                                                                                       // 3404
          module.debug('Initializing dimmer', settings);                                                               // 3405
                                                                                                                       // 3406
          module.bind.events();                                                                                        // 3407
          module.set.dimmable();                                                                                       // 3408
          module.instantiate();                                                                                        // 3409
        },                                                                                                             // 3410
                                                                                                                       // 3411
        instantiate: function() {                                                                                      // 3412
          module.verbose('Storing instance of module', module);                                                        // 3413
          instance = module;                                                                                           // 3414
          $module                                                                                                      // 3415
            .data(moduleNamespace, instance)                                                                           // 3416
          ;                                                                                                            // 3417
        },                                                                                                             // 3418
                                                                                                                       // 3419
        destroy: function() {                                                                                          // 3420
          module.verbose('Destroying previous module', $dimmer);                                                       // 3421
          module.unbind.events();                                                                                      // 3422
          module.remove.variation();                                                                                   // 3423
          $dimmable                                                                                                    // 3424
            .off(eventNamespace)                                                                                       // 3425
          ;                                                                                                            // 3426
        },                                                                                                             // 3427
                                                                                                                       // 3428
        bind: {                                                                                                        // 3429
          events: function() {                                                                                         // 3430
            if(settings.on == 'hover') {                                                                               // 3431
              $dimmable                                                                                                // 3432
                .on('mouseenter' + eventNamespace, module.show)                                                        // 3433
                .on('mouseleave' + eventNamespace, module.hide)                                                        // 3434
              ;                                                                                                        // 3435
            }                                                                                                          // 3436
            else if(settings.on == 'click') {                                                                          // 3437
              $dimmable                                                                                                // 3438
                .on(clickEvent + eventNamespace, module.toggle)                                                        // 3439
              ;                                                                                                        // 3440
            }                                                                                                          // 3441
            if( module.is.page() ) {                                                                                   // 3442
              module.debug('Setting as a page dimmer', $dimmable);                                                     // 3443
              module.set.pageDimmer();                                                                                 // 3444
            }                                                                                                          // 3445
                                                                                                                       // 3446
            if( module.is.closable() ) {                                                                               // 3447
              module.verbose('Adding dimmer close event', $dimmer);                                                    // 3448
              $dimmable                                                                                                // 3449
                .on(clickEvent + eventNamespace, selector.dimmer, module.event.click)                                  // 3450
              ;                                                                                                        // 3451
            }                                                                                                          // 3452
          }                                                                                                            // 3453
        },                                                                                                             // 3454
                                                                                                                       // 3455
        unbind: {                                                                                                      // 3456
          events: function() {                                                                                         // 3457
            $module                                                                                                    // 3458
              .removeData(moduleNamespace)                                                                             // 3459
            ;                                                                                                          // 3460
          }                                                                                                            // 3461
        },                                                                                                             // 3462
                                                                                                                       // 3463
        event: {                                                                                                       // 3464
          click: function(event) {                                                                                     // 3465
            module.verbose('Determining if event occured on dimmer', event);                                           // 3466
            if( $dimmer.find(event.target).length === 0 || $(event.target).is(selector.content) ) {                    // 3467
              module.hide();                                                                                           // 3468
              event.stopImmediatePropagation();                                                                        // 3469
            }                                                                                                          // 3470
          }                                                                                                            // 3471
        },                                                                                                             // 3472
                                                                                                                       // 3473
        addContent: function(element) {                                                                                // 3474
          var                                                                                                          // 3475
            $content = $(element)                                                                                      // 3476
          ;                                                                                                            // 3477
          module.debug('Add content to dimmer', $content);                                                             // 3478
          if($content.parent()[0] !== $dimmer[0]) {                                                                    // 3479
            $content.detach().appendTo($dimmer);                                                                       // 3480
          }                                                                                                            // 3481
        },                                                                                                             // 3482
                                                                                                                       // 3483
        create: function() {                                                                                           // 3484
          var                                                                                                          // 3485
            $element = $( settings.template.dimmer() )                                                                 // 3486
          ;                                                                                                            // 3487
          if(settings.variation) {                                                                                     // 3488
            module.debug('Creating dimmer with variation', settings.variation);                                        // 3489
            $element.addClass(settings.variation);                                                                     // 3490
          }                                                                                                            // 3491
          if(settings.dimmerName) {                                                                                    // 3492
            module.debug('Creating named dimmer', settings.dimmerName);                                                // 3493
            $element.addClass(settings.dimmerName);                                                                    // 3494
          }                                                                                                            // 3495
          $element                                                                                                     // 3496
            .appendTo($dimmable)                                                                                       // 3497
          ;                                                                                                            // 3498
          return $element;                                                                                             // 3499
        },                                                                                                             // 3500
                                                                                                                       // 3501
        show: function(callback) {                                                                                     // 3502
          callback = $.isFunction(callback)                                                                            // 3503
            ? callback                                                                                                 // 3504
            : function(){}                                                                                             // 3505
          ;                                                                                                            // 3506
          module.debug('Showing dimmer', $dimmer, settings);                                                           // 3507
          if( (!module.is.dimmed() || module.is.animating()) && module.is.enabled() ) {                                // 3508
            module.animate.show(callback);                                                                             // 3509
            settings.onShow.call(element);                                                                             // 3510
            settings.onChange.call(element);                                                                           // 3511
          }                                                                                                            // 3512
          else {                                                                                                       // 3513
            module.debug('Dimmer is already shown or disabled');                                                       // 3514
          }                                                                                                            // 3515
        },                                                                                                             // 3516
                                                                                                                       // 3517
        hide: function(callback) {                                                                                     // 3518
          callback = $.isFunction(callback)                                                                            // 3519
            ? callback                                                                                                 // 3520
            : function(){}                                                                                             // 3521
          ;                                                                                                            // 3522
          if( module.is.dimmed() || module.is.animating() ) {                                                          // 3523
            module.debug('Hiding dimmer', $dimmer);                                                                    // 3524
            module.animate.hide(callback);                                                                             // 3525
            settings.onHide.call(element);                                                                             // 3526
            settings.onChange.call(element);                                                                           // 3527
          }                                                                                                            // 3528
          else {                                                                                                       // 3529
            module.debug('Dimmer is not visible');                                                                     // 3530
          }                                                                                                            // 3531
        },                                                                                                             // 3532
                                                                                                                       // 3533
        toggle: function() {                                                                                           // 3534
          module.verbose('Toggling dimmer visibility', $dimmer);                                                       // 3535
          if( !module.is.dimmed() ) {                                                                                  // 3536
            module.show();                                                                                             // 3537
          }                                                                                                            // 3538
          else {                                                                                                       // 3539
            module.hide();                                                                                             // 3540
          }                                                                                                            // 3541
        },                                                                                                             // 3542
                                                                                                                       // 3543
        animate: {                                                                                                     // 3544
          show: function(callback) {                                                                                   // 3545
            callback = $.isFunction(callback)                                                                          // 3546
              ? callback                                                                                               // 3547
              : function(){}                                                                                           // 3548
            ;                                                                                                          // 3549
            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {               // 3550
              if(settings.opacity !== 'auto') {                                                                        // 3551
                module.set.opacity();                                                                                  // 3552
              }                                                                                                        // 3553
              $dimmer                                                                                                  // 3554
                .transition({                                                                                          // 3555
                  animation   : settings.transition + ' in',                                                           // 3556
                  queue       : false,                                                                                 // 3557
                  duration    : module.get.duration(),                                                                 // 3558
                  useFailSafe : true,                                                                                  // 3559
                  onStart     : function() {                                                                           // 3560
                    module.set.dimmed();                                                                               // 3561
                  },                                                                                                   // 3562
                  onComplete  : function() {                                                                           // 3563
                    module.set.active();                                                                               // 3564
                    callback();                                                                                        // 3565
                  }                                                                                                    // 3566
                })                                                                                                     // 3567
              ;                                                                                                        // 3568
            }                                                                                                          // 3569
            else {                                                                                                     // 3570
              module.verbose('Showing dimmer animation with javascript');                                              // 3571
              module.set.dimmed();                                                                                     // 3572
              if(settings.opacity == 'auto') {                                                                         // 3573
                settings.opacity = 0.8;                                                                                // 3574
              }                                                                                                        // 3575
              $dimmer                                                                                                  // 3576
                .stop()                                                                                                // 3577
                .css({                                                                                                 // 3578
                  opacity : 0,                                                                                         // 3579
                  width   : '100%',                                                                                    // 3580
                  height  : '100%'                                                                                     // 3581
                })                                                                                                     // 3582
                .fadeTo(module.get.duration(), settings.opacity, function() {                                          // 3583
                  $dimmer.removeAttr('style');                                                                         // 3584
                  module.set.active();                                                                                 // 3585
                  callback();                                                                                          // 3586
                })                                                                                                     // 3587
              ;                                                                                                        // 3588
            }                                                                                                          // 3589
          },                                                                                                           // 3590
          hide: function(callback) {                                                                                   // 3591
            callback = $.isFunction(callback)                                                                          // 3592
              ? callback                                                                                               // 3593
              : function(){}                                                                                           // 3594
            ;                                                                                                          // 3595
            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {               // 3596
              module.verbose('Hiding dimmer with css');                                                                // 3597
              $dimmer                                                                                                  // 3598
                .transition({                                                                                          // 3599
                  animation   : settings.transition + ' out',                                                          // 3600
                  queue       : false,                                                                                 // 3601
                  duration    : module.get.duration(),                                                                 // 3602
                  useFailSafe : true,                                                                                  // 3603
                  onStart     : function() {                                                                           // 3604
                    module.remove.dimmed();                                                                            // 3605
                  },                                                                                                   // 3606
                  onComplete  : function() {                                                                           // 3607
                    module.remove.active();                                                                            // 3608
                    callback();                                                                                        // 3609
                  }                                                                                                    // 3610
                })                                                                                                     // 3611
              ;                                                                                                        // 3612
            }                                                                                                          // 3613
            else {                                                                                                     // 3614
              module.verbose('Hiding dimmer with javascript');                                                         // 3615
              module.remove.dimmed();                                                                                  // 3616
              $dimmer                                                                                                  // 3617
                .stop()                                                                                                // 3618
                .fadeOut(module.get.duration(), function() {                                                           // 3619
                  module.remove.active();                                                                              // 3620
                  $dimmer.removeAttr('style');                                                                         // 3621
                  callback();                                                                                          // 3622
                })                                                                                                     // 3623
              ;                                                                                                        // 3624
            }                                                                                                          // 3625
          }                                                                                                            // 3626
        },                                                                                                             // 3627
                                                                                                                       // 3628
        get: {                                                                                                         // 3629
          dimmer: function() {                                                                                         // 3630
            return $dimmer;                                                                                            // 3631
          },                                                                                                           // 3632
          duration: function() {                                                                                       // 3633
            if(typeof settings.duration == 'object') {                                                                 // 3634
              if( module.is.active() ) {                                                                               // 3635
                return settings.duration.hide;                                                                         // 3636
              }                                                                                                        // 3637
              else {                                                                                                   // 3638
                return settings.duration.show;                                                                         // 3639
              }                                                                                                        // 3640
            }                                                                                                          // 3641
            return settings.duration;                                                                                  // 3642
          }                                                                                                            // 3643
        },                                                                                                             // 3644
                                                                                                                       // 3645
        has: {                                                                                                         // 3646
          dimmer: function() {                                                                                         // 3647
            if(settings.dimmerName) {                                                                                  // 3648
              return ($module.find(selector.dimmer).filter('.' + settings.dimmerName).length > 0);                     // 3649
            }                                                                                                          // 3650
            else {                                                                                                     // 3651
              return ( $module.find(selector.dimmer).length > 0 );                                                     // 3652
            }                                                                                                          // 3653
          }                                                                                                            // 3654
        },                                                                                                             // 3655
                                                                                                                       // 3656
        is: {                                                                                                          // 3657
          active: function() {                                                                                         // 3658
            return $dimmer.hasClass(className.active);                                                                 // 3659
          },                                                                                                           // 3660
          animating: function() {                                                                                      // 3661
            return ( $dimmer.is(':animated') || $dimmer.hasClass(className.animating) );                               // 3662
          },                                                                                                           // 3663
          closable: function() {                                                                                       // 3664
            if(settings.closable == 'auto') {                                                                          // 3665
              if(settings.on == 'hover') {                                                                             // 3666
                return false;                                                                                          // 3667
              }                                                                                                        // 3668
              return true;                                                                                             // 3669
            }                                                                                                          // 3670
            return settings.closable;                                                                                  // 3671
          },                                                                                                           // 3672
          dimmer: function() {                                                                                         // 3673
            return $module.hasClass(className.dimmer);                                                                 // 3674
          },                                                                                                           // 3675
          dimmable: function() {                                                                                       // 3676
            return $module.hasClass(className.dimmable);                                                               // 3677
          },                                                                                                           // 3678
          dimmed: function() {                                                                                         // 3679
            return $dimmable.hasClass(className.dimmed);                                                               // 3680
          },                                                                                                           // 3681
          disabled: function() {                                                                                       // 3682
            return $dimmable.hasClass(className.disabled);                                                             // 3683
          },                                                                                                           // 3684
          enabled: function() {                                                                                        // 3685
            return !module.is.disabled();                                                                              // 3686
          },                                                                                                           // 3687
          page: function () {                                                                                          // 3688
            return $dimmable.is('body');                                                                               // 3689
          },                                                                                                           // 3690
          pageDimmer: function() {                                                                                     // 3691
            return $dimmer.hasClass(className.pageDimmer);                                                             // 3692
          }                                                                                                            // 3693
        },                                                                                                             // 3694
                                                                                                                       // 3695
        can: {                                                                                                         // 3696
          show: function() {                                                                                           // 3697
            return !$dimmer.hasClass(className.disabled);                                                              // 3698
          }                                                                                                            // 3699
        },                                                                                                             // 3700
                                                                                                                       // 3701
        set: {                                                                                                         // 3702
          opacity: function(opacity) {                                                                                 // 3703
            var                                                                                                        // 3704
              color      = $dimmer.css('background-color'),                                                            // 3705
              colorArray = color.split(','),                                                                           // 3706
              isRGBA     = (colorArray && colorArray.length == 4)                                                      // 3707
            ;                                                                                                          // 3708
            opacity    = settings.opacity || opacity;                                                                  // 3709
            if(isRGBA) {                                                                                               // 3710
              colorArray[3] = opacity + ')';                                                                           // 3711
              color         = colorArray.join(',');                                                                    // 3712
            }                                                                                                          // 3713
            else {                                                                                                     // 3714
              color = 'rgba(0, 0, 0, ' + opacity + ')';                                                                // 3715
            }                                                                                                          // 3716
            module.debug('Setting opacity to', opacity);                                                               // 3717
            $dimmer.css('background-color', color);                                                                    // 3718
          },                                                                                                           // 3719
          active: function() {                                                                                         // 3720
            $dimmer.addClass(className.active);                                                                        // 3721
          },                                                                                                           // 3722
          dimmable: function() {                                                                                       // 3723
            $dimmable.addClass(className.dimmable);                                                                    // 3724
          },                                                                                                           // 3725
          dimmed: function() {                                                                                         // 3726
            $dimmable.addClass(className.dimmed);                                                                      // 3727
          },                                                                                                           // 3728
          pageDimmer: function() {                                                                                     // 3729
            $dimmer.addClass(className.pageDimmer);                                                                    // 3730
          },                                                                                                           // 3731
          disabled: function() {                                                                                       // 3732
            $dimmer.addClass(className.disabled);                                                                      // 3733
          },                                                                                                           // 3734
          variation: function(variation) {                                                                             // 3735
            variation = variation || settings.variation;                                                               // 3736
            if(variation) {                                                                                            // 3737
              $dimmer.addClass(variation);                                                                             // 3738
            }                                                                                                          // 3739
          }                                                                                                            // 3740
        },                                                                                                             // 3741
                                                                                                                       // 3742
        remove: {                                                                                                      // 3743
          active: function() {                                                                                         // 3744
            $dimmer                                                                                                    // 3745
              .removeClass(className.active)                                                                           // 3746
            ;                                                                                                          // 3747
          },                                                                                                           // 3748
          dimmed: function() {                                                                                         // 3749
            $dimmable.removeClass(className.dimmed);                                                                   // 3750
          },                                                                                                           // 3751
          disabled: function() {                                                                                       // 3752
            $dimmer.removeClass(className.disabled);                                                                   // 3753
          },                                                                                                           // 3754
          variation: function(variation) {                                                                             // 3755
            variation = variation || settings.variation;                                                               // 3756
            if(variation) {                                                                                            // 3757
              $dimmer.removeClass(variation);                                                                          // 3758
            }                                                                                                          // 3759
          }                                                                                                            // 3760
        },                                                                                                             // 3761
                                                                                                                       // 3762
        setting: function(name, value) {                                                                               // 3763
          module.debug('Changing setting', name, value);                                                               // 3764
          if( $.isPlainObject(name) ) {                                                                                // 3765
            $.extend(true, settings, name);                                                                            // 3766
          }                                                                                                            // 3767
          else if(value !== undefined) {                                                                               // 3768
            settings[name] = value;                                                                                    // 3769
          }                                                                                                            // 3770
          else {                                                                                                       // 3771
            return settings[name];                                                                                     // 3772
          }                                                                                                            // 3773
        },                                                                                                             // 3774
        internal: function(name, value) {                                                                              // 3775
          if( $.isPlainObject(name) ) {                                                                                // 3776
            $.extend(true, module, name);                                                                              // 3777
          }                                                                                                            // 3778
          else if(value !== undefined) {                                                                               // 3779
            module[name] = value;                                                                                      // 3780
          }                                                                                                            // 3781
          else {                                                                                                       // 3782
            return module[name];                                                                                       // 3783
          }                                                                                                            // 3784
        },                                                                                                             // 3785
        debug: function() {                                                                                            // 3786
          if(settings.debug) {                                                                                         // 3787
            if(settings.performance) {                                                                                 // 3788
              module.performance.log(arguments);                                                                       // 3789
            }                                                                                                          // 3790
            else {                                                                                                     // 3791
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 3792
              module.debug.apply(console, arguments);                                                                  // 3793
            }                                                                                                          // 3794
          }                                                                                                            // 3795
        },                                                                                                             // 3796
        verbose: function() {                                                                                          // 3797
          if(settings.verbose && settings.debug) {                                                                     // 3798
            if(settings.performance) {                                                                                 // 3799
              module.performance.log(arguments);                                                                       // 3800
            }                                                                                                          // 3801
            else {                                                                                                     // 3802
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 3803
              module.verbose.apply(console, arguments);                                                                // 3804
            }                                                                                                          // 3805
          }                                                                                                            // 3806
        },                                                                                                             // 3807
        error: function() {                                                                                            // 3808
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 3809
          module.error.apply(console, arguments);                                                                      // 3810
        },                                                                                                             // 3811
        performance: {                                                                                                 // 3812
          log: function(message) {                                                                                     // 3813
            var                                                                                                        // 3814
              currentTime,                                                                                             // 3815
              executionTime,                                                                                           // 3816
              previousTime                                                                                             // 3817
            ;                                                                                                          // 3818
            if(settings.performance) {                                                                                 // 3819
              currentTime   = new Date().getTime();                                                                    // 3820
              previousTime  = time || currentTime;                                                                     // 3821
              executionTime = currentTime - previousTime;                                                              // 3822
              time          = currentTime;                                                                             // 3823
              performance.push({                                                                                       // 3824
                'Name'           : message[0],                                                                         // 3825
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 3826
                'Element'        : element,                                                                            // 3827
                'Execution Time' : executionTime                                                                       // 3828
              });                                                                                                      // 3829
            }                                                                                                          // 3830
            clearTimeout(module.performance.timer);                                                                    // 3831
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 3832
          },                                                                                                           // 3833
          display: function() {                                                                                        // 3834
            var                                                                                                        // 3835
              title = settings.name + ':',                                                                             // 3836
              totalTime = 0                                                                                            // 3837
            ;                                                                                                          // 3838
            time = false;                                                                                              // 3839
            clearTimeout(module.performance.timer);                                                                    // 3840
            $.each(performance, function(index, data) {                                                                // 3841
              totalTime += data['Execution Time'];                                                                     // 3842
            });                                                                                                        // 3843
            title += ' ' + totalTime + 'ms';                                                                           // 3844
            if(moduleSelector) {                                                                                       // 3845
              title += ' \'' + moduleSelector + '\'';                                                                  // 3846
            }                                                                                                          // 3847
            if($allModules.length > 1) {                                                                               // 3848
              title += ' ' + '(' + $allModules.length + ')';                                                           // 3849
            }                                                                                                          // 3850
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 3851
              console.groupCollapsed(title);                                                                           // 3852
              if(console.table) {                                                                                      // 3853
                console.table(performance);                                                                            // 3854
              }                                                                                                        // 3855
              else {                                                                                                   // 3856
                $.each(performance, function(index, data) {                                                            // 3857
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 3858
                });                                                                                                    // 3859
              }                                                                                                        // 3860
              console.groupEnd();                                                                                      // 3861
            }                                                                                                          // 3862
            performance = [];                                                                                          // 3863
          }                                                                                                            // 3864
        },                                                                                                             // 3865
        invoke: function(query, passedArguments, context) {                                                            // 3866
          var                                                                                                          // 3867
            object = instance,                                                                                         // 3868
            maxDepth,                                                                                                  // 3869
            found,                                                                                                     // 3870
            response                                                                                                   // 3871
          ;                                                                                                            // 3872
          passedArguments = passedArguments || queryArguments;                                                         // 3873
          context         = element         || context;                                                                // 3874
          if(typeof query == 'string' && object !== undefined) {                                                       // 3875
            query    = query.split(/[\. ]/);                                                                           // 3876
            maxDepth = query.length - 1;                                                                               // 3877
            $.each(query, function(depth, value) {                                                                     // 3878
              var camelCaseValue = (depth != maxDepth)                                                                 // 3879
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 3880
                : query                                                                                                // 3881
              ;                                                                                                        // 3882
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 3883
                object = object[camelCaseValue];                                                                       // 3884
              }                                                                                                        // 3885
              else if( object[camelCaseValue] !== undefined ) {                                                        // 3886
                found = object[camelCaseValue];                                                                        // 3887
                return false;                                                                                          // 3888
              }                                                                                                        // 3889
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 3890
                object = object[value];                                                                                // 3891
              }                                                                                                        // 3892
              else if( object[value] !== undefined ) {                                                                 // 3893
                found = object[value];                                                                                 // 3894
                return false;                                                                                          // 3895
              }                                                                                                        // 3896
              else {                                                                                                   // 3897
                module.error(error.method, query);                                                                     // 3898
                return false;                                                                                          // 3899
              }                                                                                                        // 3900
            });                                                                                                        // 3901
          }                                                                                                            // 3902
          if ( $.isFunction( found ) ) {                                                                               // 3903
            response = found.apply(context, passedArguments);                                                          // 3904
          }                                                                                                            // 3905
          else if(found !== undefined) {                                                                               // 3906
            response = found;                                                                                          // 3907
          }                                                                                                            // 3908
          if($.isArray(returnedValue)) {                                                                               // 3909
            returnedValue.push(response);                                                                              // 3910
          }                                                                                                            // 3911
          else if(returnedValue !== undefined) {                                                                       // 3912
            returnedValue = [returnedValue, response];                                                                 // 3913
          }                                                                                                            // 3914
          else if(response !== undefined) {                                                                            // 3915
            returnedValue = response;                                                                                  // 3916
          }                                                                                                            // 3917
          return found;                                                                                                // 3918
        }                                                                                                              // 3919
      };                                                                                                               // 3920
                                                                                                                       // 3921
      module.preinitialize();                                                                                          // 3922
                                                                                                                       // 3923
      if(methodInvoked) {                                                                                              // 3924
        if(instance === undefined) {                                                                                   // 3925
          module.initialize();                                                                                         // 3926
        }                                                                                                              // 3927
        module.invoke(query);                                                                                          // 3928
      }                                                                                                                // 3929
      else {                                                                                                           // 3930
        if(instance !== undefined) {                                                                                   // 3931
          instance.invoke('destroy');                                                                                  // 3932
        }                                                                                                              // 3933
        module.initialize();                                                                                           // 3934
      }                                                                                                                // 3935
    })                                                                                                                 // 3936
  ;                                                                                                                    // 3937
                                                                                                                       // 3938
  return (returnedValue !== undefined)                                                                                 // 3939
    ? returnedValue                                                                                                    // 3940
    : this                                                                                                             // 3941
  ;                                                                                                                    // 3942
};                                                                                                                     // 3943
                                                                                                                       // 3944
$.fn.dimmer.settings = {                                                                                               // 3945
                                                                                                                       // 3946
  name        : 'Dimmer',                                                                                              // 3947
  namespace   : 'dimmer',                                                                                              // 3948
                                                                                                                       // 3949
  debug       : false,                                                                                                 // 3950
  verbose     : false,                                                                                                 // 3951
  performance : true,                                                                                                  // 3952
                                                                                                                       // 3953
  // name to distinguish between multiple dimmers in context                                                           // 3954
  dimmerName  : false,                                                                                                 // 3955
                                                                                                                       // 3956
  // whether to add a variation type                                                                                   // 3957
  variation   : false,                                                                                                 // 3958
                                                                                                                       // 3959
  // whether to bind close events                                                                                      // 3960
  closable    : 'auto',                                                                                                // 3961
                                                                                                                       // 3962
  // whether to use css animations                                                                                     // 3963
  useCSS      : true,                                                                                                  // 3964
                                                                                                                       // 3965
  // css animation to use                                                                                              // 3966
  transition  : 'fade',                                                                                                // 3967
                                                                                                                       // 3968
  // event to bind to                                                                                                  // 3969
  on          : false,                                                                                                 // 3970
                                                                                                                       // 3971
  // overriding opacity value                                                                                          // 3972
  opacity     : 'auto',                                                                                                // 3973
                                                                                                                       // 3974
  // transition durations                                                                                              // 3975
  duration    : {                                                                                                      // 3976
    show : 500,                                                                                                        // 3977
    hide : 500                                                                                                         // 3978
  },                                                                                                                   // 3979
                                                                                                                       // 3980
  onChange    : function(){},                                                                                          // 3981
  onShow      : function(){},                                                                                          // 3982
  onHide      : function(){},                                                                                          // 3983
                                                                                                                       // 3984
  error   : {                                                                                                          // 3985
    method   : 'The method you called is not defined.'                                                                 // 3986
  },                                                                                                                   // 3987
                                                                                                                       // 3988
  className : {                                                                                                        // 3989
    active     : 'active',                                                                                             // 3990
    animating  : 'animating',                                                                                          // 3991
    dimmable   : 'dimmable',                                                                                           // 3992
    dimmed     : 'dimmed',                                                                                             // 3993
    dimmer     : 'dimmer',                                                                                             // 3994
    disabled   : 'disabled',                                                                                           // 3995
    hide       : 'hide',                                                                                               // 3996
    pageDimmer : 'page',                                                                                               // 3997
    show       : 'show'                                                                                                // 3998
  },                                                                                                                   // 3999
                                                                                                                       // 4000
  selector: {                                                                                                          // 4001
    dimmer   : '> .ui.dimmer',                                                                                         // 4002
    content  : '.ui.dimmer > .content, .ui.dimmer > .content > .center'                                                // 4003
  },                                                                                                                   // 4004
                                                                                                                       // 4005
  template: {                                                                                                          // 4006
    dimmer: function() {                                                                                               // 4007
     return $('<div />').attr('class', 'ui dimmer');                                                                   // 4008
    }                                                                                                                  // 4009
  }                                                                                                                    // 4010
                                                                                                                       // 4011
};                                                                                                                     // 4012
                                                                                                                       // 4013
})( jQuery, window , document );                                                                                       // 4014
/*!                                                                                                                    // 4015
 * # Semantic UI 2.1.2 - Dropdown                                                                                      // 4016
 * http://github.com/semantic-org/semantic-ui/                                                                         // 4017
 *                                                                                                                     // 4018
 *                                                                                                                     // 4019
 * Copyright 2015 Contributors                                                                                         // 4020
 * Released under the MIT license                                                                                      // 4021
 * http://opensource.org/licenses/MIT                                                                                  // 4022
 *                                                                                                                     // 4023
 */                                                                                                                    // 4024
                                                                                                                       // 4025
;(function ( $, window, document, undefined ) {                                                                        // 4026
                                                                                                                       // 4027
"use strict";                                                                                                          // 4028
                                                                                                                       // 4029
$.fn.dropdown = function(parameters) {                                                                                 // 4030
  var                                                                                                                  // 4031
    $allModules    = $(this),                                                                                          // 4032
    $document      = $(document),                                                                                      // 4033
                                                                                                                       // 4034
    moduleSelector = $allModules.selector || '',                                                                       // 4035
                                                                                                                       // 4036
    hasTouch       = ('ontouchstart' in document.documentElement),                                                     // 4037
    time           = new Date().getTime(),                                                                             // 4038
    performance    = [],                                                                                               // 4039
                                                                                                                       // 4040
    query          = arguments[0],                                                                                     // 4041
    methodInvoked  = (typeof query == 'string'),                                                                       // 4042
    queryArguments = [].slice.call(arguments, 1),                                                                      // 4043
    returnedValue                                                                                                      // 4044
  ;                                                                                                                    // 4045
                                                                                                                       // 4046
  $allModules                                                                                                          // 4047
    .each(function(elementIndex) {                                                                                     // 4048
      var                                                                                                              // 4049
        settings          = ( $.isPlainObject(parameters) )                                                            // 4050
          ? $.extend(true, {}, $.fn.dropdown.settings, parameters)                                                     // 4051
          : $.extend({}, $.fn.dropdown.settings),                                                                      // 4052
                                                                                                                       // 4053
        className       = settings.className,                                                                          // 4054
        message         = settings.message,                                                                            // 4055
        fields          = settings.fields,                                                                             // 4056
        metadata        = settings.metadata,                                                                           // 4057
        namespace       = settings.namespace,                                                                          // 4058
        regExp          = settings.regExp,                                                                             // 4059
        selector        = settings.selector,                                                                           // 4060
        error           = settings.error,                                                                              // 4061
        templates       = settings.templates,                                                                          // 4062
                                                                                                                       // 4063
        eventNamespace  = '.' + namespace,                                                                             // 4064
        moduleNamespace = 'module-' + namespace,                                                                       // 4065
                                                                                                                       // 4066
        $module         = $(this),                                                                                     // 4067
        $context        = $(settings.context),                                                                         // 4068
        $text           = $module.find(selector.text),                                                                 // 4069
        $search         = $module.find(selector.search),                                                               // 4070
        $input          = $module.find(selector.input),                                                                // 4071
        $icon           = $module.find(selector.icon),                                                                 // 4072
                                                                                                                       // 4073
        $combo = ($module.prev().find(selector.text).length > 0)                                                       // 4074
          ? $module.prev().find(selector.text)                                                                         // 4075
          : $module.prev(),                                                                                            // 4076
                                                                                                                       // 4077
        $menu           = $module.children(selector.menu),                                                             // 4078
        $item           = $menu.find(selector.item),                                                                   // 4079
                                                                                                                       // 4080
        activated       = false,                                                                                       // 4081
        itemActivated   = false,                                                                                       // 4082
        internalChange  = false,                                                                                       // 4083
        element         = this,                                                                                        // 4084
        instance        = $module.data(moduleNamespace),                                                               // 4085
                                                                                                                       // 4086
        initialLoad,                                                                                                   // 4087
        pageLostFocus,                                                                                                 // 4088
        elementNamespace,                                                                                              // 4089
        id,                                                                                                            // 4090
        selectObserver,                                                                                                // 4091
        menuObserver,                                                                                                  // 4092
        module                                                                                                         // 4093
      ;                                                                                                                // 4094
                                                                                                                       // 4095
      module = {                                                                                                       // 4096
                                                                                                                       // 4097
        initialize: function() {                                                                                       // 4098
          module.debug('Initializing dropdown', settings);                                                             // 4099
                                                                                                                       // 4100
          if( module.is.alreadySetup() ) {                                                                             // 4101
            module.setup.reference();                                                                                  // 4102
          }                                                                                                            // 4103
          else {                                                                                                       // 4104
            module.setup.layout();                                                                                     // 4105
            module.refreshData();                                                                                      // 4106
                                                                                                                       // 4107
            module.save.defaults();                                                                                    // 4108
            module.restore.selected();                                                                                 // 4109
                                                                                                                       // 4110
            module.create.id();                                                                                        // 4111
            module.bind.events();                                                                                      // 4112
                                                                                                                       // 4113
            module.observeChanges();                                                                                   // 4114
            module.instantiate();                                                                                      // 4115
          }                                                                                                            // 4116
                                                                                                                       // 4117
        },                                                                                                             // 4118
                                                                                                                       // 4119
        instantiate: function() {                                                                                      // 4120
          module.verbose('Storing instance of dropdown', module);                                                      // 4121
          instance = module;                                                                                           // 4122
          $module                                                                                                      // 4123
            .data(moduleNamespace, module)                                                                             // 4124
          ;                                                                                                            // 4125
        },                                                                                                             // 4126
                                                                                                                       // 4127
        destroy: function() {                                                                                          // 4128
          module.verbose('Destroying previous dropdown', $module);                                                     // 4129
          module.remove.tabbable();                                                                                    // 4130
          $module                                                                                                      // 4131
            .off(eventNamespace)                                                                                       // 4132
            .removeData(moduleNamespace)                                                                               // 4133
          ;                                                                                                            // 4134
          $menu                                                                                                        // 4135
            .off(eventNamespace)                                                                                       // 4136
          ;                                                                                                            // 4137
          $document                                                                                                    // 4138
            .off(elementNamespace)                                                                                     // 4139
          ;                                                                                                            // 4140
          if(selectObserver) {                                                                                         // 4141
            selectObserver.disconnect();                                                                               // 4142
          }                                                                                                            // 4143
          if(menuObserver) {                                                                                           // 4144
            menuObserver.disconnect();                                                                                 // 4145
          }                                                                                                            // 4146
        },                                                                                                             // 4147
                                                                                                                       // 4148
        observeChanges: function() {                                                                                   // 4149
          if('MutationObserver' in window) {                                                                           // 4150
            selectObserver = new MutationObserver(function(mutations) {                                                // 4151
              module.debug('<select> modified, recreating menu');                                                      // 4152
              module.setup.select();                                                                                   // 4153
            });                                                                                                        // 4154
            menuObserver = new MutationObserver(function(mutations) {                                                  // 4155
              module.debug('Menu modified, updating selector cache');                                                  // 4156
              module.refresh();                                                                                        // 4157
            });                                                                                                        // 4158
            if(module.has.input()) {                                                                                   // 4159
              selectObserver.observe($input[0], {                                                                      // 4160
                childList : true,                                                                                      // 4161
                subtree   : true                                                                                       // 4162
              });                                                                                                      // 4163
            }                                                                                                          // 4164
            if(module.has.menu()) {                                                                                    // 4165
              menuObserver.observe($menu[0], {                                                                         // 4166
                childList : true,                                                                                      // 4167
                subtree   : true                                                                                       // 4168
              });                                                                                                      // 4169
            }                                                                                                          // 4170
            module.debug('Setting up mutation observer', selectObserver, menuObserver);                                // 4171
          }                                                                                                            // 4172
        },                                                                                                             // 4173
                                                                                                                       // 4174
        create: {                                                                                                      // 4175
          id: function() {                                                                                             // 4176
            id = (Math.random().toString(16) + '000000000').substr(2, 8);                                              // 4177
            elementNamespace = '.' + id;                                                                               // 4178
            module.verbose('Creating unique id for element', id);                                                      // 4179
          },                                                                                                           // 4180
          userChoice: function(values) {                                                                               // 4181
            var                                                                                                        // 4182
              $userChoices,                                                                                            // 4183
              $userChoice,                                                                                             // 4184
              isUserValue,                                                                                             // 4185
              html                                                                                                     // 4186
            ;                                                                                                          // 4187
            values = values || module.get.userValues();                                                                // 4188
            if(!values) {                                                                                              // 4189
              return false;                                                                                            // 4190
            }                                                                                                          // 4191
            values = $.isArray(values)                                                                                 // 4192
              ? values                                                                                                 // 4193
              : [values]                                                                                               // 4194
            ;                                                                                                          // 4195
            $.each(values, function(index, value) {                                                                    // 4196
              if(module.get.item(value) === false) {                                                                   // 4197
                html         = settings.templates.addition( module.add.variables(message.addResult, value) );          // 4198
                $userChoice  = $('<div />')                                                                            // 4199
                  .html(html)                                                                                          // 4200
                  .attr('data-' + metadata.value, value)                                                               // 4201
                  .attr('data-' + metadata.text, value)                                                                // 4202
                  .addClass(className.addition)                                                                        // 4203
                  .addClass(className.item)                                                                            // 4204
                ;                                                                                                      // 4205
                $userChoices = ($userChoices === undefined)                                                            // 4206
                  ? $userChoice                                                                                        // 4207
                  : $userChoices.add($userChoice)                                                                      // 4208
                ;                                                                                                      // 4209
                module.verbose('Creating user choices for value', value, $userChoice);                                 // 4210
              }                                                                                                        // 4211
            });                                                                                                        // 4212
            return $userChoices;                                                                                       // 4213
          },                                                                                                           // 4214
          userLabels: function(value) {                                                                                // 4215
            var                                                                                                        // 4216
              userValues = module.get.userValues()                                                                     // 4217
            ;                                                                                                          // 4218
            if(userValues) {                                                                                           // 4219
              module.debug('Adding user labels', userValues);                                                          // 4220
              $.each(userValues, function(index, value) {                                                              // 4221
                module.verbose('Adding custom user value');                                                            // 4222
                module.add.label(value, value);                                                                        // 4223
              });                                                                                                      // 4224
            }                                                                                                          // 4225
          },                                                                                                           // 4226
          menu: function() {                                                                                           // 4227
            $menu = $('<div />')                                                                                       // 4228
              .addClass(className.menu)                                                                                // 4229
              .appendTo($module)                                                                                       // 4230
            ;                                                                                                          // 4231
          }                                                                                                            // 4232
        },                                                                                                             // 4233
                                                                                                                       // 4234
        search: function(query) {                                                                                      // 4235
          query = (query !== undefined)                                                                                // 4236
            ? query                                                                                                    // 4237
            : module.get.query()                                                                                       // 4238
          ;                                                                                                            // 4239
          module.verbose('Searching for query', query);                                                                // 4240
          module.filter(query);                                                                                        // 4241
        },                                                                                                             // 4242
                                                                                                                       // 4243
        select: {                                                                                                      // 4244
          firstUnfiltered: function() {                                                                                // 4245
            module.verbose('Selecting first non-filtered element');                                                    // 4246
            module.remove.selectedItem();                                                                              // 4247
            $item                                                                                                      // 4248
              .not(selector.unselectable)                                                                              // 4249
                .eq(0)                                                                                                 // 4250
                .addClass(className.selected)                                                                          // 4251
            ;                                                                                                          // 4252
          },                                                                                                           // 4253
          nextAvailable: function($selected) {                                                                         // 4254
            $selected = $selected.eq(0);                                                                               // 4255
            var                                                                                                        // 4256
              $nextAvailable = $selected.nextAll(selector.item).not(selector.unselectable).eq(0),                      // 4257
              $prevAvailable = $selected.prevAll(selector.item).not(selector.unselectable).eq(0),                      // 4258
              hasNext        = ($nextAvailable.length > 0)                                                             // 4259
            ;                                                                                                          // 4260
            if(hasNext) {                                                                                              // 4261
              module.verbose('Moving selection to', $nextAvailable);                                                   // 4262
              $nextAvailable.addClass(className.selected);                                                             // 4263
            }                                                                                                          // 4264
            else {                                                                                                     // 4265
              module.verbose('Moving selection to', $prevAvailable);                                                   // 4266
              $prevAvailable.addClass(className.selected);                                                             // 4267
            }                                                                                                          // 4268
          }                                                                                                            // 4269
        },                                                                                                             // 4270
                                                                                                                       // 4271
        setup: {                                                                                                       // 4272
          api: function() {                                                                                            // 4273
            var                                                                                                        // 4274
              apiSettings = {                                                                                          // 4275
                debug : settings.debug,                                                                                // 4276
                on    : false                                                                                          // 4277
              }                                                                                                        // 4278
            ;                                                                                                          // 4279
            module.verbose('First request, initializing API');                                                         // 4280
            $module                                                                                                    // 4281
              .api(apiSettings)                                                                                        // 4282
            ;                                                                                                          // 4283
          },                                                                                                           // 4284
          layout: function() {                                                                                         // 4285
            if( $module.is('select') ) {                                                                               // 4286
              module.setup.select();                                                                                   // 4287
              module.setup.returnedObject();                                                                           // 4288
            }                                                                                                          // 4289
            if( !module.has.menu() ) {                                                                                 // 4290
              module.create.menu();                                                                                    // 4291
            }                                                                                                          // 4292
            if( module.is.search() && !module.has.search() ) {                                                         // 4293
              module.verbose('Adding search input');                                                                   // 4294
              $search = $('<input />')                                                                                 // 4295
                .addClass(className.search)                                                                            // 4296
                .insertBefore($text)                                                                                   // 4297
              ;                                                                                                        // 4298
            }                                                                                                          // 4299
            if(settings.allowTab) {                                                                                    // 4300
              module.set.tabbable();                                                                                   // 4301
            }                                                                                                          // 4302
          },                                                                                                           // 4303
          select: function() {                                                                                         // 4304
            var                                                                                                        // 4305
              selectValues  = module.get.selectValues()                                                                // 4306
            ;                                                                                                          // 4307
            module.debug('Dropdown initialized on a select', selectValues);                                            // 4308
            if( $module.is('select') ) {                                                                               // 4309
              $input = $module;                                                                                        // 4310
            }                                                                                                          // 4311
            // see if select is placed correctly already                                                               // 4312
            if($input.parent(selector.dropdown).length > 0) {                                                          // 4313
              module.debug('UI dropdown already exists. Creating dropdown menu only');                                 // 4314
              $module = $input.closest(selector.dropdown);                                                             // 4315
              if( !module.has.menu() ) {                                                                               // 4316
                module.create.menu();                                                                                  // 4317
              }                                                                                                        // 4318
              $menu = $module.children(selector.menu);                                                                 // 4319
              module.setup.menu(selectValues);                                                                         // 4320
            }                                                                                                          // 4321
            else {                                                                                                     // 4322
              module.debug('Creating entire dropdown from select');                                                    // 4323
              $module = $('<div />')                                                                                   // 4324
                .attr('class', $input.attr('class') )                                                                  // 4325
                .addClass(className.selection)                                                                         // 4326
                .addClass(className.dropdown)                                                                          // 4327
                .html( templates.dropdown(selectValues) )                                                              // 4328
                .insertBefore($input)                                                                                  // 4329
              ;                                                                                                        // 4330
              if($input.hasClass(className.multiple) && $input.prop('multiple') === false) {                           // 4331
                module.error(error.missingMultiple);                                                                   // 4332
                $input.prop('multiple', true);                                                                         // 4333
              }                                                                                                        // 4334
              if($input.is('[multiple]')) {                                                                            // 4335
                module.set.multiple();                                                                                 // 4336
              }                                                                                                        // 4337
              $input                                                                                                   // 4338
                .removeAttr('class')                                                                                   // 4339
                .detach()                                                                                              // 4340
                .prependTo($module)                                                                                    // 4341
              ;                                                                                                        // 4342
            }                                                                                                          // 4343
            module.refresh();                                                                                          // 4344
          },                                                                                                           // 4345
          menu: function(values) {                                                                                     // 4346
            $menu.html( templates.menu(values, fields));                                                               // 4347
            $item = $menu.find(selector.item);                                                                         // 4348
          },                                                                                                           // 4349
          reference: function() {                                                                                      // 4350
            module.debug('Dropdown behavior was called on select, replacing with closest dropdown');                   // 4351
            // replace module reference                                                                                // 4352
            $module = $module.parent(selector.dropdown);                                                               // 4353
            module.refresh();                                                                                          // 4354
            module.setup.returnedObject();                                                                             // 4355
            // invoke method in context of current instance                                                            // 4356
            if(methodInvoked) {                                                                                        // 4357
              instance = module;                                                                                       // 4358
              module.invoke(query);                                                                                    // 4359
            }                                                                                                          // 4360
          },                                                                                                           // 4361
          returnedObject: function() {                                                                                 // 4362
            var                                                                                                        // 4363
              $firstModules = $allModules.slice(0, elementIndex),                                                      // 4364
              $lastModules = $allModules.slice(elementIndex + 1)                                                       // 4365
            ;                                                                                                          // 4366
            // adjust all modules to use correct reference                                                             // 4367
            $allModules = $firstModules.add($module).add($lastModules);                                                // 4368
          }                                                                                                            // 4369
        },                                                                                                             // 4370
                                                                                                                       // 4371
        refresh: function() {                                                                                          // 4372
          module.refreshSelectors();                                                                                   // 4373
          module.refreshData();                                                                                        // 4374
        },                                                                                                             // 4375
                                                                                                                       // 4376
        refreshSelectors: function() {                                                                                 // 4377
          module.verbose('Refreshing selector cache');                                                                 // 4378
          $text   = $module.find(selector.text);                                                                       // 4379
          $search = $module.find(selector.search);                                                                     // 4380
          $input  = $module.find(selector.input);                                                                      // 4381
          $icon   = $module.find(selector.icon);                                                                       // 4382
          $combo  = ($module.prev().find(selector.text).length > 0)                                                    // 4383
            ? $module.prev().find(selector.text)                                                                       // 4384
            : $module.prev()                                                                                           // 4385
          ;                                                                                                            // 4386
          $menu    = $module.children(selector.menu);                                                                  // 4387
          $item    = $menu.find(selector.item);                                                                        // 4388
        },                                                                                                             // 4389
                                                                                                                       // 4390
        refreshData: function() {                                                                                      // 4391
          module.verbose('Refreshing cached metadata');                                                                // 4392
          $item                                                                                                        // 4393
            .removeData(metadata.text)                                                                                 // 4394
            .removeData(metadata.value)                                                                                // 4395
          ;                                                                                                            // 4396
          $module                                                                                                      // 4397
            .removeData(metadata.defaultText)                                                                          // 4398
            .removeData(metadata.defaultValue)                                                                         // 4399
            .removeData(metadata.placeholderText)                                                                      // 4400
          ;                                                                                                            // 4401
        },                                                                                                             // 4402
                                                                                                                       // 4403
        toggle: function() {                                                                                           // 4404
          module.verbose('Toggling menu visibility');                                                                  // 4405
          if( !module.is.active() ) {                                                                                  // 4406
            module.show();                                                                                             // 4407
          }                                                                                                            // 4408
          else {                                                                                                       // 4409
            module.hide();                                                                                             // 4410
          }                                                                                                            // 4411
        },                                                                                                             // 4412
                                                                                                                       // 4413
        show: function(callback) {                                                                                     // 4414
          callback = $.isFunction(callback)                                                                            // 4415
            ? callback                                                                                                 // 4416
            : function(){}                                                                                             // 4417
          ;                                                                                                            // 4418
          if( module.can.show() && !module.is.active() ) {                                                             // 4419
            module.debug('Showing dropdown');                                                                          // 4420
            if(module.is.multiple() && !module.has.search() && module.is.allFiltered()) {                              // 4421
              return true;                                                                                             // 4422
            }                                                                                                          // 4423
            if(module.has.message() && !module.has.maxSelections()) {                                                  // 4424
              module.remove.message();                                                                                 // 4425
            }                                                                                                          // 4426
            if(settings.onShow.call(element) !== false) {                                                              // 4427
              module.animate.show(function() {                                                                         // 4428
                if( module.can.click() ) {                                                                             // 4429
                  module.bind.intent();                                                                                // 4430
                }                                                                                                      // 4431
                module.set.visible();                                                                                  // 4432
                callback.call(element);                                                                                // 4433
              });                                                                                                      // 4434
            }                                                                                                          // 4435
          }                                                                                                            // 4436
        },                                                                                                             // 4437
                                                                                                                       // 4438
        hide: function(callback) {                                                                                     // 4439
          callback = $.isFunction(callback)                                                                            // 4440
            ? callback                                                                                                 // 4441
            : function(){}                                                                                             // 4442
          ;                                                                                                            // 4443
          if( module.is.active() ) {                                                                                   // 4444
            module.debug('Hiding dropdown');                                                                           // 4445
            if(settings.onHide.call(element) !== false) {                                                              // 4446
              module.animate.hide(function() {                                                                         // 4447
                module.remove.visible();                                                                               // 4448
                callback.call(element);                                                                                // 4449
              });                                                                                                      // 4450
            }                                                                                                          // 4451
          }                                                                                                            // 4452
        },                                                                                                             // 4453
                                                                                                                       // 4454
        hideOthers: function() {                                                                                       // 4455
          module.verbose('Finding other dropdowns to hide');                                                           // 4456
          $allModules                                                                                                  // 4457
            .not($module)                                                                                              // 4458
              .has(selector.menu + '.' + className.visible)                                                            // 4459
                .dropdown('hide')                                                                                      // 4460
          ;                                                                                                            // 4461
        },                                                                                                             // 4462
                                                                                                                       // 4463
        hideMenu: function() {                                                                                         // 4464
          module.verbose('Hiding menu  instantaneously');                                                              // 4465
          module.remove.active();                                                                                      // 4466
          module.remove.visible();                                                                                     // 4467
          $menu.transition('hide');                                                                                    // 4468
        },                                                                                                             // 4469
                                                                                                                       // 4470
        hideSubMenus: function() {                                                                                     // 4471
          var                                                                                                          // 4472
            $subMenus = $menu.children(selector.item).find(selector.menu)                                              // 4473
          ;                                                                                                            // 4474
          module.verbose('Hiding sub menus', $subMenus);                                                               // 4475
          $subMenus.transition('hide');                                                                                // 4476
        },                                                                                                             // 4477
                                                                                                                       // 4478
        bind: {                                                                                                        // 4479
          events: function() {                                                                                         // 4480
            if(hasTouch) {                                                                                             // 4481
              module.bind.touchEvents();                                                                               // 4482
            }                                                                                                          // 4483
            module.bind.keyboardEvents();                                                                              // 4484
            module.bind.inputEvents();                                                                                 // 4485
            module.bind.mouseEvents();                                                                                 // 4486
          },                                                                                                           // 4487
          touchEvents: function() {                                                                                    // 4488
            module.debug('Touch device detected binding additional touch events');                                     // 4489
            if( module.is.searchSelection() ) {                                                                        // 4490
              // do nothing special yet                                                                                // 4491
            }                                                                                                          // 4492
            else if( module.is.single() ) {                                                                            // 4493
              $module                                                                                                  // 4494
                .on('touchstart' + eventNamespace, module.event.test.toggle)                                           // 4495
              ;                                                                                                        // 4496
            }                                                                                                          // 4497
            $menu                                                                                                      // 4498
              .on('touchstart' + eventNamespace, selector.item, module.event.item.mouseenter)                          // 4499
            ;                                                                                                          // 4500
          },                                                                                                           // 4501
          keyboardEvents: function() {                                                                                 // 4502
            module.verbose('Binding keyboard events');                                                                 // 4503
            $module                                                                                                    // 4504
              .on('keydown' + eventNamespace, module.event.keydown)                                                    // 4505
            ;                                                                                                          // 4506
            if( module.has.search() ) {                                                                                // 4507
              $module                                                                                                  // 4508
                .on(module.get.inputEvent() + eventNamespace, selector.search, module.event.input)                     // 4509
              ;                                                                                                        // 4510
            }                                                                                                          // 4511
            if( module.is.multiple() ) {                                                                               // 4512
              $document                                                                                                // 4513
                .on('keydown' + elementNamespace, module.event.document.keydown)                                       // 4514
              ;                                                                                                        // 4515
            }                                                                                                          // 4516
          },                                                                                                           // 4517
          inputEvents: function() {                                                                                    // 4518
            module.verbose('Binding input change events');                                                             // 4519
            $module                                                                                                    // 4520
              .on('change' + eventNamespace, selector.input, module.event.change)                                      // 4521
            ;                                                                                                          // 4522
          },                                                                                                           // 4523
          mouseEvents: function() {                                                                                    // 4524
            module.verbose('Binding mouse events');                                                                    // 4525
            if(module.is.multiple()) {                                                                                 // 4526
              $module                                                                                                  // 4527
                .on('click'   + eventNamespace, selector.label,  module.event.label.click)                             // 4528
                .on('click'   + eventNamespace, selector.remove, module.event.remove.click)                            // 4529
              ;                                                                                                        // 4530
            }                                                                                                          // 4531
            if( module.is.searchSelection() ) {                                                                        // 4532
              $module                                                                                                  // 4533
                .on('mousedown' + eventNamespace, selector.menu,   module.event.menu.mousedown)                        // 4534
                .on('mouseup'   + eventNamespace, selector.menu,   module.event.menu.mouseup)                          // 4535
                .on('click'     + eventNamespace, selector.icon,   module.event.icon.click)                            // 4536
                .on('click'     + eventNamespace, selector.search, module.show)                                        // 4537
                .on('focus'     + eventNamespace, selector.search, module.event.search.focus)                          // 4538
                .on('blur'      + eventNamespace, selector.search, module.event.search.blur)                           // 4539
                .on('click'     + eventNamespace, selector.text,   module.event.text.focus)                            // 4540
              ;                                                                                                        // 4541
              if(module.is.multiple()) {                                                                               // 4542
                $module                                                                                                // 4543
                  .on('click' + eventNamespace, module.event.click)                                                    // 4544
                ;                                                                                                      // 4545
              }                                                                                                        // 4546
            }                                                                                                          // 4547
            else {                                                                                                     // 4548
              if(settings.on == 'click') {                                                                             // 4549
                $module                                                                                                // 4550
                  .on('click' + eventNamespace, selector.icon, module.event.icon.click)                                // 4551
                  .on('click' + eventNamespace, module.event.test.toggle)                                              // 4552
                ;                                                                                                      // 4553
              }                                                                                                        // 4554
              else if(settings.on == 'hover') {                                                                        // 4555
                $module                                                                                                // 4556
                  .on('mouseenter' + eventNamespace, module.delay.show)                                                // 4557
                  .on('mouseleave' + eventNamespace, module.delay.hide)                                                // 4558
                ;                                                                                                      // 4559
              }                                                                                                        // 4560
              else {                                                                                                   // 4561
                $module                                                                                                // 4562
                  .on(settings.on + eventNamespace, module.toggle)                                                     // 4563
                ;                                                                                                      // 4564
              }                                                                                                        // 4565
              $module                                                                                                  // 4566
                .on('mousedown' + eventNamespace, module.event.mousedown)                                              // 4567
                .on('mouseup'   + eventNamespace, module.event.mouseup)                                                // 4568
                .on('focus'     + eventNamespace, module.event.focus)                                                  // 4569
                .on('blur'      + eventNamespace, module.event.blur)                                                   // 4570
              ;                                                                                                        // 4571
            }                                                                                                          // 4572
            $menu                                                                                                      // 4573
              .on('mouseenter' + eventNamespace, selector.item, module.event.item.mouseenter)                          // 4574
              .on('mouseleave' + eventNamespace, selector.item, module.event.item.mouseleave)                          // 4575
              .on('click'      + eventNamespace, selector.item, module.event.item.click)                               // 4576
            ;                                                                                                          // 4577
          },                                                                                                           // 4578
          intent: function() {                                                                                         // 4579
            module.verbose('Binding hide intent event to document');                                                   // 4580
            if(hasTouch) {                                                                                             // 4581
              $document                                                                                                // 4582
                .on('touchstart' + elementNamespace, module.event.test.touch)                                          // 4583
                .on('touchmove'  + elementNamespace, module.event.test.touch)                                          // 4584
              ;                                                                                                        // 4585
            }                                                                                                          // 4586
            $document                                                                                                  // 4587
              .on('click' + elementNamespace, module.event.test.hide)                                                  // 4588
            ;                                                                                                          // 4589
          }                                                                                                            // 4590
        },                                                                                                             // 4591
                                                                                                                       // 4592
        unbind: {                                                                                                      // 4593
          intent: function() {                                                                                         // 4594
            module.verbose('Removing hide intent event from document');                                                // 4595
            if(hasTouch) {                                                                                             // 4596
              $document                                                                                                // 4597
                .off('touchstart' + elementNamespace)                                                                  // 4598
                .off('touchmove' + elementNamespace)                                                                   // 4599
              ;                                                                                                        // 4600
            }                                                                                                          // 4601
            $document                                                                                                  // 4602
              .off('click' + elementNamespace)                                                                         // 4603
            ;                                                                                                          // 4604
          }                                                                                                            // 4605
        },                                                                                                             // 4606
                                                                                                                       // 4607
        filter: function(query) {                                                                                      // 4608
          var                                                                                                          // 4609
            searchTerm = (query !== undefined)                                                                         // 4610
              ? query                                                                                                  // 4611
              : module.get.query(),                                                                                    // 4612
            afterFiltered = function() {                                                                               // 4613
              if(module.is.multiple()) {                                                                               // 4614
                module.filterActive();                                                                                 // 4615
              }                                                                                                        // 4616
              module.select.firstUnfiltered();                                                                         // 4617
              if( module.has.allResultsFiltered() ) {                                                                  // 4618
                if( settings.onNoResults.call(element, searchTerm) ) {                                                 // 4619
                  if(!settings.allowAdditions) {                                                                       // 4620
                    module.verbose('All items filtered, showing message', searchTerm);                                 // 4621
                    module.add.message(message.noResults);                                                             // 4622
                  }                                                                                                    // 4623
                }                                                                                                      // 4624
                else {                                                                                                 // 4625
                  module.verbose('All items filtered, hiding dropdown', searchTerm);                                   // 4626
                  module.hideMenu();                                                                                   // 4627
                }                                                                                                      // 4628
              }                                                                                                        // 4629
              else {                                                                                                   // 4630
                module.remove.message();                                                                               // 4631
              }                                                                                                        // 4632
              if(settings.allowAdditions) {                                                                            // 4633
                module.add.userSuggestion(query);                                                                      // 4634
              }                                                                                                        // 4635
              if(module.is.searchSelection() && module.can.show() && module.is.focusedOnSearch() ) {                   // 4636
                module.show();                                                                                         // 4637
              }                                                                                                        // 4638
            }                                                                                                          // 4639
          ;                                                                                                            // 4640
          if(settings.useLabels && module.has.maxSelections()) {                                                       // 4641
            return;                                                                                                    // 4642
          }                                                                                                            // 4643
          if(settings.apiSettings) {                                                                                   // 4644
            if( module.can.useAPI() ) {                                                                                // 4645
              module.queryRemote(searchTerm, function() {                                                              // 4646
                afterFiltered();                                                                                       // 4647
              });                                                                                                      // 4648
            }                                                                                                          // 4649
            else {                                                                                                     // 4650
              module.error(error.noAPI);                                                                               // 4651
            }                                                                                                          // 4652
          }                                                                                                            // 4653
          else {                                                                                                       // 4654
            module.filterItems(searchTerm);                                                                            // 4655
            afterFiltered();                                                                                           // 4656
          }                                                                                                            // 4657
        },                                                                                                             // 4658
                                                                                                                       // 4659
        queryRemote: function(query, callback) {                                                                       // 4660
          var                                                                                                          // 4661
            apiSettings = {                                                                                            // 4662
              errorDuration        : false,                                                                            // 4663
              throttle             : settings.throttle,                                                                // 4664
              urlData              : {                                                                                 // 4665
                query: query                                                                                           // 4666
              },                                                                                                       // 4667
              onError: function() {                                                                                    // 4668
                module.add.message(message.serverError);                                                               // 4669
                callback();                                                                                            // 4670
              },                                                                                                       // 4671
              onFailure: function() {                                                                                  // 4672
                module.add.message(message.serverError);                                                               // 4673
                callback();                                                                                            // 4674
              },                                                                                                       // 4675
              onSuccess : function(response) {                                                                         // 4676
                module.remove.message();                                                                               // 4677
                module.setup.menu({                                                                                    // 4678
                  values: response.results                                                                             // 4679
                });                                                                                                    // 4680
                callback();                                                                                            // 4681
              }                                                                                                        // 4682
            }                                                                                                          // 4683
          ;                                                                                                            // 4684
          if( !$module.api('get request') ) {                                                                          // 4685
            module.setup.api();                                                                                        // 4686
          }                                                                                                            // 4687
          apiSettings = $.extend(true, {}, apiSettings, settings.apiSettings);                                         // 4688
          $module                                                                                                      // 4689
            .api('setting', apiSettings)                                                                               // 4690
            .api('query')                                                                                              // 4691
          ;                                                                                                            // 4692
        },                                                                                                             // 4693
                                                                                                                       // 4694
        filterItems: function(query) {                                                                                 // 4695
          var                                                                                                          // 4696
            searchTerm = (query !== undefined)                                                                         // 4697
              ? query                                                                                                  // 4698
              : module.get.query(),                                                                                    // 4699
            $results         = $(),                                                                                    // 4700
            escapedTerm      = module.escape.regExp(searchTerm),                                                       // 4701
            beginsWithRegExp = new RegExp('^' + escapedTerm, 'igm')                                                    // 4702
          ;                                                                                                            // 4703
          // avoid loop if we're matching nothing                                                                      // 4704
          if( !module.has.query() ) {                                                                                  // 4705
            $results = $item;                                                                                          // 4706
          }                                                                                                            // 4707
          else {                                                                                                       // 4708
            module.verbose('Searching for matching values', searchTerm);                                               // 4709
            $item                                                                                                      // 4710
              .each(function(){                                                                                        // 4711
                var                                                                                                    // 4712
                  $choice = $(this),                                                                                   // 4713
                  text,                                                                                                // 4714
                  value                                                                                                // 4715
                ;                                                                                                      // 4716
                if(settings.match == 'both' || settings.match == 'text') {                                             // 4717
                  text = String(module.get.choiceText($choice, false));                                                // 4718
                  if(text.search(beginsWithRegExp) !== -1) {                                                           // 4719
                    $results = $results.add($choice);                                                                  // 4720
                    return true;                                                                                       // 4721
                  }                                                                                                    // 4722
                  else if(settings.fullTextSearch && module.fuzzySearch(searchTerm, text)) {                           // 4723
                    $results = $results.add($choice);                                                                  // 4724
                    return true;                                                                                       // 4725
                  }                                                                                                    // 4726
                }                                                                                                      // 4727
                if(settings.match == 'both' || settings.match == 'value') {                                            // 4728
                  value = String(module.get.choiceValue($choice, text));                                               // 4729
                                                                                                                       // 4730
                  if(value.search(beginsWithRegExp) !== -1) {                                                          // 4731
                    $results = $results.add($choice);                                                                  // 4732
                    return true;                                                                                       // 4733
                  }                                                                                                    // 4734
                  else if(settings.fullTextSearch && module.fuzzySearch(searchTerm, value)) {                          // 4735
                    $results = $results.add($choice);                                                                  // 4736
                    return true;                                                                                       // 4737
                  }                                                                                                    // 4738
                }                                                                                                      // 4739
              })                                                                                                       // 4740
            ;                                                                                                          // 4741
          }                                                                                                            // 4742
          module.debug('Showing only matched items', searchTerm);                                                      // 4743
          module.remove.filteredItem();                                                                                // 4744
          $item                                                                                                        // 4745
            .not($results)                                                                                             // 4746
            .addClass(className.filtered)                                                                              // 4747
          ;                                                                                                            // 4748
        },                                                                                                             // 4749
                                                                                                                       // 4750
        fuzzySearch: function(query, term) {                                                                           // 4751
          var                                                                                                          // 4752
            termLength  = term.length,                                                                                 // 4753
            queryLength = query.length                                                                                 // 4754
          ;                                                                                                            // 4755
          query = query.toLowerCase();                                                                                 // 4756
          term  = term.toLowerCase();                                                                                  // 4757
          if(queryLength > termLength) {                                                                               // 4758
            return false;                                                                                              // 4759
          }                                                                                                            // 4760
          if(queryLength === termLength) {                                                                             // 4761
            return (query === term);                                                                                   // 4762
          }                                                                                                            // 4763
          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {
            var                                                                                                        // 4765
              queryCharacter = query.charCodeAt(characterIndex)                                                        // 4766
            ;                                                                                                          // 4767
            while(nextCharacterIndex < termLength) {                                                                   // 4768
              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {                                           // 4769
                continue search;                                                                                       // 4770
              }                                                                                                        // 4771
            }                                                                                                          // 4772
            return false;                                                                                              // 4773
          }                                                                                                            // 4774
          return true;                                                                                                 // 4775
        },                                                                                                             // 4776
                                                                                                                       // 4777
        filterActive: function() {                                                                                     // 4778
          if(settings.useLabels) {                                                                                     // 4779
            $item.filter('.' + className.active)                                                                       // 4780
              .addClass(className.filtered)                                                                            // 4781
            ;                                                                                                          // 4782
          }                                                                                                            // 4783
        },                                                                                                             // 4784
                                                                                                                       // 4785
        focusSearch: function() {                                                                                      // 4786
          if( module.is.search() && !module.is.focusedOnSearch() ) {                                                   // 4787
            $search[0].focus();                                                                                        // 4788
          }                                                                                                            // 4789
        },                                                                                                             // 4790
                                                                                                                       // 4791
        forceSelection: function() {                                                                                   // 4792
          var                                                                                                          // 4793
            $currentlySelected = $item.not(className.filtered).filter('.' + className.selected).eq(0),                 // 4794
            $activeItem        = $item.not(className.filtered).filter('.' + className.active).eq(0),                   // 4795
            $selectedItem      = ($currentlySelected.length > 0)                                                       // 4796
              ? $currentlySelected                                                                                     // 4797
              : $activeItem,                                                                                           // 4798
            hasSelected = ($selectedItem.size() > 0)                                                                   // 4799
          ;                                                                                                            // 4800
          if( hasSelected && module.has.query() ) {                                                                    // 4801
            module.debug('Forcing partial selection to selected item', $selectedItem);                                 // 4802
            module.event.item.click.call($selectedItem);                                                               // 4803
          }                                                                                                            // 4804
          else {                                                                                                       // 4805
            module.hide();                                                                                             // 4806
          }                                                                                                            // 4807
        },                                                                                                             // 4808
                                                                                                                       // 4809
        event: {                                                                                                       // 4810
          change: function() {                                                                                         // 4811
            if(!internalChange) {                                                                                      // 4812
              module.debug('Input changed, updating selection');                                                       // 4813
              module.set.selected();                                                                                   // 4814
            }                                                                                                          // 4815
          },                                                                                                           // 4816
          focus: function() {                                                                                          // 4817
            if(settings.showOnFocus && !activated && module.is.hidden() && !pageLostFocus) {                           // 4818
              module.show();                                                                                           // 4819
            }                                                                                                          // 4820
          },                                                                                                           // 4821
          click: function(event) {                                                                                     // 4822
            var                                                                                                        // 4823
              $target = $(event.target)                                                                                // 4824
            ;                                                                                                          // 4825
            // focus search                                                                                            // 4826
            if($target.is($module) && !module.is.focusedOnSearch()) {                                                  // 4827
              module.focusSearch();                                                                                    // 4828
            }                                                                                                          // 4829
          },                                                                                                           // 4830
          blur: function(event) {                                                                                      // 4831
            pageLostFocus = (document.activeElement === this);                                                         // 4832
            if(!activated && !pageLostFocus) {                                                                         // 4833
              module.remove.activeLabel();                                                                             // 4834
              module.hide();                                                                                           // 4835
            }                                                                                                          // 4836
          },                                                                                                           // 4837
          // prevents focus callback from occuring on mousedown                                                        // 4838
          mousedown: function() {                                                                                      // 4839
            activated = true;                                                                                          // 4840
          },                                                                                                           // 4841
          mouseup: function() {                                                                                        // 4842
            activated = false;                                                                                         // 4843
          },                                                                                                           // 4844
          search: {                                                                                                    // 4845
            focus: function() {                                                                                        // 4846
              activated = true;                                                                                        // 4847
              if(module.is.multiple()) {                                                                               // 4848
                module.remove.activeLabel();                                                                           // 4849
              }                                                                                                        // 4850
              if(settings.showOnFocus) {                                                                               // 4851
                module.show();                                                                                         // 4852
              }                                                                                                        // 4853
            },                                                                                                         // 4854
            blur: function(event) {                                                                                    // 4855
              pageLostFocus = (document.activeElement === this);                                                       // 4856
              if(!itemActivated && !pageLostFocus) {                                                                   // 4857
                if(module.is.multiple()) {                                                                             // 4858
                  module.remove.activeLabel();                                                                         // 4859
                  module.hide();                                                                                       // 4860
                }                                                                                                      // 4861
                else if(settings.forceSelection) {                                                                     // 4862
                  module.forceSelection();                                                                             // 4863
                }                                                                                                      // 4864
                else {                                                                                                 // 4865
                  module.hide();                                                                                       // 4866
                }                                                                                                      // 4867
              }                                                                                                        // 4868
              else if(pageLostFocus) {                                                                                 // 4869
                if(settings.forceSelection) {                                                                          // 4870
                  module.forceSelection();                                                                             // 4871
                }                                                                                                      // 4872
              }                                                                                                        // 4873
            }                                                                                                          // 4874
          },                                                                                                           // 4875
          icon: {                                                                                                      // 4876
            click: function(event) {                                                                                   // 4877
              module.toggle();                                                                                         // 4878
              event.stopPropagation();                                                                                 // 4879
            }                                                                                                          // 4880
          },                                                                                                           // 4881
          text: {                                                                                                      // 4882
            focus: function(event) {                                                                                   // 4883
              activated = true;                                                                                        // 4884
              module.focusSearch();                                                                                    // 4885
            }                                                                                                          // 4886
          },                                                                                                           // 4887
          input: function(event) {                                                                                     // 4888
            if(module.is.multiple() || module.is.searchSelection()) {                                                  // 4889
              module.set.filtered();                                                                                   // 4890
            }                                                                                                          // 4891
            clearTimeout(module.timer);                                                                                // 4892
            module.timer = setTimeout(module.search, settings.delay.search);                                           // 4893
          },                                                                                                           // 4894
          label: {                                                                                                     // 4895
            click: function(event) {                                                                                   // 4896
              var                                                                                                      // 4897
                $label        = $(this),                                                                               // 4898
                $labels       = $module.find(selector.label),                                                          // 4899
                $activeLabels = $labels.filter('.' + className.active),                                                // 4900
                $nextActive   = $label.nextAll('.' + className.active),                                                // 4901
                $prevActive   = $label.prevAll('.' + className.active),                                                // 4902
                $range = ($nextActive.length > 0)                                                                      // 4903
                  ? $label.nextUntil($nextActive).add($activeLabels).add($label)                                       // 4904
                  : $label.prevUntil($prevActive).add($activeLabels).add($label)                                       // 4905
              ;                                                                                                        // 4906
              if(event.shiftKey) {                                                                                     // 4907
                $activeLabels.removeClass(className.active);                                                           // 4908
                $range.addClass(className.active);                                                                     // 4909
              }                                                                                                        // 4910
              else if(event.ctrlKey) {                                                                                 // 4911
                $label.toggleClass(className.active);                                                                  // 4912
              }                                                                                                        // 4913
              else {                                                                                                   // 4914
                $activeLabels.removeClass(className.active);                                                           // 4915
                $label.addClass(className.active);                                                                     // 4916
              }                                                                                                        // 4917
              settings.onLabelSelect.apply(this, $labels.filter('.' + className.active));                              // 4918
            }                                                                                                          // 4919
          },                                                                                                           // 4920
          remove: {                                                                                                    // 4921
            click: function() {                                                                                        // 4922
              var                                                                                                      // 4923
                $label = $(this).parent()                                                                              // 4924
              ;                                                                                                        // 4925
              if( $label.hasClass(className.active) ) {                                                                // 4926
                // remove all selected labels                                                                          // 4927
                module.remove.activeLabels();                                                                          // 4928
              }                                                                                                        // 4929
              else {                                                                                                   // 4930
                // remove this label only                                                                              // 4931
                module.remove.activeLabels( $label );                                                                  // 4932
              }                                                                                                        // 4933
            }                                                                                                          // 4934
          },                                                                                                           // 4935
          test: {                                                                                                      // 4936
            toggle: function(event) {                                                                                  // 4937
              var                                                                                                      // 4938
                toggleBehavior = (module.is.multiple())                                                                // 4939
                  ? module.show                                                                                        // 4940
                  : module.toggle                                                                                      // 4941
              ;                                                                                                        // 4942
              if( module.determine.eventOnElement(event, toggleBehavior) ) {                                           // 4943
                event.preventDefault();                                                                                // 4944
              }                                                                                                        // 4945
            },                                                                                                         // 4946
            touch: function(event) {                                                                                   // 4947
              module.determine.eventOnElement(event, function() {                                                      // 4948
                if(event.type == 'touchstart') {                                                                       // 4949
                  module.timer = setTimeout(function() {                                                               // 4950
                    module.hide();                                                                                     // 4951
                  }, settings.delay.touch);                                                                            // 4952
                }                                                                                                      // 4953
                else if(event.type == 'touchmove') {                                                                   // 4954
                  clearTimeout(module.timer);                                                                          // 4955
                }                                                                                                      // 4956
              });                                                                                                      // 4957
              event.stopPropagation();                                                                                 // 4958
            },                                                                                                         // 4959
            hide: function(event) {                                                                                    // 4960
              module.determine.eventInModule(event, module.hide);                                                      // 4961
            }                                                                                                          // 4962
          },                                                                                                           // 4963
          menu: {                                                                                                      // 4964
            mousedown: function() {                                                                                    // 4965
              itemActivated = true;                                                                                    // 4966
            },                                                                                                         // 4967
            mouseup: function() {                                                                                      // 4968
              itemActivated = false;                                                                                   // 4969
            }                                                                                                          // 4970
          },                                                                                                           // 4971
          item: {                                                                                                      // 4972
            mouseenter: function(event) {                                                                              // 4973
              var                                                                                                      // 4974
                $subMenu    = $(this).children(selector.menu),                                                         // 4975
                $otherMenus = $(this).siblings(selector.item).children(selector.menu)                                  // 4976
              ;                                                                                                        // 4977
              if( $subMenu.length > 0 ) {                                                                              // 4978
                clearTimeout(module.itemTimer);                                                                        // 4979
                module.itemTimer = setTimeout(function() {                                                             // 4980
                  module.verbose('Showing sub-menu', $subMenu);                                                        // 4981
                  $.each($otherMenus, function() {                                                                     // 4982
                    module.animate.hide(false, $(this));                                                               // 4983
                  });                                                                                                  // 4984
                  module.animate.show(false,  $subMenu);                                                               // 4985
                }, settings.delay.show);                                                                               // 4986
                event.preventDefault();                                                                                // 4987
              }                                                                                                        // 4988
            },                                                                                                         // 4989
            mouseleave: function(event) {                                                                              // 4990
              var                                                                                                      // 4991
                $subMenu = $(this).children(selector.menu)                                                             // 4992
              ;                                                                                                        // 4993
              if($subMenu.length > 0) {                                                                                // 4994
                clearTimeout(module.itemTimer);                                                                        // 4995
                module.itemTimer = setTimeout(function() {                                                             // 4996
                  module.verbose('Hiding sub-menu', $subMenu);                                                         // 4997
                  module.animate.hide(false,  $subMenu);                                                               // 4998
                }, settings.delay.hide);                                                                               // 4999
              }                                                                                                        // 5000
            },                                                                                                         // 5001
            touchend: function() {                                                                                     // 5002
            },                                                                                                         // 5003
            click: function (event) {                                                                                  // 5004
              var                                                                                                      // 5005
                $choice        = $(this),                                                                              // 5006
                $target        = (event)                                                                               // 5007
                  ? $(event.target)                                                                                    // 5008
                  : $(''),                                                                                             // 5009
                $subMenu       = $choice.find(selector.menu),                                                          // 5010
                text           = module.get.choiceText($choice),                                                       // 5011
                value          = module.get.choiceValue($choice, text),                                                // 5012
                hasSubMenu     = ($subMenu.length > 0),                                                                // 5013
                isBubbledEvent = ($subMenu.find($target).length > 0)                                                   // 5014
              ;                                                                                                        // 5015
              if(!isBubbledEvent && (!hasSubMenu || settings.allowCategorySelection)) {                                // 5016
                if(!settings.useLabels) {                                                                              // 5017
                  module.remove.filteredItem();                                                                        // 5018
                  module.remove.searchTerm();                                                                          // 5019
                  module.set.scrollPosition($choice);                                                                  // 5020
                }                                                                                                      // 5021
                module.determine.selectAction.call(this, text, value);                                                 // 5022
              }                                                                                                        // 5023
            }                                                                                                          // 5024
          },                                                                                                           // 5025
                                                                                                                       // 5026
          document: {                                                                                                  // 5027
            // label selection should occur even when element has no focus                                             // 5028
            keydown: function(event) {                                                                                 // 5029
              var                                                                                                      // 5030
                pressedKey    = event.which,                                                                           // 5031
                keys          = module.get.shortcutKeys(),                                                             // 5032
                isShortcutKey = module.is.inObject(pressedKey, keys)                                                   // 5033
              ;                                                                                                        // 5034
              if(isShortcutKey) {                                                                                      // 5035
                var                                                                                                    // 5036
                  $label            = $module.find(selector.label),                                                    // 5037
                  $activeLabel      = $label.filter('.' + className.active),                                           // 5038
                  activeValue       = $activeLabel.data(metadata.value),                                               // 5039
                  labelIndex        = $label.index($activeLabel),                                                      // 5040
                  labelCount        = $label.length,                                                                   // 5041
                  hasActiveLabel    = ($activeLabel.length > 0),                                                       // 5042
                  hasMultipleActive = ($activeLabel.length > 1),                                                       // 5043
                  isFirstLabel      = (labelIndex === 0),                                                              // 5044
                  isLastLabel       = (labelIndex + 1 == labelCount),                                                  // 5045
                  isSearch          = module.is.searchSelection(),                                                     // 5046
                  isFocusedOnSearch = module.is.focusedOnSearch(),                                                     // 5047
                  isFocused         = module.is.focused(),                                                             // 5048
                  caretAtStart      = (isFocusedOnSearch && module.get.caretPosition() === 0),                         // 5049
                  $nextLabel                                                                                           // 5050
                ;                                                                                                      // 5051
                if(isSearch && !hasActiveLabel && !isFocusedOnSearch) {                                                // 5052
                  return;                                                                                              // 5053
                }                                                                                                      // 5054
                                                                                                                       // 5055
                if(pressedKey == keys.leftArrow) {                                                                     // 5056
                  // activate previous label                                                                           // 5057
                  if((isFocused || caretAtStart) && !hasActiveLabel) {                                                 // 5058
                    module.verbose('Selecting previous label');                                                        // 5059
                    $label.last().addClass(className.active);                                                          // 5060
                  }                                                                                                    // 5061
                  else if(hasActiveLabel) {                                                                            // 5062
                    if(!event.shiftKey) {                                                                              // 5063
                      module.verbose('Selecting previous label');                                                      // 5064
                      $label.removeClass(className.active);                                                            // 5065
                    }                                                                                                  // 5066
                    else {                                                                                             // 5067
                      module.verbose('Adding previous label to selection');                                            // 5068
                    }                                                                                                  // 5069
                    if(isFirstLabel && !hasMultipleActive) {                                                           // 5070
                      $activeLabel.addClass(className.active);                                                         // 5071
                    }                                                                                                  // 5072
                    else {                                                                                             // 5073
                      $activeLabel.prev(selector.siblingLabel)                                                         // 5074
                        .addClass(className.active)                                                                    // 5075
                        .end()                                                                                         // 5076
                      ;                                                                                                // 5077
                    }                                                                                                  // 5078
                    event.preventDefault();                                                                            // 5079
                  }                                                                                                    // 5080
                }                                                                                                      // 5081
                else if(pressedKey == keys.rightArrow) {                                                               // 5082
                  // activate first label                                                                              // 5083
                  if(isFocused && !hasActiveLabel) {                                                                   // 5084
                    $label.first().addClass(className.active);                                                         // 5085
                  }                                                                                                    // 5086
                  // activate next label                                                                               // 5087
                  if(hasActiveLabel) {                                                                                 // 5088
                    if(!event.shiftKey) {                                                                              // 5089
                      module.verbose('Selecting next label');                                                          // 5090
                      $label.removeClass(className.active);                                                            // 5091
                    }                                                                                                  // 5092
                    else {                                                                                             // 5093
                      module.verbose('Adding next label to selection');                                                // 5094
                    }                                                                                                  // 5095
                    if(isLastLabel) {                                                                                  // 5096
                      if(isSearch) {                                                                                   // 5097
                        if(!isFocusedOnSearch) {                                                                       // 5098
                          module.focusSearch();                                                                        // 5099
                        }                                                                                              // 5100
                        else {                                                                                         // 5101
                          $label.removeClass(className.active);                                                        // 5102
                        }                                                                                              // 5103
                      }                                                                                                // 5104
                      else if(hasMultipleActive) {                                                                     // 5105
                        $activeLabel.next(selector.siblingLabel).addClass(className.active);                           // 5106
                      }                                                                                                // 5107
                      else {                                                                                           // 5108
                        $activeLabel.addClass(className.active);                                                       // 5109
                      }                                                                                                // 5110
                    }                                                                                                  // 5111
                    else {                                                                                             // 5112
                      $activeLabel.next(selector.siblingLabel).addClass(className.active);                             // 5113
                    }                                                                                                  // 5114
                    event.preventDefault();                                                                            // 5115
                  }                                                                                                    // 5116
                }                                                                                                      // 5117
                else if(pressedKey == keys.deleteKey || pressedKey == keys.backspace) {                                // 5118
                  if(hasActiveLabel) {                                                                                 // 5119
                    module.verbose('Removing active labels');                                                          // 5120
                    if(isLastLabel) {                                                                                  // 5121
                      if(isSearch && !isFocusedOnSearch) {                                                             // 5122
                        module.focusSearch();                                                                          // 5123
                      }                                                                                                // 5124
                    }                                                                                                  // 5125
                    $activeLabel.last().next(selector.siblingLabel).addClass(className.active);                        // 5126
                    module.remove.activeLabels($activeLabel);                                                          // 5127
                    event.preventDefault();                                                                            // 5128
                  }                                                                                                    // 5129
                  else if(caretAtStart && !hasActiveLabel && pressedKey == keys.backspace) {                           // 5130
                    module.verbose('Removing last label on input backspace');                                          // 5131
                    $activeLabel = $label.last().addClass(className.active);                                           // 5132
                    module.remove.activeLabels($activeLabel);                                                          // 5133
                  }                                                                                                    // 5134
                }                                                                                                      // 5135
                else {                                                                                                 // 5136
                  $activeLabel.removeClass(className.active);                                                          // 5137
                }                                                                                                      // 5138
              }                                                                                                        // 5139
            }                                                                                                          // 5140
          },                                                                                                           // 5141
                                                                                                                       // 5142
          keydown: function(event) {                                                                                   // 5143
            var                                                                                                        // 5144
              pressedKey    = event.which,                                                                             // 5145
              keys          = module.get.shortcutKeys(),                                                               // 5146
              isShortcutKey = module.is.inObject(pressedKey, keys)                                                     // 5147
            ;                                                                                                          // 5148
            if(isShortcutKey) {                                                                                        // 5149
              var                                                                                                      // 5150
                $currentlySelected = $item.not(selector.unselectable).filter('.' + className.selected).eq(0),          // 5151
                $activeItem        = $menu.children('.' + className.active).eq(0),                                     // 5152
                $selectedItem      = ($currentlySelected.length > 0)                                                   // 5153
                  ? $currentlySelected                                                                                 // 5154
                  : $activeItem,                                                                                       // 5155
                $visibleItems = ($selectedItem.length > 0)                                                             // 5156
                  ? $selectedItem.siblings(':not(.' + className.filtered +')').andSelf()                               // 5157
                  : $menu.children(':not(.' + className.filtered +')'),                                                // 5158
                $subMenu             = $selectedItem.children(selector.menu),                                          // 5159
                $parentMenu          = $selectedItem.closest(selector.menu),                                           // 5160
                inVisibleMenu        = ($parentMenu.hasClass(className.visible) || $parentMenu.hasClass(className.animating) || $parentMenu.parent(selector.menu).length > 0),
                hasSubMenu           = ($subMenu.length> 0),                                                           // 5162
                hasSelectedItem      = ($selectedItem.length > 0),                                                     // 5163
                selectedIsSelectable = ($selectedItem.not(selector.unselectable).length > 0),                          // 5164
                $nextItem,                                                                                             // 5165
                isSubMenuItem,                                                                                         // 5166
                newIndex                                                                                               // 5167
              ;                                                                                                        // 5168
                                                                                                                       // 5169
              // visible menu keyboard shortcuts                                                                       // 5170
              if( module.is.visible() ) {                                                                              // 5171
                                                                                                                       // 5172
                // enter (select or open sub-menu)                                                                     // 5173
                if(pressedKey == keys.enter || pressedKey == keys.delimiter) {                                         // 5174
                  if(pressedKey == keys.enter && hasSelectedItem && hasSubMenu && !settings.allowCategorySelection) {  // 5175
                    module.verbose('Pressed enter on unselectable category, opening sub menu');                        // 5176
                    pressedKey = keys.rightArrow;                                                                      // 5177
                  }                                                                                                    // 5178
                  else if(selectedIsSelectable) {                                                                      // 5179
                    module.verbose('Selecting item from keyboard shortcut', $selectedItem);                            // 5180
                    module.event.item.click.call($selectedItem, event);                                                // 5181
                    if(module.is.searchSelection()) {                                                                  // 5182
                      module.remove.searchTerm();                                                                      // 5183
                    }                                                                                                  // 5184
                  }                                                                                                    // 5185
                  event.preventDefault();                                                                              // 5186
                }                                                                                                      // 5187
                                                                                                                       // 5188
                // left arrow (hide sub-menu)                                                                          // 5189
                if(pressedKey == keys.leftArrow) {                                                                     // 5190
                                                                                                                       // 5191
                  isSubMenuItem = ($parentMenu[0] !== $menu[0]);                                                       // 5192
                                                                                                                       // 5193
                  if(isSubMenuItem) {                                                                                  // 5194
                    module.verbose('Left key pressed, closing sub-menu');                                              // 5195
                    module.animate.hide(false,  $parentMenu);                                                          // 5196
                    $selectedItem                                                                                      // 5197
                      .removeClass(className.selected)                                                                 // 5198
                    ;                                                                                                  // 5199
                    $parentMenu                                                                                        // 5200
                      .closest(selector.item)                                                                          // 5201
                        .addClass(className.selected)                                                                  // 5202
                    ;                                                                                                  // 5203
                    event.preventDefault();                                                                            // 5204
                  }                                                                                                    // 5205
                }                                                                                                      // 5206
                                                                                                                       // 5207
                // right arrow (show sub-menu)                                                                         // 5208
                if(pressedKey == keys.rightArrow) {                                                                    // 5209
                  if(hasSubMenu) {                                                                                     // 5210
                    module.verbose('Right key pressed, opening sub-menu');                                             // 5211
                    module.animate.show(false,  $subMenu);                                                             // 5212
                    $selectedItem                                                                                      // 5213
                      .removeClass(className.selected)                                                                 // 5214
                    ;                                                                                                  // 5215
                    $subMenu                                                                                           // 5216
                      .find(selector.item).eq(0)                                                                       // 5217
                        .addClass(className.selected)                                                                  // 5218
                    ;                                                                                                  // 5219
                    event.preventDefault();                                                                            // 5220
                  }                                                                                                    // 5221
                }                                                                                                      // 5222
                                                                                                                       // 5223
                // up arrow (traverse menu up)                                                                         // 5224
                if(pressedKey == keys.upArrow) {                                                                       // 5225
                  $nextItem = (hasSelectedItem && inVisibleMenu)                                                       // 5226
                    ? $selectedItem.prevAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)               // 5227
                    : $item.eq(0)                                                                                      // 5228
                  ;                                                                                                    // 5229
                  if($visibleItems.index( $nextItem ) < 0) {                                                           // 5230
                    module.verbose('Up key pressed but reached top of current menu');                                  // 5231
                    event.preventDefault();                                                                            // 5232
                    return;                                                                                            // 5233
                  }                                                                                                    // 5234
                  else {                                                                                               // 5235
                    module.verbose('Up key pressed, changing active item');                                            // 5236
                    $selectedItem                                                                                      // 5237
                      .removeClass(className.selected)                                                                 // 5238
                    ;                                                                                                  // 5239
                    $nextItem                                                                                          // 5240
                      .addClass(className.selected)                                                                    // 5241
                    ;                                                                                                  // 5242
                    module.set.scrollPosition($nextItem);                                                              // 5243
                  }                                                                                                    // 5244
                  event.preventDefault();                                                                              // 5245
                }                                                                                                      // 5246
                                                                                                                       // 5247
                // down arrow (traverse menu down)                                                                     // 5248
                if(pressedKey == keys.downArrow) {                                                                     // 5249
                  $nextItem = (hasSelectedItem && inVisibleMenu)                                                       // 5250
                    ? $nextItem = $selectedItem.nextAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)   // 5251
                    : $item.eq(0)                                                                                      // 5252
                  ;                                                                                                    // 5253
                  if($nextItem.length === 0) {                                                                         // 5254
                    module.verbose('Down key pressed but reached bottom of current menu');                             // 5255
                    event.preventDefault();                                                                            // 5256
                    return;                                                                                            // 5257
                  }                                                                                                    // 5258
                  else {                                                                                               // 5259
                    module.verbose('Down key pressed, changing active item');                                          // 5260
                    $item                                                                                              // 5261
                      .removeClass(className.selected)                                                                 // 5262
                    ;                                                                                                  // 5263
                    $nextItem                                                                                          // 5264
                      .addClass(className.selected)                                                                    // 5265
                    ;                                                                                                  // 5266
                    module.set.scrollPosition($nextItem);                                                              // 5267
                  }                                                                                                    // 5268
                  event.preventDefault();                                                                              // 5269
                }                                                                                                      // 5270
                                                                                                                       // 5271
                // page down (show next page)                                                                          // 5272
                if(pressedKey == keys.pageUp) {                                                                        // 5273
                  module.scrollPage('up');                                                                             // 5274
                  event.preventDefault();                                                                              // 5275
                }                                                                                                      // 5276
                if(pressedKey == keys.pageDown) {                                                                      // 5277
                  module.scrollPage('down');                                                                           // 5278
                  event.preventDefault();                                                                              // 5279
                }                                                                                                      // 5280
                                                                                                                       // 5281
                // escape (close menu)                                                                                 // 5282
                if(pressedKey == keys.escape) {                                                                        // 5283
                  module.verbose('Escape key pressed, closing dropdown');                                              // 5284
                  module.hide();                                                                                       // 5285
                }                                                                                                      // 5286
                                                                                                                       // 5287
              }                                                                                                        // 5288
              else {                                                                                                   // 5289
                // delimiter key                                                                                       // 5290
                if(pressedKey == keys.delimiter) {                                                                     // 5291
                  event.preventDefault();                                                                              // 5292
                }                                                                                                      // 5293
                // down arrow (open menu)                                                                              // 5294
                if(pressedKey == keys.downArrow) {                                                                     // 5295
                  module.verbose('Down key pressed, showing dropdown');                                                // 5296
                  module.show();                                                                                       // 5297
                  event.preventDefault();                                                                              // 5298
                }                                                                                                      // 5299
              }                                                                                                        // 5300
            }                                                                                                          // 5301
            else {                                                                                                     // 5302
              if( module.is.selection() && !module.is.search() ) {                                                     // 5303
                module.set.selectedLetter( String.fromCharCode(pressedKey) );                                          // 5304
              }                                                                                                        // 5305
            }                                                                                                          // 5306
          }                                                                                                            // 5307
        },                                                                                                             // 5308
                                                                                                                       // 5309
        determine: {                                                                                                   // 5310
          selectAction: function(text, value) {                                                                        // 5311
            module.verbose('Determining action', settings.action);                                                     // 5312
            if( $.isFunction( module.action[settings.action] ) ) {                                                     // 5313
              module.verbose('Triggering preset action', settings.action, text, value);                                // 5314
              module.action[ settings.action ].call(this, text, value);                                                // 5315
            }                                                                                                          // 5316
            else if( $.isFunction(settings.action) ) {                                                                 // 5317
              module.verbose('Triggering user action', settings.action, text, value);                                  // 5318
              settings.action.call(this, text, value);                                                                 // 5319
            }                                                                                                          // 5320
            else {                                                                                                     // 5321
              module.error(error.action, settings.action);                                                             // 5322
            }                                                                                                          // 5323
          },                                                                                                           // 5324
          eventInModule: function(event, callback) {                                                                   // 5325
            var                                                                                                        // 5326
              $target    = $(event.target),                                                                            // 5327
              inDocument = ($target.closest(document.documentElement).length > 0),                                     // 5328
              inModule   = ($target.closest($module).length > 0)                                                       // 5329
            ;                                                                                                          // 5330
            callback = $.isFunction(callback)                                                                          // 5331
              ? callback                                                                                               // 5332
              : function(){}                                                                                           // 5333
            ;                                                                                                          // 5334
            if(inDocument && !inModule) {                                                                              // 5335
              module.verbose('Triggering event', callback);                                                            // 5336
              callback();                                                                                              // 5337
              return true;                                                                                             // 5338
            }                                                                                                          // 5339
            else {                                                                                                     // 5340
              module.verbose('Event occurred in dropdown, canceling callback');                                        // 5341
              return false;                                                                                            // 5342
            }                                                                                                          // 5343
          },                                                                                                           // 5344
          eventOnElement: function(event, callback) {                                                                  // 5345
            var                                                                                                        // 5346
              $target    = $(event.target),                                                                            // 5347
              $label     = $target.closest(selector.siblingLabel),                                                     // 5348
              notOnLabel = ($module.find($label).length === 0),                                                        // 5349
              notInMenu  = ($target.closest($menu).length === 0)                                                       // 5350
            ;                                                                                                          // 5351
            callback = $.isFunction(callback)                                                                          // 5352
              ? callback                                                                                               // 5353
              : function(){}                                                                                           // 5354
            ;                                                                                                          // 5355
            if(notOnLabel && notInMenu) {                                                                              // 5356
              module.verbose('Triggering event', callback);                                                            // 5357
              callback();                                                                                              // 5358
              return true;                                                                                             // 5359
            }                                                                                                          // 5360
            else {                                                                                                     // 5361
              module.verbose('Event occurred in dropdown menu, canceling callback');                                   // 5362
              return false;                                                                                            // 5363
            }                                                                                                          // 5364
          }                                                                                                            // 5365
        },                                                                                                             // 5366
                                                                                                                       // 5367
        action: {                                                                                                      // 5368
                                                                                                                       // 5369
          nothing: function() {},                                                                                      // 5370
                                                                                                                       // 5371
          activate: function(text, value) {                                                                            // 5372
            value = (value !== undefined)                                                                              // 5373
              ? value                                                                                                  // 5374
              : text                                                                                                   // 5375
            ;                                                                                                          // 5376
            if( module.can.activate( $(this) ) ) {                                                                     // 5377
              module.set.selected(value, $(this));                                                                     // 5378
              if(module.is.multiple() && !module.is.allFiltered()) {                                                   // 5379
                return;                                                                                                // 5380
              }                                                                                                        // 5381
              else {                                                                                                   // 5382
                module.hideAndClear();                                                                                 // 5383
              }                                                                                                        // 5384
            }                                                                                                          // 5385
          },                                                                                                           // 5386
                                                                                                                       // 5387
          select: function(text, value) {                                                                              // 5388
            // mimics action.activate but does not select text                                                         // 5389
            module.action.activate.call(this);                                                                         // 5390
          },                                                                                                           // 5391
                                                                                                                       // 5392
          combo: function(text, value) {                                                                               // 5393
            value = (value !== undefined)                                                                              // 5394
              ? value                                                                                                  // 5395
              : text                                                                                                   // 5396
            ;                                                                                                          // 5397
            module.set.selected(value, $(this));                                                                       // 5398
            module.hideAndClear();                                                                                     // 5399
          },                                                                                                           // 5400
                                                                                                                       // 5401
          hide: function(text, value) {                                                                                // 5402
            module.set.value(value);                                                                                   // 5403
            module.hideAndClear();                                                                                     // 5404
          }                                                                                                            // 5405
                                                                                                                       // 5406
        },                                                                                                             // 5407
                                                                                                                       // 5408
        get: {                                                                                                         // 5409
          id: function() {                                                                                             // 5410
            return id;                                                                                                 // 5411
          },                                                                                                           // 5412
          defaultText: function() {                                                                                    // 5413
            return $module.data(metadata.defaultText);                                                                 // 5414
          },                                                                                                           // 5415
          defaultValue: function() {                                                                                   // 5416
            return $module.data(metadata.defaultValue);                                                                // 5417
          },                                                                                                           // 5418
          placeholderText: function() {                                                                                // 5419
            return $module.data(metadata.placeholderText) || '';                                                       // 5420
          },                                                                                                           // 5421
          text: function() {                                                                                           // 5422
            return $text.text();                                                                                       // 5423
          },                                                                                                           // 5424
          query: function() {                                                                                          // 5425
            return $.trim($search.val());                                                                              // 5426
          },                                                                                                           // 5427
          searchWidth: function(characterCount) {                                                                      // 5428
            return (characterCount * settings.glyphWidth) + 'em';                                                      // 5429
          },                                                                                                           // 5430
          selectionCount: function() {                                                                                 // 5431
            var                                                                                                        // 5432
              values = module.get.values(),                                                                            // 5433
              count                                                                                                    // 5434
            ;                                                                                                          // 5435
            count = ( module.is.multiple() )                                                                           // 5436
              ? $.isArray(values)                                                                                      // 5437
                ? values.length                                                                                        // 5438
                : 0                                                                                                    // 5439
              : (module.get.value() !== '')                                                                            // 5440
                ? 1                                                                                                    // 5441
                : 0                                                                                                    // 5442
            ;                                                                                                          // 5443
            return count;                                                                                              // 5444
          },                                                                                                           // 5445
          transition: function($subMenu) {                                                                             // 5446
            return (settings.transition == 'auto')                                                                     // 5447
              ? module.is.upward($subMenu)                                                                             // 5448
                ? 'slide up'                                                                                           // 5449
                : 'slide down'                                                                                         // 5450
              : settings.transition                                                                                    // 5451
            ;                                                                                                          // 5452
          },                                                                                                           // 5453
          userValues: function() {                                                                                     // 5454
            var                                                                                                        // 5455
              values = module.get.values()                                                                             // 5456
            ;                                                                                                          // 5457
            if(!values) {                                                                                              // 5458
              return false;                                                                                            // 5459
            }                                                                                                          // 5460
            values = $.isArray(values)                                                                                 // 5461
              ? values                                                                                                 // 5462
              : [values]                                                                                               // 5463
            ;                                                                                                          // 5464
            return $.grep(values, function(value) {                                                                    // 5465
              return (module.get.item(value) === false);                                                               // 5466
            });                                                                                                        // 5467
          },                                                                                                           // 5468
          uniqueArray: function(array) {                                                                               // 5469
            return $.grep(array, function (value, index) {                                                             // 5470
                return $.inArray(value, array) === index;                                                              // 5471
            });                                                                                                        // 5472
          },                                                                                                           // 5473
          caretPosition: function() {                                                                                  // 5474
            var                                                                                                        // 5475
              input = $search.get(0),                                                                                  // 5476
              range,                                                                                                   // 5477
              rangeLength                                                                                              // 5478
            ;                                                                                                          // 5479
            if('selectionStart' in input) {                                                                            // 5480
              return input.selectionStart;                                                                             // 5481
            }                                                                                                          // 5482
            else if (document.selection) {                                                                             // 5483
              input.focus();                                                                                           // 5484
              range       = document.selection.createRange();                                                          // 5485
              rangeLength = range.text.length;                                                                         // 5486
              range.moveStart('character', -input.value.length);                                                       // 5487
              return range.text.length - rangeLength;                                                                  // 5488
            }                                                                                                          // 5489
          },                                                                                                           // 5490
          shortcutKeys: function() {                                                                                   // 5491
            return {                                                                                                   // 5492
              backspace  : 8,                                                                                          // 5493
              delimiter  : 188, // comma                                                                               // 5494
              deleteKey  : 46,                                                                                         // 5495
              enter      : 13,                                                                                         // 5496
              escape     : 27,                                                                                         // 5497
              pageUp     : 33,                                                                                         // 5498
              pageDown   : 34,                                                                                         // 5499
              leftArrow  : 37,                                                                                         // 5500
              upArrow    : 38,                                                                                         // 5501
              rightArrow : 39,                                                                                         // 5502
              downArrow  : 40                                                                                          // 5503
            };                                                                                                         // 5504
          },                                                                                                           // 5505
          value: function() {                                                                                          // 5506
            var                                                                                                        // 5507
              value = ($input.length > 0)                                                                              // 5508
                ? $input.val()                                                                                         // 5509
                : $module.data(metadata.value)                                                                         // 5510
            ;                                                                                                          // 5511
            // prevents placeholder element from being selected when multiple                                          // 5512
            if($.isArray(value) && value.length === 1 && value[0] === '') {                                            // 5513
              return '';                                                                                               // 5514
            }                                                                                                          // 5515
            return value;                                                                                              // 5516
          },                                                                                                           // 5517
          values: function() {                                                                                         // 5518
            var                                                                                                        // 5519
              value = module.get.value()                                                                               // 5520
            ;                                                                                                          // 5521
            if(value === '') {                                                                                         // 5522
              return '';                                                                                               // 5523
            }                                                                                                          // 5524
            return ( !module.has.selectInput() && module.is.multiple() )                                               // 5525
              ? (typeof value == 'string') // delimited string                                                         // 5526
                ? value.split(settings.delimiter)                                                                      // 5527
                : ''                                                                                                   // 5528
              : value                                                                                                  // 5529
            ;                                                                                                          // 5530
          },                                                                                                           // 5531
          remoteValues: function() {                                                                                   // 5532
            var                                                                                                        // 5533
              values = module.get.values(),                                                                            // 5534
              remoteValues = false                                                                                     // 5535
            ;                                                                                                          // 5536
            if(values) {                                                                                               // 5537
              if(typeof values == 'string') {                                                                          // 5538
                values = [values];                                                                                     // 5539
              }                                                                                                        // 5540
              remoteValues = {};                                                                                       // 5541
              $.each(values, function(index, value) {                                                                  // 5542
                var                                                                                                    // 5543
                  name = module.read.remoteData(value)                                                                 // 5544
                ;                                                                                                      // 5545
                module.verbose('Restoring value from session data', name, value);                                      // 5546
                remoteValues[value] = (name)                                                                           // 5547
                  ? name                                                                                               // 5548
                  : value                                                                                              // 5549
                ;                                                                                                      // 5550
              });                                                                                                      // 5551
            }                                                                                                          // 5552
            return remoteValues;                                                                                       // 5553
          },                                                                                                           // 5554
          choiceText: function($choice, preserveHTML) {                                                                // 5555
            preserveHTML = (preserveHTML !== undefined)                                                                // 5556
              ? preserveHTML                                                                                           // 5557
              : settings.preserveHTML                                                                                  // 5558
            ;                                                                                                          // 5559
            if($choice) {                                                                                              // 5560
              if($choice.find(selector.menu).length > 0) {                                                             // 5561
                module.verbose('Retreiving text of element with sub-menu');                                            // 5562
                $choice = $choice.clone();                                                                             // 5563
                $choice.find(selector.menu).remove();                                                                  // 5564
                $choice.find(selector.menuIcon).remove();                                                              // 5565
              }                                                                                                        // 5566
              return ($choice.data(metadata.text) !== undefined)                                                       // 5567
                ? $choice.data(metadata.text)                                                                          // 5568
                : (preserveHTML)                                                                                       // 5569
                  ? $.trim($choice.html())                                                                             // 5570
                  : $.trim($choice.text())                                                                             // 5571
              ;                                                                                                        // 5572
            }                                                                                                          // 5573
          },                                                                                                           // 5574
          choiceValue: function($choice, choiceText) {                                                                 // 5575
            choiceText = choiceText || module.get.choiceText($choice);                                                 // 5576
            if(!$choice) {                                                                                             // 5577
              return false;                                                                                            // 5578
            }                                                                                                          // 5579
            return ($choice.data(metadata.value) !== undefined)                                                        // 5580
              ? String( $choice.data(metadata.value) )                                                                 // 5581
              : (typeof choiceText === 'string')                                                                       // 5582
                ? $.trim(choiceText.toLowerCase())                                                                     // 5583
                : String(choiceText)                                                                                   // 5584
            ;                                                                                                          // 5585
          },                                                                                                           // 5586
          inputEvent: function() {                                                                                     // 5587
            var                                                                                                        // 5588
              input = $search[0]                                                                                       // 5589
            ;                                                                                                          // 5590
            if(input) {                                                                                                // 5591
              return (input.oninput !== undefined)                                                                     // 5592
                ? 'input'                                                                                              // 5593
                : (input.onpropertychange !== undefined)                                                               // 5594
                  ? 'propertychange'                                                                                   // 5595
                  : 'keyup'                                                                                            // 5596
              ;                                                                                                        // 5597
            }                                                                                                          // 5598
            return false;                                                                                              // 5599
          },                                                                                                           // 5600
          selectValues: function() {                                                                                   // 5601
            var                                                                                                        // 5602
              select = {}                                                                                              // 5603
            ;                                                                                                          // 5604
            select.values = [];                                                                                        // 5605
            $module                                                                                                    // 5606
              .find('option')                                                                                          // 5607
                .each(function() {                                                                                     // 5608
                  var                                                                                                  // 5609
                    $option  = $(this),                                                                                // 5610
                    name     = $option.html(),                                                                         // 5611
                    disabled = $option.attr('disabled'),                                                               // 5612
                    value    = ( $option.attr('value') !== undefined )                                                 // 5613
                      ? $option.attr('value')                                                                          // 5614
                      : name                                                                                           // 5615
                  ;                                                                                                    // 5616
                  if(settings.placeholder === 'auto' && value === '') {                                                // 5617
                    select.placeholder = name;                                                                         // 5618
                  }                                                                                                    // 5619
                  else {                                                                                               // 5620
                    select.values.push({                                                                               // 5621
                      name     : name,                                                                                 // 5622
                      value    : value,                                                                                // 5623
                      disabled : disabled                                                                              // 5624
                    });                                                                                                // 5625
                  }                                                                                                    // 5626
                })                                                                                                     // 5627
            ;                                                                                                          // 5628
            if(settings.placeholder && settings.placeholder !== 'auto') {                                              // 5629
              module.debug('Setting placeholder value to', settings.placeholder);                                      // 5630
              select.placeholder = settings.placeholder;                                                               // 5631
            }                                                                                                          // 5632
            if(settings.sortSelect) {                                                                                  // 5633
              select.values.sort(function(a, b) {                                                                      // 5634
                return (a.name > b.name)                                                                               // 5635
                  ? 1                                                                                                  // 5636
                  : -1                                                                                                 // 5637
                ;                                                                                                      // 5638
              });                                                                                                      // 5639
              module.debug('Retrieved and sorted values from select', select);                                         // 5640
            }                                                                                                          // 5641
            else {                                                                                                     // 5642
              module.debug('Retreived values from select', select);                                                    // 5643
            }                                                                                                          // 5644
            return select;                                                                                             // 5645
          },                                                                                                           // 5646
          activeItem: function() {                                                                                     // 5647
            return $item.filter('.'  + className.active);                                                              // 5648
          },                                                                                                           // 5649
          selectedItem: function() {                                                                                   // 5650
            var                                                                                                        // 5651
              $selectedItem = $item.not(selector.unselectable).filter('.'  + className.selected)                       // 5652
            ;                                                                                                          // 5653
            return ($selectedItem.length > 0)                                                                          // 5654
              ? $selectedItem                                                                                          // 5655
              : $item.eq(0)                                                                                            // 5656
            ;                                                                                                          // 5657
          },                                                                                                           // 5658
          itemWithAdditions: function(value) {                                                                         // 5659
            var                                                                                                        // 5660
              $items       = module.get.item(value),                                                                   // 5661
              $userItems   = module.create.userChoice(value),                                                          // 5662
              hasUserItems = ($userItems && $userItems.length > 0)                                                     // 5663
            ;                                                                                                          // 5664
            if(hasUserItems) {                                                                                         // 5665
              $items = ($items.length > 0)                                                                             // 5666
                ? $items.add($userItems)                                                                               // 5667
                : $userItems                                                                                           // 5668
              ;                                                                                                        // 5669
            }                                                                                                          // 5670
            return $items;                                                                                             // 5671
          },                                                                                                           // 5672
          item: function(value, strict) {                                                                              // 5673
            var                                                                                                        // 5674
              $selectedItem = false,                                                                                   // 5675
              shouldSearch,                                                                                            // 5676
              isMultiple                                                                                               // 5677
            ;                                                                                                          // 5678
            value = (value !== undefined)                                                                              // 5679
              ? value                                                                                                  // 5680
              : ( module.get.values() !== undefined)                                                                   // 5681
                ? module.get.values()                                                                                  // 5682
                : module.get.text()                                                                                    // 5683
            ;                                                                                                          // 5684
            shouldSearch = (isMultiple)                                                                                // 5685
              ? (value.length > 0)                                                                                     // 5686
              : (value !== undefined && value !== null)                                                                // 5687
            ;                                                                                                          // 5688
            isMultiple = (module.is.multiple() && $.isArray(value));                                                   // 5689
            strict     = (value === '' || value === 0)                                                                 // 5690
              ? true                                                                                                   // 5691
              : strict || false                                                                                        // 5692
            ;                                                                                                          // 5693
            if(shouldSearch) {                                                                                         // 5694
              $item                                                                                                    // 5695
                .each(function() {                                                                                     // 5696
                  var                                                                                                  // 5697
                    $choice       = $(this),                                                                           // 5698
                    optionText    = module.get.choiceText($choice),                                                    // 5699
                    optionValue   = module.get.choiceValue($choice, optionText)                                        // 5700
                  ;                                                                                                    // 5701
                  // safe early exit                                                                                   // 5702
                  if(optionValue === null || optionValue === undefined) {                                              // 5703
                    return;                                                                                            // 5704
                  }                                                                                                    // 5705
                  if(isMultiple) {                                                                                     // 5706
                    if($.inArray( String(optionValue), value) !== -1 || $.inArray(optionText, value) !== -1) {         // 5707
                      $selectedItem = ($selectedItem)                                                                  // 5708
                        ? $selectedItem.add($choice)                                                                   // 5709
                        : $choice                                                                                      // 5710
                      ;                                                                                                // 5711
                    }                                                                                                  // 5712
                  }                                                                                                    // 5713
                  else if(strict) {                                                                                    // 5714
                    module.verbose('Ambiguous dropdown value using strict type check', $choice, value);                // 5715
                    if( optionValue === value || optionText === value) {                                               // 5716
                      $selectedItem = $choice;                                                                         // 5717
                      return true;                                                                                     // 5718
                    }                                                                                                  // 5719
                  }                                                                                                    // 5720
                  else {                                                                                               // 5721
                    if( String(optionValue) == String(value) || optionText == value) {                                 // 5722
                      module.verbose('Found select item by value', optionValue, value);                                // 5723
                      $selectedItem = $choice;                                                                         // 5724
                      return true;                                                                                     // 5725
                    }                                                                                                  // 5726
                  }                                                                                                    // 5727
                })                                                                                                     // 5728
              ;                                                                                                        // 5729
            }                                                                                                          // 5730
            return $selectedItem;                                                                                      // 5731
          }                                                                                                            // 5732
        },                                                                                                             // 5733
                                                                                                                       // 5734
        check: {                                                                                                       // 5735
          maxSelections: function(selectionCount) {                                                                    // 5736
            if(settings.maxSelections) {                                                                               // 5737
              selectionCount = (selectionCount !== undefined)                                                          // 5738
                ? selectionCount                                                                                       // 5739
                : module.get.selectionCount()                                                                          // 5740
              ;                                                                                                        // 5741
              if(selectionCount >= settings.maxSelections) {                                                           // 5742
                module.debug('Maximum selection count reached');                                                       // 5743
                if(settings.useLabels) {                                                                               // 5744
                  $item.addClass(className.filtered);                                                                  // 5745
                  module.add.message(message.maxSelections);                                                           // 5746
                }                                                                                                      // 5747
                return true;                                                                                           // 5748
              }                                                                                                        // 5749
              else {                                                                                                   // 5750
                module.verbose('No longer at maximum selection count');                                                // 5751
                module.remove.message();                                                                               // 5752
                module.remove.filteredItem();                                                                          // 5753
                if(module.is.searchSelection()) {                                                                      // 5754
                  module.filterItems();                                                                                // 5755
                }                                                                                                      // 5756
                return false;                                                                                          // 5757
              }                                                                                                        // 5758
            }                                                                                                          // 5759
            return true;                                                                                               // 5760
          }                                                                                                            // 5761
        },                                                                                                             // 5762
                                                                                                                       // 5763
        restore: {                                                                                                     // 5764
          defaults: function() {                                                                                       // 5765
            module.clear();                                                                                            // 5766
            module.restore.defaultText();                                                                              // 5767
            module.restore.defaultValue();                                                                             // 5768
          },                                                                                                           // 5769
          defaultText: function() {                                                                                    // 5770
            var                                                                                                        // 5771
              defaultText     = module.get.defaultText(),                                                              // 5772
              placeholderText = module.get.placeholderText                                                             // 5773
            ;                                                                                                          // 5774
            if(defaultText === placeholderText) {                                                                      // 5775
              module.debug('Restoring default placeholder text', defaultText);                                         // 5776
              module.set.placeholderText(defaultText);                                                                 // 5777
            }                                                                                                          // 5778
            else {                                                                                                     // 5779
              module.debug('Restoring default text', defaultText);                                                     // 5780
              module.set.text(defaultText);                                                                            // 5781
            }                                                                                                          // 5782
          },                                                                                                           // 5783
          defaultValue: function() {                                                                                   // 5784
            var                                                                                                        // 5785
              defaultValue = module.get.defaultValue()                                                                 // 5786
            ;                                                                                                          // 5787
            if(defaultValue !== undefined) {                                                                           // 5788
              module.debug('Restoring default value', defaultValue);                                                   // 5789
              if(defaultValue !== '') {                                                                                // 5790
                module.set.value(defaultValue);                                                                        // 5791
                module.set.selected();                                                                                 // 5792
              }                                                                                                        // 5793
              else {                                                                                                   // 5794
                module.remove.activeItem();                                                                            // 5795
                module.remove.selectedItem();                                                                          // 5796
              }                                                                                                        // 5797
            }                                                                                                          // 5798
          },                                                                                                           // 5799
          labels: function() {                                                                                         // 5800
            if(settings.allowAdditions) {                                                                              // 5801
              if(!settings.useLabels) {                                                                                // 5802
                module.error(error.labels);                                                                            // 5803
                settings.useLabels = true;                                                                             // 5804
              }                                                                                                        // 5805
              module.debug('Restoring selected values');                                                               // 5806
              module.create.userLabels();                                                                              // 5807
            }                                                                                                          // 5808
            module.check.maxSelections();                                                                              // 5809
          },                                                                                                           // 5810
          selected: function() {                                                                                       // 5811
            module.restore.values();                                                                                   // 5812
            if(module.is.multiple()) {                                                                                 // 5813
              module.debug('Restoring previously selected values and labels');                                         // 5814
              module.restore.labels();                                                                                 // 5815
            }                                                                                                          // 5816
            else {                                                                                                     // 5817
              module.debug('Restoring previously selected values');                                                    // 5818
            }                                                                                                          // 5819
          },                                                                                                           // 5820
          values: function() {                                                                                         // 5821
            // prevents callbacks from occuring on initial load                                                        // 5822
            module.set.initialLoad();                                                                                  // 5823
            if(settings.apiSettings) {                                                                                 // 5824
              if(settings.saveRemoteData) {                                                                            // 5825
                module.restore.remoteValues();                                                                         // 5826
              }                                                                                                        // 5827
              else {                                                                                                   // 5828
                module.clearValue();                                                                                   // 5829
              }                                                                                                        // 5830
            }                                                                                                          // 5831
            else {                                                                                                     // 5832
              module.set.selected();                                                                                   // 5833
            }                                                                                                          // 5834
            module.remove.initialLoad();                                                                               // 5835
          },                                                                                                           // 5836
          remoteValues: function() {                                                                                   // 5837
            var                                                                                                        // 5838
              values = module.get.remoteValues()                                                                       // 5839
            ;                                                                                                          // 5840
            module.debug('Recreating selected from session data', values);                                             // 5841
            if(values) {                                                                                               // 5842
              if( module.is.single() ) {                                                                               // 5843
                $.each(values, function(value, name) {                                                                 // 5844
                  module.set.text(name);                                                                               // 5845
                });                                                                                                    // 5846
              }                                                                                                        // 5847
              else {                                                                                                   // 5848
                $.each(values, function(value, name) {                                                                 // 5849
                  module.add.label(value, name);                                                                       // 5850
                });                                                                                                    // 5851
              }                                                                                                        // 5852
            }                                                                                                          // 5853
          }                                                                                                            // 5854
        },                                                                                                             // 5855
                                                                                                                       // 5856
        read: {                                                                                                        // 5857
          remoteData: function(value) {                                                                                // 5858
            var                                                                                                        // 5859
              name                                                                                                     // 5860
            ;                                                                                                          // 5861
            if(window.Storage === undefined) {                                                                         // 5862
              module.error(error.noStorage);                                                                           // 5863
              return;                                                                                                  // 5864
            }                                                                                                          // 5865
            name = sessionStorage.getItem(value);                                                                      // 5866
            return (name !== undefined)                                                                                // 5867
              ? name                                                                                                   // 5868
              : false                                                                                                  // 5869
            ;                                                                                                          // 5870
          }                                                                                                            // 5871
        },                                                                                                             // 5872
                                                                                                                       // 5873
        save: {                                                                                                        // 5874
          defaults: function() {                                                                                       // 5875
            module.save.defaultText();                                                                                 // 5876
            module.save.placeholderText();                                                                             // 5877
            module.save.defaultValue();                                                                                // 5878
          },                                                                                                           // 5879
          defaultValue: function() {                                                                                   // 5880
            var                                                                                                        // 5881
              value = module.get.value()                                                                               // 5882
            ;                                                                                                          // 5883
            module.verbose('Saving default value as', value);                                                          // 5884
            $module.data(metadata.defaultValue, value);                                                                // 5885
          },                                                                                                           // 5886
          defaultText: function() {                                                                                    // 5887
            var                                                                                                        // 5888
              text = module.get.text()                                                                                 // 5889
            ;                                                                                                          // 5890
            module.verbose('Saving default text as', text);                                                            // 5891
            $module.data(metadata.defaultText, text);                                                                  // 5892
          },                                                                                                           // 5893
          placeholderText: function() {                                                                                // 5894
            var                                                                                                        // 5895
              text                                                                                                     // 5896
            ;                                                                                                          // 5897
            if(settings.placeholder !== false && $text.hasClass(className.placeholder)) {                              // 5898
              text = module.get.text();                                                                                // 5899
              module.verbose('Saving placeholder text as', text);                                                      // 5900
              $module.data(metadata.placeholderText, text);                                                            // 5901
            }                                                                                                          // 5902
          },                                                                                                           // 5903
          remoteData: function(name, value) {                                                                          // 5904
            if(window.Storage === undefined) {                                                                         // 5905
              module.error(error.noStorage);                                                                           // 5906
              return;                                                                                                  // 5907
            }                                                                                                          // 5908
            module.verbose('Saving remote data to session storage', value, name);                                      // 5909
            sessionStorage.setItem(value, name);                                                                       // 5910
          }                                                                                                            // 5911
        },                                                                                                             // 5912
                                                                                                                       // 5913
        clear: function() {                                                                                            // 5914
          if(module.is.multiple()) {                                                                                   // 5915
            module.remove.labels();                                                                                    // 5916
          }                                                                                                            // 5917
          else {                                                                                                       // 5918
            module.remove.activeItem();                                                                                // 5919
            module.remove.selectedItem();                                                                              // 5920
          }                                                                                                            // 5921
          module.set.placeholderText();                                                                                // 5922
          module.clearValue();                                                                                         // 5923
        },                                                                                                             // 5924
                                                                                                                       // 5925
        clearValue: function() {                                                                                       // 5926
          module.set.value('');                                                                                        // 5927
        },                                                                                                             // 5928
                                                                                                                       // 5929
        scrollPage: function(direction, $selectedItem) {                                                               // 5930
          var                                                                                                          // 5931
            $currentItem  = $selectedItem || module.get.selectedItem(),                                                // 5932
            $menu         = $currentItem.closest(selector.menu),                                                       // 5933
            menuHeight    = $menu.outerHeight(),                                                                       // 5934
            currentScroll = $menu.scrollTop(),                                                                         // 5935
            itemHeight    = $item.eq(0).outerHeight(),                                                                 // 5936
            itemsPerPage  = Math.floor(menuHeight / itemHeight),                                                       // 5937
            maxScroll     = $menu.prop('scrollHeight'),                                                                // 5938
            newScroll     = (direction == 'up')                                                                        // 5939
              ? currentScroll - (itemHeight * itemsPerPage)                                                            // 5940
              : currentScroll + (itemHeight * itemsPerPage),                                                           // 5941
            $selectableItem = $item.not(selector.unselectable),                                                        // 5942
            isWithinRange,                                                                                             // 5943
            $nextSelectedItem,                                                                                         // 5944
            elementIndex                                                                                               // 5945
          ;                                                                                                            // 5946
          elementIndex      = (direction == 'up')                                                                      // 5947
            ? $selectableItem.index($currentItem) - itemsPerPage                                                       // 5948
            : $selectableItem.index($currentItem) + itemsPerPage                                                       // 5949
          ;                                                                                                            // 5950
          isWithinRange = (direction == 'up')                                                                          // 5951
            ? (elementIndex >= 0)                                                                                      // 5952
            : (elementIndex < $selectableItem.length)                                                                  // 5953
          ;                                                                                                            // 5954
          $nextSelectedItem = (isWithinRange)                                                                          // 5955
            ? $selectableItem.eq(elementIndex)                                                                         // 5956
            : (direction == 'up')                                                                                      // 5957
              ? $selectableItem.first()                                                                                // 5958
              : $selectableItem.last()                                                                                 // 5959
          ;                                                                                                            // 5960
          if($nextSelectedItem.length > 0) {                                                                           // 5961
            module.debug('Scrolling page', direction, $nextSelectedItem);                                              // 5962
            $currentItem                                                                                               // 5963
              .removeClass(className.selected)                                                                         // 5964
            ;                                                                                                          // 5965
            $nextSelectedItem                                                                                          // 5966
              .addClass(className.selected)                                                                            // 5967
            ;                                                                                                          // 5968
            $menu                                                                                                      // 5969
              .scrollTop(newScroll)                                                                                    // 5970
            ;                                                                                                          // 5971
          }                                                                                                            // 5972
        },                                                                                                             // 5973
                                                                                                                       // 5974
        set: {                                                                                                         // 5975
          filtered: function() {                                                                                       // 5976
            var                                                                                                        // 5977
              isMultiple       = module.is.multiple(),                                                                 // 5978
              isSearch         = module.is.searchSelection(),                                                          // 5979
              isSearchMultiple = (isMultiple && isSearch),                                                             // 5980
              searchValue      = (isSearch)                                                                            // 5981
                ? module.get.query()                                                                                   // 5982
                : '',                                                                                                  // 5983
              hasSearchValue   = (typeof searchValue === 'string' && searchValue.length > 0),                          // 5984
              searchWidth      = module.get.searchWidth(searchValue.length),                                           // 5985
              valueIsSet       = searchValue !== ''                                                                    // 5986
            ;                                                                                                          // 5987
            if(isMultiple && hasSearchValue) {                                                                         // 5988
              module.verbose('Adjusting input width', searchWidth, settings.glyphWidth);                               // 5989
              $search.css('width', searchWidth);                                                                       // 5990
            }                                                                                                          // 5991
            if(hasSearchValue || (isSearchMultiple && valueIsSet)) {                                                   // 5992
              module.verbose('Hiding placeholder text');                                                               // 5993
              $text.addClass(className.filtered);                                                                      // 5994
            }                                                                                                          // 5995
            else if(!isMultiple || (isSearchMultiple && !valueIsSet)) {                                                // 5996
              module.verbose('Showing placeholder text');                                                              // 5997
              $text.removeClass(className.filtered);                                                                   // 5998
            }                                                                                                          // 5999
          },                                                                                                           // 6000
          loading: function() {                                                                                        // 6001
            $module.addClass(className.loading);                                                                       // 6002
          },                                                                                                           // 6003
          placeholderText: function(text) {                                                                            // 6004
            text = text || module.get.placeholderText();                                                               // 6005
            module.debug('Setting placeholder text', text);                                                            // 6006
            module.set.text(text);                                                                                     // 6007
            $text.addClass(className.placeholder);                                                                     // 6008
          },                                                                                                           // 6009
          tabbable: function() {                                                                                       // 6010
            if( module.has.search() ) {                                                                                // 6011
              module.debug('Added tabindex to searchable dropdown');                                                   // 6012
              $search                                                                                                  // 6013
                .val('')                                                                                               // 6014
                .attr('tabindex', 0)                                                                                   // 6015
              ;                                                                                                        // 6016
              $menu                                                                                                    // 6017
                .attr('tabindex', -1)                                                                                  // 6018
              ;                                                                                                        // 6019
            }                                                                                                          // 6020
            else {                                                                                                     // 6021
              module.debug('Added tabindex to dropdown');                                                              // 6022
              if(!$module.attr('tabindex') ) {                                                                         // 6023
                $module                                                                                                // 6024
                  .attr('tabindex', 0)                                                                                 // 6025
                ;                                                                                                      // 6026
                $menu                                                                                                  // 6027
                  .attr('tabindex', -1)                                                                                // 6028
                ;                                                                                                      // 6029
              }                                                                                                        // 6030
            }                                                                                                          // 6031
          },                                                                                                           // 6032
          initialLoad: function() {                                                                                    // 6033
            module.verbose('Setting initial load');                                                                    // 6034
            initialLoad = true;                                                                                        // 6035
          },                                                                                                           // 6036
          activeItem: function($item) {                                                                                // 6037
            if( settings.allowAdditions && $item.filter(selector.addition).length > 0 ) {                              // 6038
              $item.addClass(className.filtered);                                                                      // 6039
            }                                                                                                          // 6040
            else {                                                                                                     // 6041
              $item.addClass(className.active);                                                                        // 6042
            }                                                                                                          // 6043
          },                                                                                                           // 6044
          scrollPosition: function($item, forceScroll) {                                                               // 6045
            var                                                                                                        // 6046
              edgeTolerance = 5,                                                                                       // 6047
              $menu,                                                                                                   // 6048
              hasActive,                                                                                               // 6049
              offset,                                                                                                  // 6050
              itemHeight,                                                                                              // 6051
              itemOffset,                                                                                              // 6052
              menuOffset,                                                                                              // 6053
              menuScroll,                                                                                              // 6054
              menuHeight,                                                                                              // 6055
              abovePage,                                                                                               // 6056
              belowPage                                                                                                // 6057
            ;                                                                                                          // 6058
                                                                                                                       // 6059
            $item       = $item || module.get.selectedItem();                                                          // 6060
            $menu       = $item.closest(selector.menu);                                                                // 6061
            hasActive   = ($item && $item.length > 0);                                                                 // 6062
            forceScroll = (forceScroll !== undefined)                                                                  // 6063
              ? forceScroll                                                                                            // 6064
              : false                                                                                                  // 6065
            ;                                                                                                          // 6066
            if($item && $menu.length > 0 && hasActive) {                                                               // 6067
              itemOffset = $item.position().top;                                                                       // 6068
                                                                                                                       // 6069
              $menu.addClass(className.loading);                                                                       // 6070
              menuScroll = $menu.scrollTop();                                                                          // 6071
              menuOffset = $menu.offset().top;                                                                         // 6072
              itemOffset = $item.offset().top;                                                                         // 6073
              offset     = menuScroll - menuOffset + itemOffset;                                                       // 6074
              if(!forceScroll) {                                                                                       // 6075
                menuHeight = $menu.height();                                                                           // 6076
                belowPage  = menuScroll + menuHeight < (offset + edgeTolerance);                                       // 6077
                abovePage  = ((offset - edgeTolerance) < menuScroll);                                                  // 6078
              }                                                                                                        // 6079
              module.debug('Scrolling to active item', offset);                                                        // 6080
              if(forceScroll || abovePage || belowPage) {                                                              // 6081
                $menu.scrollTop(offset);                                                                               // 6082
              }                                                                                                        // 6083
              $menu.removeClass(className.loading);                                                                    // 6084
            }                                                                                                          // 6085
          },                                                                                                           // 6086
          text: function(text) {                                                                                       // 6087
            if(settings.action !== 'select') {                                                                         // 6088
              if(settings.action == 'combo') {                                                                         // 6089
                module.debug('Changing combo button text', text, $combo);                                              // 6090
                if(settings.preserveHTML) {                                                                            // 6091
                  $combo.html(text);                                                                                   // 6092
                }                                                                                                      // 6093
                else {                                                                                                 // 6094
                  $combo.text(text);                                                                                   // 6095
                }                                                                                                      // 6096
              }                                                                                                        // 6097
              else {                                                                                                   // 6098
                if(text !== module.get.placeholderText()) {                                                            // 6099
                  $text.removeClass(className.placeholder);                                                            // 6100
                }                                                                                                      // 6101
                module.debug('Changing text', text, $text);                                                            // 6102
                $text                                                                                                  // 6103
                  .removeClass(className.filtered)                                                                     // 6104
                ;                                                                                                      // 6105
                if(settings.preserveHTML) {                                                                            // 6106
                  $text.html(text);                                                                                    // 6107
                }                                                                                                      // 6108
                else {                                                                                                 // 6109
                  $text.text(text);                                                                                    // 6110
                }                                                                                                      // 6111
              }                                                                                                        // 6112
            }                                                                                                          // 6113
          },                                                                                                           // 6114
          selectedLetter: function(letter) {                                                                           // 6115
            var                                                                                                        // 6116
              $selectedItem         = $item.filter('.' + className.selected),                                          // 6117
              alreadySelectedLetter = $selectedItem.length > 0 && module.has.firstLetter($selectedItem, letter),       // 6118
              $nextValue            = false,                                                                           // 6119
              $nextItem                                                                                                // 6120
            ;                                                                                                          // 6121
            // check next of same letter                                                                               // 6122
            if(alreadySelectedLetter) {                                                                                // 6123
              $nextItem = $selectedItem.nextAll($item).eq(0);                                                          // 6124
              if( module.has.firstLetter($nextItem, letter) ) {                                                        // 6125
                $nextValue  = $nextItem;                                                                               // 6126
              }                                                                                                        // 6127
            }                                                                                                          // 6128
            // check all values                                                                                        // 6129
            if(!$nextValue) {                                                                                          // 6130
              $item                                                                                                    // 6131
                .each(function(){                                                                                      // 6132
                  if(module.has.firstLetter($(this), letter)) {                                                        // 6133
                    $nextValue = $(this);                                                                              // 6134
                    return false;                                                                                      // 6135
                  }                                                                                                    // 6136
                })                                                                                                     // 6137
              ;                                                                                                        // 6138
            }                                                                                                          // 6139
            // set next value                                                                                          // 6140
            if($nextValue) {                                                                                           // 6141
              module.verbose('Scrolling to next value with letter', letter);                                           // 6142
              module.set.scrollPosition($nextValue);                                                                   // 6143
              $selectedItem.removeClass(className.selected);                                                           // 6144
              $nextValue.addClass(className.selected);                                                                 // 6145
            }                                                                                                          // 6146
          },                                                                                                           // 6147
          direction: function($menu) {                                                                                 // 6148
            if(settings.direction == 'auto') {                                                                         // 6149
              if(module.is.onScreen($menu)) {                                                                          // 6150
                module.remove.upward($menu);                                                                           // 6151
              }                                                                                                        // 6152
              else {                                                                                                   // 6153
                module.set.upward($menu);                                                                              // 6154
              }                                                                                                        // 6155
            }                                                                                                          // 6156
            else if(settings.direction == 'upward') {                                                                  // 6157
              module.set.upward($menu);                                                                                // 6158
            }                                                                                                          // 6159
          },                                                                                                           // 6160
          upward: function($menu) {                                                                                    // 6161
            var $element = $menu || $module;                                                                           // 6162
            $element.addClass(className.upward);                                                                       // 6163
          },                                                                                                           // 6164
          value: function(value, text, $selected) {                                                                    // 6165
            var                                                                                                        // 6166
              hasInput     = ($input.length > 0),                                                                      // 6167
              isAddition   = !module.has.value(value),                                                                 // 6168
              currentValue = module.get.values(),                                                                      // 6169
              stringValue  = (value !== undefined)                                                                     // 6170
                ? String(value)                                                                                        // 6171
                : value,                                                                                               // 6172
              newValue                                                                                                 // 6173
            ;                                                                                                          // 6174
            if(hasInput) {                                                                                             // 6175
              if(stringValue == currentValue) {                                                                        // 6176
                module.verbose('Skipping value update already same value', value, currentValue);                       // 6177
                if(!module.is.initialLoad()) {                                                                         // 6178
                  return;                                                                                              // 6179
                }                                                                                                      // 6180
              }                                                                                                        // 6181
                                                                                                                       // 6182
              if( module.is.single() && module.has.selectInput() && module.can.extendSelect() ) {                      // 6183
                module.debug('Adding user option', value);                                                             // 6184
                module.add.optionValue(value);                                                                         // 6185
              }                                                                                                        // 6186
              module.debug('Updating input value', value, currentValue);                                               // 6187
              internalChange = true;                                                                                   // 6188
              $input                                                                                                   // 6189
                .val(value)                                                                                            // 6190
              ;                                                                                                        // 6191
              if(settings.fireOnInit === false && module.is.initialLoad()) {                                           // 6192
                module.debug('Input native change event ignored on initial load');                                     // 6193
              }                                                                                                        // 6194
              else {                                                                                                   // 6195
                $input.trigger('change');                                                                              // 6196
              }                                                                                                        // 6197
              internalChange = false;                                                                                  // 6198
            }                                                                                                          // 6199
            else {                                                                                                     // 6200
              module.verbose('Storing value in metadata', value, $input);                                              // 6201
              if(value !== currentValue) {                                                                             // 6202
                $module.data(metadata.value, stringValue);                                                             // 6203
              }                                                                                                        // 6204
            }                                                                                                          // 6205
            if(settings.fireOnInit === false && module.is.initialLoad()) {                                             // 6206
              module.verbose('No callback on initial load', settings.onChange);                                        // 6207
            }                                                                                                          // 6208
            else {                                                                                                     // 6209
              settings.onChange.call(element, value, text, $selected);                                                 // 6210
            }                                                                                                          // 6211
          },                                                                                                           // 6212
          active: function() {                                                                                         // 6213
            $module                                                                                                    // 6214
              .addClass(className.active)                                                                              // 6215
            ;                                                                                                          // 6216
          },                                                                                                           // 6217
          multiple: function() {                                                                                       // 6218
            $module.addClass(className.multiple);                                                                      // 6219
          },                                                                                                           // 6220
          visible: function() {                                                                                        // 6221
            $module.addClass(className.visible);                                                                       // 6222
          },                                                                                                           // 6223
          exactly: function(value, $selectedItem) {                                                                    // 6224
            module.debug('Setting selected to exact values');                                                          // 6225
            module.clear();                                                                                            // 6226
            module.set.selected(value, $selectedItem);                                                                 // 6227
          },                                                                                                           // 6228
          selected: function(value, $selectedItem) {                                                                   // 6229
            var                                                                                                        // 6230
              isMultiple = module.is.multiple(),                                                                       // 6231
              $userSelectedItem                                                                                        // 6232
            ;                                                                                                          // 6233
            $selectedItem = (settings.allowAdditions)                                                                  // 6234
              ? $selectedItem || module.get.itemWithAdditions(value)                                                   // 6235
              : $selectedItem || module.get.item(value)                                                                // 6236
            ;                                                                                                          // 6237
            if(!$selectedItem) {                                                                                       // 6238
              return;                                                                                                  // 6239
            }                                                                                                          // 6240
            module.debug('Setting selected menu item to', $selectedItem);                                              // 6241
            if(module.is.single()) {                                                                                   // 6242
              module.remove.activeItem();                                                                              // 6243
              module.remove.selectedItem();                                                                            // 6244
            }                                                                                                          // 6245
            else if(settings.useLabels) {                                                                              // 6246
              module.remove.selectedItem();                                                                            // 6247
            }                                                                                                          // 6248
            // select each item                                                                                        // 6249
            $selectedItem                                                                                              // 6250
              .each(function() {                                                                                       // 6251
                var                                                                                                    // 6252
                  $selected      = $(this),                                                                            // 6253
                  selectedText   = module.get.choiceText($selected),                                                   // 6254
                  selectedValue  = module.get.choiceValue($selected, selectedText),                                    // 6255
                                                                                                                       // 6256
                  isFiltered     = $selected.hasClass(className.filtered),                                             // 6257
                  isActive       = $selected.hasClass(className.active),                                               // 6258
                  isUserValue    = $selected.hasClass(className.addition),                                             // 6259
                  shouldAnimate  = (isMultiple && $selectedItem.length == 1)                                           // 6260
                ;                                                                                                      // 6261
                if(isMultiple) {                                                                                       // 6262
                  if(!isActive || isUserValue) {                                                                       // 6263
                    if(settings.apiSettings && settings.saveRemoteData) {                                              // 6264
                      module.save.remoteData(selectedText, selectedValue);                                             // 6265
                    }                                                                                                  // 6266
                    if(settings.useLabels) {                                                                           // 6267
                      module.add.value(selectedValue, selectedText, $selected);                                        // 6268
                      module.add.label(selectedValue, selectedText, shouldAnimate);                                    // 6269
                      module.set.activeItem($selected);                                                                // 6270
                      module.filterActive();                                                                           // 6271
                      module.select.nextAvailable($selectedItem);                                                      // 6272
                    }                                                                                                  // 6273
                    else {                                                                                             // 6274
                      module.add.value(selectedValue, selectedText, $selected);                                        // 6275
                      module.set.text(module.add.variables(message.count));                                            // 6276
                      module.set.activeItem($selected);                                                                // 6277
                    }                                                                                                  // 6278
                  }                                                                                                    // 6279
                  else if(!isFiltered) {                                                                               // 6280
                    module.debug('Selected active value, removing label');                                             // 6281
                    module.remove.selected(selectedValue);                                                             // 6282
                  }                                                                                                    // 6283
                }                                                                                                      // 6284
                else {                                                                                                 // 6285
                  if(settings.apiSettings && settings.saveRemoteData) {                                                // 6286
                    module.save.remoteData(selectedText, selectedValue);                                               // 6287
                  }                                                                                                    // 6288
                  module.set.text(selectedText);                                                                       // 6289
                  module.set.value(selectedValue, selectedText, $selected);                                            // 6290
                  $selected                                                                                            // 6291
                    .addClass(className.active)                                                                        // 6292
                    .addClass(className.selected)                                                                      // 6293
                  ;                                                                                                    // 6294
                }                                                                                                      // 6295
              })                                                                                                       // 6296
            ;                                                                                                          // 6297
          }                                                                                                            // 6298
        },                                                                                                             // 6299
                                                                                                                       // 6300
        add: {                                                                                                         // 6301
          label: function(value, text, shouldAnimate) {                                                                // 6302
            var                                                                                                        // 6303
              $next  = module.is.searchSelection()                                                                     // 6304
                ? $search                                                                                              // 6305
                : $text,                                                                                               // 6306
              $label                                                                                                   // 6307
            ;                                                                                                          // 6308
            $label =  $('<a />')                                                                                       // 6309
              .addClass(className.label)                                                                               // 6310
              .attr('data-value', value)                                                                               // 6311
              .html(templates.label(value, text))                                                                      // 6312
            ;                                                                                                          // 6313
            $label = settings.onLabelCreate.call($label, value, text);                                                 // 6314
                                                                                                                       // 6315
            if(module.has.label(value)) {                                                                              // 6316
              module.debug('Label already exists, skipping', value);                                                   // 6317
              return;                                                                                                  // 6318
            }                                                                                                          // 6319
            if(settings.label.variation) {                                                                             // 6320
              $label.addClass(settings.label.variation);                                                               // 6321
            }                                                                                                          // 6322
            if(shouldAnimate === true) {                                                                               // 6323
              module.debug('Animating in label', $label);                                                              // 6324
              $label                                                                                                   // 6325
                .addClass(className.hidden)                                                                            // 6326
                .insertBefore($next)                                                                                   // 6327
                .transition(settings.label.transition, settings.label.duration)                                        // 6328
              ;                                                                                                        // 6329
            }                                                                                                          // 6330
            else {                                                                                                     // 6331
              module.debug('Adding selection label', $label);                                                          // 6332
              $label                                                                                                   // 6333
                .insertBefore($next)                                                                                   // 6334
              ;                                                                                                        // 6335
            }                                                                                                          // 6336
          },                                                                                                           // 6337
          message: function(message) {                                                                                 // 6338
            var                                                                                                        // 6339
              $message = $menu.children(selector.message),                                                             // 6340
              html     = settings.templates.message(module.add.variables(message))                                     // 6341
            ;                                                                                                          // 6342
            if($message.length > 0) {                                                                                  // 6343
              $message                                                                                                 // 6344
                .html(html)                                                                                            // 6345
              ;                                                                                                        // 6346
            }                                                                                                          // 6347
            else {                                                                                                     // 6348
              $message = $('<div/>')                                                                                   // 6349
                .html(html)                                                                                            // 6350
                .addClass(className.message)                                                                           // 6351
                .appendTo($menu)                                                                                       // 6352
              ;                                                                                                        // 6353
            }                                                                                                          // 6354
          },                                                                                                           // 6355
          optionValue: function(value) {                                                                               // 6356
            var                                                                                                        // 6357
              $option   = $input.find('option[value="' + value + '"]'),                                                // 6358
              hasOption = ($option.length > 0)                                                                         // 6359
            ;                                                                                                          // 6360
            if(hasOption) {                                                                                            // 6361
              return;                                                                                                  // 6362
            }                                                                                                          // 6363
            // temporarily disconnect observer                                                                         // 6364
            if(selectObserver) {                                                                                       // 6365
              selectObserver.disconnect();                                                                             // 6366
              module.verbose('Temporarily disconnecting mutation observer', value);                                    // 6367
            }                                                                                                          // 6368
            if( module.is.single() ) {                                                                                 // 6369
              module.verbose('Removing previous user addition');                                                       // 6370
              $input.find('option.' + className.addition).remove();                                                    // 6371
            }                                                                                                          // 6372
            $('<option/>')                                                                                             // 6373
              .prop('value', value)                                                                                    // 6374
              .addClass(className.addition)                                                                            // 6375
              .html(value)                                                                                             // 6376
              .appendTo($input)                                                                                        // 6377
            ;                                                                                                          // 6378
            module.verbose('Adding user addition as an <option>', value);                                              // 6379
            if(selectObserver) {                                                                                       // 6380
              selectObserver.observe($input[0], {                                                                      // 6381
                childList : true,                                                                                      // 6382
                subtree   : true                                                                                       // 6383
              });                                                                                                      // 6384
            }                                                                                                          // 6385
          },                                                                                                           // 6386
          userSuggestion: function(value) {                                                                            // 6387
            var                                                                                                        // 6388
              $addition         = $menu.children(selector.addition),                                                   // 6389
              $existingItem     = module.get.item(value),                                                              // 6390
              alreadyHasValue   = $existingItem && $existingItem.not(selector.addition).length,                        // 6391
              hasUserSuggestion = $addition.length > 0,                                                                // 6392
              html                                                                                                     // 6393
            ;                                                                                                          // 6394
            if(settings.useLabels && module.has.maxSelections()) {                                                     // 6395
              return;                                                                                                  // 6396
            }                                                                                                          // 6397
            if(value === '' || alreadyHasValue) {                                                                      // 6398
              $addition.remove();                                                                                      // 6399
              return;                                                                                                  // 6400
            }                                                                                                          // 6401
            $item                                                                                                      // 6402
              .removeClass(className.selected)                                                                         // 6403
            ;                                                                                                          // 6404
            if(hasUserSuggestion) {                                                                                    // 6405
              html = settings.templates.addition( module.add.variables(message.addResult, value) );                    // 6406
              $addition                                                                                                // 6407
                .html(html)                                                                                            // 6408
                .attr('data-' + metadata.value, value)                                                                 // 6409
                .attr('data-' + metadata.text, value)                                                                  // 6410
                .removeClass(className.filtered)                                                                       // 6411
                .addClass(className.selected)                                                                          // 6412
              ;                                                                                                        // 6413
              module.verbose('Replacing user suggestion with new value', $addition);                                   // 6414
            }                                                                                                          // 6415
            else {                                                                                                     // 6416
              $addition = module.create.userChoice(value);                                                             // 6417
              $addition                                                                                                // 6418
                .prependTo($menu)                                                                                      // 6419
                .addClass(className.selected)                                                                          // 6420
              ;                                                                                                        // 6421
              module.verbose('Adding item choice to menu corresponding with user choice addition', $addition);         // 6422
            }                                                                                                          // 6423
          },                                                                                                           // 6424
          variables: function(message, term) {                                                                         // 6425
            var                                                                                                        // 6426
              hasCount    = (message.search('{count}') !== -1),                                                        // 6427
              hasMaxCount = (message.search('{maxCount}') !== -1),                                                     // 6428
              hasTerm     = (message.search('{term}') !== -1),                                                         // 6429
              values,                                                                                                  // 6430
              count,                                                                                                   // 6431
              query                                                                                                    // 6432
            ;                                                                                                          // 6433
            module.verbose('Adding templated variables to message', message);                                          // 6434
            if(hasCount) {                                                                                             // 6435
              count  = module.get.selectionCount();                                                                    // 6436
              message = message.replace('{count}', count);                                                             // 6437
            }                                                                                                          // 6438
            if(hasMaxCount) {                                                                                          // 6439
              count  = module.get.selectionCount();                                                                    // 6440
              message = message.replace('{maxCount}', settings.maxSelections);                                         // 6441
            }                                                                                                          // 6442
            if(hasTerm) {                                                                                              // 6443
              query   = term || module.get.query();                                                                    // 6444
              message = message.replace('{term}', query);                                                              // 6445
            }                                                                                                          // 6446
            return message;                                                                                            // 6447
          },                                                                                                           // 6448
          value: function(addedValue, addedText, $selectedItem) {                                                      // 6449
            var                                                                                                        // 6450
              currentValue = module.get.values(),                                                                      // 6451
              newValue                                                                                                 // 6452
            ;                                                                                                          // 6453
            if(addedValue === '') {                                                                                    // 6454
              module.debug('Cannot select blank values from multiselect');                                             // 6455
              return;                                                                                                  // 6456
            }                                                                                                          // 6457
            // extend current array                                                                                    // 6458
            if($.isArray(currentValue)) {                                                                              // 6459
              newValue = currentValue.concat([addedValue]);                                                            // 6460
              newValue = module.get.uniqueArray(newValue);                                                             // 6461
            }                                                                                                          // 6462
            else {                                                                                                     // 6463
              newValue = [addedValue];                                                                                 // 6464
            }                                                                                                          // 6465
            // add values                                                                                              // 6466
            if( module.has.selectInput() ) {                                                                           // 6467
              if(module.can.extendSelect()) {                                                                          // 6468
                module.debug('Adding value to select', addedValue, newValue, $input);                                  // 6469
                module.add.optionValue(addedValue);                                                                    // 6470
              }                                                                                                        // 6471
            }                                                                                                          // 6472
            else {                                                                                                     // 6473
              newValue = newValue.join(settings.delimiter);                                                            // 6474
              module.debug('Setting hidden input to delimited value', newValue, $input);                               // 6475
            }                                                                                                          // 6476
                                                                                                                       // 6477
            if(settings.fireOnInit === false && module.is.initialLoad()) {                                             // 6478
              module.verbose('Skipping onadd callback on initial load', settings.onAdd);                               // 6479
            }                                                                                                          // 6480
            else {                                                                                                     // 6481
              settings.onAdd.call(element, addedValue, addedText, $selectedItem);                                      // 6482
            }                                                                                                          // 6483
            module.set.value(newValue, addedValue, addedText, $selectedItem);                                          // 6484
            module.check.maxSelections();                                                                              // 6485
          }                                                                                                            // 6486
        },                                                                                                             // 6487
                                                                                                                       // 6488
        remove: {                                                                                                      // 6489
          active: function() {                                                                                         // 6490
            $module.removeClass(className.active);                                                                     // 6491
          },                                                                                                           // 6492
          activeLabel: function() {                                                                                    // 6493
            $module.find(selector.label).removeClass(className.active);                                                // 6494
          },                                                                                                           // 6495
          loading: function() {                                                                                        // 6496
            $module.removeClass(className.loading);                                                                    // 6497
          },                                                                                                           // 6498
          initialLoad: function() {                                                                                    // 6499
            initialLoad = false;                                                                                       // 6500
          },                                                                                                           // 6501
          upward: function($menu) {                                                                                    // 6502
            var $element = $menu || $module;                                                                           // 6503
            $element.removeClass(className.upward);                                                                    // 6504
          },                                                                                                           // 6505
          visible: function() {                                                                                        // 6506
            $module.removeClass(className.visible);                                                                    // 6507
          },                                                                                                           // 6508
          activeItem: function() {                                                                                     // 6509
            $item.removeClass(className.active);                                                                       // 6510
          },                                                                                                           // 6511
          filteredItem: function() {                                                                                   // 6512
            if(settings.useLabels && module.has.maxSelections() ) {                                                    // 6513
              return;                                                                                                  // 6514
            }                                                                                                          // 6515
            if(settings.useLabels && module.is.multiple()) {                                                           // 6516
              $item.not('.' + className.active).removeClass(className.filtered);                                       // 6517
            }                                                                                                          // 6518
            else {                                                                                                     // 6519
              $item.removeClass(className.filtered);                                                                   // 6520
            }                                                                                                          // 6521
          },                                                                                                           // 6522
          optionValue: function(value) {                                                                               // 6523
            var                                                                                                        // 6524
              $option   = $input.find('option[value="' + value + '"]'),                                                // 6525
              hasOption = ($option.length > 0)                                                                         // 6526
            ;                                                                                                          // 6527
            if(!hasOption || !$option.hasClass(className.addition)) {                                                  // 6528
              return;                                                                                                  // 6529
            }                                                                                                          // 6530
            // temporarily disconnect observer                                                                         // 6531
            if(selectObserver) {                                                                                       // 6532
              selectObserver.disconnect();                                                                             // 6533
              module.verbose('Temporarily disconnecting mutation observer', value);                                    // 6534
            }                                                                                                          // 6535
            $option.remove();                                                                                          // 6536
            module.verbose('Removing user addition as an <option>', value);                                            // 6537
            if(selectObserver) {                                                                                       // 6538
              selectObserver.observe($input[0], {                                                                      // 6539
                childList : true,                                                                                      // 6540
                subtree   : true                                                                                       // 6541
              });                                                                                                      // 6542
            }                                                                                                          // 6543
          },                                                                                                           // 6544
          message: function() {                                                                                        // 6545
            $menu.children(selector.message).remove();                                                                 // 6546
          },                                                                                                           // 6547
          searchTerm: function() {                                                                                     // 6548
            module.verbose('Cleared search term');                                                                     // 6549
            $search.val('');                                                                                           // 6550
            module.set.filtered();                                                                                     // 6551
          },                                                                                                           // 6552
          selected: function(value, $selectedItem) {                                                                   // 6553
            $selectedItem = (settings.allowAdditions)                                                                  // 6554
              ? $selectedItem || module.get.itemWithAdditions(value)                                                   // 6555
              : $selectedItem || module.get.item(value)                                                                // 6556
            ;                                                                                                          // 6557
                                                                                                                       // 6558
            if(!$selectedItem) {                                                                                       // 6559
              return false;                                                                                            // 6560
            }                                                                                                          // 6561
                                                                                                                       // 6562
            $selectedItem                                                                                              // 6563
              .each(function() {                                                                                       // 6564
                var                                                                                                    // 6565
                  $selected     = $(this),                                                                             // 6566
                  selectedText  = module.get.choiceText($selected),                                                    // 6567
                  selectedValue = module.get.choiceValue($selected, selectedText)                                      // 6568
                ;                                                                                                      // 6569
                if(module.is.multiple()) {                                                                             // 6570
                  if(settings.useLabels) {                                                                             // 6571
                    module.remove.value(selectedValue, selectedText, $selected);                                       // 6572
                    module.remove.label(selectedValue);                                                                // 6573
                  }                                                                                                    // 6574
                  else {                                                                                               // 6575
                    module.remove.value(selectedValue, selectedText, $selected);                                       // 6576
                    if(module.get.selectionCount() === 0) {                                                            // 6577
                      module.set.placeholderText();                                                                    // 6578
                    }                                                                                                  // 6579
                    else {                                                                                             // 6580
                      module.set.text(module.add.variables(message.count));                                            // 6581
                    }                                                                                                  // 6582
                  }                                                                                                    // 6583
                }                                                                                                      // 6584
                else {                                                                                                 // 6585
                  module.remove.value(selectedValue, selectedText, $selected);                                         // 6586
                }                                                                                                      // 6587
                $selected                                                                                              // 6588
                  .removeClass(className.filtered)                                                                     // 6589
                  .removeClass(className.active)                                                                       // 6590
                ;                                                                                                      // 6591
                if(settings.useLabels) {                                                                               // 6592
                  $selected.removeClass(className.selected);                                                           // 6593
                }                                                                                                      // 6594
              })                                                                                                       // 6595
            ;                                                                                                          // 6596
          },                                                                                                           // 6597
          selectedItem: function() {                                                                                   // 6598
            $item.removeClass(className.selected);                                                                     // 6599
          },                                                                                                           // 6600
          value: function(removedValue, removedText, $removedItem) {                                                   // 6601
            var                                                                                                        // 6602
              values = module.get.values(),                                                                            // 6603
              newValue                                                                                                 // 6604
            ;                                                                                                          // 6605
            if( module.has.selectInput() ) {                                                                           // 6606
              module.verbose('Input is <select> removing selected option', removedValue);                              // 6607
              newValue = module.remove.arrayValue(removedValue, values);                                               // 6608
              module.remove.optionValue(removedValue);                                                                 // 6609
            }                                                                                                          // 6610
            else {                                                                                                     // 6611
              module.verbose('Removing from delimited values', removedValue);                                          // 6612
              newValue = module.remove.arrayValue(removedValue, values);                                               // 6613
              newValue = newValue.join(settings.delimiter);                                                            // 6614
            }                                                                                                          // 6615
            if(settings.fireOnInit === false && module.is.initialLoad()) {                                             // 6616
              module.verbose('No callback on initial load', settings.onRemove);                                        // 6617
            }                                                                                                          // 6618
            else {                                                                                                     // 6619
              settings.onRemove.call(element, removedValue, removedText, $removedItem);                                // 6620
            }                                                                                                          // 6621
            module.set.value(newValue, removedText, $removedItem);                                                     // 6622
            module.check.maxSelections();                                                                              // 6623
          },                                                                                                           // 6624
          arrayValue: function(removedValue, values) {                                                                 // 6625
            if( !$.isArray(values) ) {                                                                                 // 6626
              values = [values];                                                                                       // 6627
            }                                                                                                          // 6628
            values = $.grep(values, function(value){                                                                   // 6629
              return (removedValue != value);                                                                          // 6630
            });                                                                                                        // 6631
            module.verbose('Removed value from delimited string', removedValue, values);                               // 6632
            return values;                                                                                             // 6633
          },                                                                                                           // 6634
          label: function(value, shouldAnimate) {                                                                      // 6635
            var                                                                                                        // 6636
              $labels       = $module.find(selector.label),                                                            // 6637
              $removedLabel = $labels.filter('[data-value="' + value +'"]')                                            // 6638
            ;                                                                                                          // 6639
            module.verbose('Removing label', $removedLabel);                                                           // 6640
            $removedLabel.remove();                                                                                    // 6641
          },                                                                                                           // 6642
          activeLabels: function($activeLabels) {                                                                      // 6643
            $activeLabels = $activeLabels || $module.find(selector.label).filter('.' + className.active);              // 6644
            module.verbose('Removing active label selections', $activeLabels);                                         // 6645
            module.remove.labels($activeLabels);                                                                       // 6646
          },                                                                                                           // 6647
          labels: function($labels) {                                                                                  // 6648
            $labels = $labels || $module.find(selector.label);                                                         // 6649
            module.verbose('Removing labels', $labels);                                                                // 6650
            $labels                                                                                                    // 6651
              .each(function(){                                                                                        // 6652
                var                                                                                                    // 6653
                  value       = $(this).data(metadata.value),                                                          // 6654
                  stringValue = (value !== undefined)                                                                  // 6655
                    ? String(value)                                                                                    // 6656
                    : value,                                                                                           // 6657
                  isUserValue = module.is.userValue(stringValue)                                                       // 6658
                ;                                                                                                      // 6659
                if(isUserValue) {                                                                                      // 6660
                  module.remove.value(stringValue);                                                                    // 6661
                  module.remove.label(stringValue);                                                                    // 6662
                }                                                                                                      // 6663
                else {                                                                                                 // 6664
                  // selected will also remove label                                                                   // 6665
                  module.remove.selected(stringValue);                                                                 // 6666
                }                                                                                                      // 6667
              })                                                                                                       // 6668
            ;                                                                                                          // 6669
          },                                                                                                           // 6670
          tabbable: function() {                                                                                       // 6671
            if( module.has.search() ) {                                                                                // 6672
              module.debug('Searchable dropdown initialized');                                                         // 6673
              $search                                                                                                  // 6674
                .attr('tabindex', '-1')                                                                                // 6675
              ;                                                                                                        // 6676
              $menu                                                                                                    // 6677
                .attr('tabindex', '-1')                                                                                // 6678
              ;                                                                                                        // 6679
            }                                                                                                          // 6680
            else {                                                                                                     // 6681
              module.debug('Simple selection dropdown initialized');                                                   // 6682
              $module                                                                                                  // 6683
                .attr('tabindex', '-1')                                                                                // 6684
              ;                                                                                                        // 6685
              $menu                                                                                                    // 6686
                .attr('tabindex', '-1')                                                                                // 6687
              ;                                                                                                        // 6688
            }                                                                                                          // 6689
          }                                                                                                            // 6690
        },                                                                                                             // 6691
                                                                                                                       // 6692
        has: {                                                                                                         // 6693
          search: function() {                                                                                         // 6694
            return ($search.length > 0);                                                                               // 6695
          },                                                                                                           // 6696
          selectInput: function() {                                                                                    // 6697
            return ( $input.is('select') );                                                                            // 6698
          },                                                                                                           // 6699
          firstLetter: function($item, letter) {                                                                       // 6700
            var                                                                                                        // 6701
              text,                                                                                                    // 6702
              firstLetter                                                                                              // 6703
            ;                                                                                                          // 6704
            if(!$item || $item.length === 0 || typeof letter !== 'string') {                                           // 6705
              return false;                                                                                            // 6706
            }                                                                                                          // 6707
            text        = module.get.choiceText($item, false);                                                         // 6708
            letter      = letter.toLowerCase();                                                                        // 6709
            firstLetter = String(text).charAt(0).toLowerCase();                                                        // 6710
            return (letter == firstLetter);                                                                            // 6711
          },                                                                                                           // 6712
          input: function() {                                                                                          // 6713
            return ($input.length > 0);                                                                                // 6714
          },                                                                                                           // 6715
          items: function() {                                                                                          // 6716
            return ($item.length > 0);                                                                                 // 6717
          },                                                                                                           // 6718
          menu: function() {                                                                                           // 6719
            return ($menu.length > 0);                                                                                 // 6720
          },                                                                                                           // 6721
          message: function() {                                                                                        // 6722
            return ($menu.children(selector.message).length !== 0);                                                    // 6723
          },                                                                                                           // 6724
          label: function(value) {                                                                                     // 6725
            var                                                                                                        // 6726
              $labels = $module.find(selector.label)                                                                   // 6727
            ;                                                                                                          // 6728
            return ($labels.filter('[data-value="' + value +'"]').length > 0);                                         // 6729
          },                                                                                                           // 6730
          maxSelections: function() {                                                                                  // 6731
            return (settings.maxSelections && module.get.selectionCount() >= settings.maxSelections);                  // 6732
          },                                                                                                           // 6733
          allResultsFiltered: function() {                                                                             // 6734
            return ($item.filter(selector.unselectable).length === $item.length);                                      // 6735
          },                                                                                                           // 6736
          query: function() {                                                                                          // 6737
            return (module.get.query() !== '');                                                                        // 6738
          },                                                                                                           // 6739
          value: function(value) {                                                                                     // 6740
            var                                                                                                        // 6741
              values   = module.get.values(),                                                                          // 6742
              hasValue = $.isArray(values)                                                                             // 6743
               ? values && ($.inArray(value, values) !== -1)                                                           // 6744
               : (values == value)                                                                                     // 6745
            ;                                                                                                          // 6746
            return (hasValue)                                                                                          // 6747
              ? true                                                                                                   // 6748
              : false                                                                                                  // 6749
            ;                                                                                                          // 6750
          }                                                                                                            // 6751
        },                                                                                                             // 6752
                                                                                                                       // 6753
        is: {                                                                                                          // 6754
          active: function() {                                                                                         // 6755
            return $module.hasClass(className.active);                                                                 // 6756
          },                                                                                                           // 6757
          alreadySetup: function() {                                                                                   // 6758
            return ($module.is('select') && $module.parent(selector.dropdown).length > 0  && $module.prev().length === 0);
          },                                                                                                           // 6760
          animating: function($subMenu) {                                                                              // 6761
            return ($subMenu)                                                                                          // 6762
              ? $subMenu.transition && $subMenu.transition('is animating')                                             // 6763
              : $menu.transition    && $menu.transition('is animating')                                                // 6764
            ;                                                                                                          // 6765
          },                                                                                                           // 6766
          disabled: function() {                                                                                       // 6767
            return $module.hasClass(className.disabled);                                                               // 6768
          },                                                                                                           // 6769
          focused: function() {                                                                                        // 6770
            return (document.activeElement === $module[0]);                                                            // 6771
          },                                                                                                           // 6772
          focusedOnSearch: function() {                                                                                // 6773
            return (document.activeElement === $search[0]);                                                            // 6774
          },                                                                                                           // 6775
          allFiltered: function() {                                                                                    // 6776
            return( (module.is.multiple() || module.has.search()) && !module.has.message() && module.has.allResultsFiltered() );
          },                                                                                                           // 6778
          hidden: function($subMenu) {                                                                                 // 6779
            return !module.is.visible($subMenu);                                                                       // 6780
          },                                                                                                           // 6781
          initialLoad: function() {                                                                                    // 6782
            return initialLoad;                                                                                        // 6783
          },                                                                                                           // 6784
          onScreen: function($subMenu) {                                                                               // 6785
            var                                                                                                        // 6786
              $currentMenu   = $subMenu || $menu,                                                                      // 6787
              canOpenDownward = true,                                                                                  // 6788
              onScreen = {},                                                                                           // 6789
              calculations                                                                                             // 6790
            ;                                                                                                          // 6791
            $currentMenu.addClass(className.loading);                                                                  // 6792
            calculations = {                                                                                           // 6793
              context: {                                                                                               // 6794
                scrollTop : $context.scrollTop(),                                                                      // 6795
                height    : $context.outerHeight()                                                                     // 6796
              },                                                                                                       // 6797
              menu : {                                                                                                 // 6798
                offset: $currentMenu.offset(),                                                                         // 6799
                height: $currentMenu.outerHeight()                                                                     // 6800
              }                                                                                                        // 6801
            };                                                                                                         // 6802
            onScreen = {                                                                                               // 6803
              above : (calculations.context.scrollTop) <= calculations.menu.offset.top - calculations.menu.height,     // 6804
              below : (calculations.context.scrollTop + calculations.context.height) >= calculations.menu.offset.top + calculations.menu.height
            };                                                                                                         // 6806
            if(onScreen.below) {                                                                                       // 6807
              module.verbose('Dropdown can fit in context downward', onScreen);                                        // 6808
              canOpenDownward = true;                                                                                  // 6809
            }                                                                                                          // 6810
            else if(!onScreen.below && !onScreen.above) {                                                              // 6811
              module.verbose('Dropdown cannot fit in either direction, favoring downward', onScreen);                  // 6812
              canOpenDownward = true;                                                                                  // 6813
            }                                                                                                          // 6814
            else {                                                                                                     // 6815
              module.verbose('Dropdown cannot fit below, opening upward', onScreen);                                   // 6816
              canOpenDownward = false;                                                                                 // 6817
            }                                                                                                          // 6818
            $currentMenu.removeClass(className.loading);                                                               // 6819
            return canOpenDownward;                                                                                    // 6820
          },                                                                                                           // 6821
          inObject: function(needle, object) {                                                                         // 6822
            var                                                                                                        // 6823
              found = false                                                                                            // 6824
            ;                                                                                                          // 6825
            $.each(object, function(index, property) {                                                                 // 6826
              if(property == needle) {                                                                                 // 6827
                found = true;                                                                                          // 6828
                return true;                                                                                           // 6829
              }                                                                                                        // 6830
            });                                                                                                        // 6831
            return found;                                                                                              // 6832
          },                                                                                                           // 6833
          multiple: function() {                                                                                       // 6834
            return $module.hasClass(className.multiple);                                                               // 6835
          },                                                                                                           // 6836
          single: function() {                                                                                         // 6837
            return !module.is.multiple();                                                                              // 6838
          },                                                                                                           // 6839
          selectMutation: function(mutations) {                                                                        // 6840
            var                                                                                                        // 6841
              selectChanged = false                                                                                    // 6842
            ;                                                                                                          // 6843
            $.each(mutations, function(index, mutation) {                                                              // 6844
              if(mutation.target && $(mutation.target).is('select')) {                                                 // 6845
                selectChanged = true;                                                                                  // 6846
                return true;                                                                                           // 6847
              }                                                                                                        // 6848
            });                                                                                                        // 6849
            return selectChanged;                                                                                      // 6850
          },                                                                                                           // 6851
          search: function() {                                                                                         // 6852
            return $module.hasClass(className.search);                                                                 // 6853
          },                                                                                                           // 6854
          searchSelection: function() {                                                                                // 6855
            return ( module.has.search() && $search.parent(selector.dropdown).length === 1 );                          // 6856
          },                                                                                                           // 6857
          selection: function() {                                                                                      // 6858
            return $module.hasClass(className.selection);                                                              // 6859
          },                                                                                                           // 6860
          userValue: function(value) {                                                                                 // 6861
            return ($.inArray(value, module.get.userValues()) !== -1);                                                 // 6862
          },                                                                                                           // 6863
          upward: function($menu) {                                                                                    // 6864
            var $element = $menu || $module;                                                                           // 6865
            return $element.hasClass(className.upward);                                                                // 6866
          },                                                                                                           // 6867
          visible: function($subMenu) {                                                                                // 6868
            return ($subMenu)                                                                                          // 6869
              ? $subMenu.hasClass(className.visible)                                                                   // 6870
              : $menu.hasClass(className.visible)                                                                      // 6871
            ;                                                                                                          // 6872
          }                                                                                                            // 6873
        },                                                                                                             // 6874
                                                                                                                       // 6875
        can: {                                                                                                         // 6876
          activate: function($item) {                                                                                  // 6877
            if(settings.useLabels) {                                                                                   // 6878
              return true;                                                                                             // 6879
            }                                                                                                          // 6880
            if(!module.has.maxSelections()) {                                                                          // 6881
              return true;                                                                                             // 6882
            }                                                                                                          // 6883
            if(module.has.maxSelections() && $item.hasClass(className.active)) {                                       // 6884
              return true;                                                                                             // 6885
            }                                                                                                          // 6886
            return false;                                                                                              // 6887
          },                                                                                                           // 6888
          click: function() {                                                                                          // 6889
            return (hasTouch || settings.on == 'click');                                                               // 6890
          },                                                                                                           // 6891
          extendSelect: function() {                                                                                   // 6892
            return settings.allowAdditions || settings.apiSettings;                                                    // 6893
          },                                                                                                           // 6894
          show: function() {                                                                                           // 6895
            return !module.is.disabled() && (module.has.items() || module.has.message());                              // 6896
          },                                                                                                           // 6897
          useAPI: function() {                                                                                         // 6898
            return $.fn.api !== undefined;                                                                             // 6899
          }                                                                                                            // 6900
        },                                                                                                             // 6901
                                                                                                                       // 6902
        animate: {                                                                                                     // 6903
          show: function(callback, $subMenu) {                                                                         // 6904
            var                                                                                                        // 6905
              $currentMenu = $subMenu || $menu,                                                                        // 6906
              start = ($subMenu)                                                                                       // 6907
                ? function() {}                                                                                        // 6908
                : function() {                                                                                         // 6909
                  module.hideSubMenus();                                                                               // 6910
                  module.hideOthers();                                                                                 // 6911
                  module.set.active();                                                                                 // 6912
                },                                                                                                     // 6913
              transition                                                                                               // 6914
            ;                                                                                                          // 6915
            callback = $.isFunction(callback)                                                                          // 6916
              ? callback                                                                                               // 6917
              : function(){}                                                                                           // 6918
            ;                                                                                                          // 6919
            module.verbose('Doing menu show animation', $currentMenu);                                                 // 6920
            module.set.direction($subMenu);                                                                            // 6921
            transition = module.get.transition($subMenu);                                                              // 6922
            if( module.is.selection() ) {                                                                              // 6923
              module.set.scrollPosition(module.get.selectedItem(), true);                                              // 6924
            }                                                                                                          // 6925
            if( module.is.hidden($currentMenu) || module.is.animating($currentMenu) ) {                                // 6926
              if(transition == 'none') {                                                                               // 6927
                start();                                                                                               // 6928
                $currentMenu.transition('show');                                                                       // 6929
                callback.call(element);                                                                                // 6930
              }                                                                                                        // 6931
              else if($.fn.transition !== undefined && $module.transition('is supported')) {                           // 6932
                $currentMenu                                                                                           // 6933
                  .transition({                                                                                        // 6934
                    animation  : transition + ' in',                                                                   // 6935
                    debug      : settings.debug,                                                                       // 6936
                    verbose    : settings.verbose,                                                                     // 6937
                    duration   : settings.duration,                                                                    // 6938
                    queue      : true,                                                                                 // 6939
                    onStart    : start,                                                                                // 6940
                    onComplete : function() {                                                                          // 6941
                      callback.call(element);                                                                          // 6942
                    }                                                                                                  // 6943
                  })                                                                                                   // 6944
                ;                                                                                                      // 6945
              }                                                                                                        // 6946
              else {                                                                                                   // 6947
                module.error(error.noTransition, transition);                                                          // 6948
              }                                                                                                        // 6949
            }                                                                                                          // 6950
          },                                                                                                           // 6951
          hide: function(callback, $subMenu) {                                                                         // 6952
            var                                                                                                        // 6953
              $currentMenu = $subMenu || $menu,                                                                        // 6954
              duration = ($subMenu)                                                                                    // 6955
                ? (settings.duration * 0.9)                                                                            // 6956
                : settings.duration,                                                                                   // 6957
              start = ($subMenu)                                                                                       // 6958
                ? function() {}                                                                                        // 6959
                : function() {                                                                                         // 6960
                  if( module.can.click() ) {                                                                           // 6961
                    module.unbind.intent();                                                                            // 6962
                  }                                                                                                    // 6963
                  module.remove.active();                                                                              // 6964
                },                                                                                                     // 6965
              transition = module.get.transition($subMenu)                                                             // 6966
            ;                                                                                                          // 6967
            callback = $.isFunction(callback)                                                                          // 6968
              ? callback                                                                                               // 6969
              : function(){}                                                                                           // 6970
            ;                                                                                                          // 6971
            if( module.is.visible($currentMenu) || module.is.animating($currentMenu) ) {                               // 6972
              module.verbose('Doing menu hide animation', $currentMenu);                                               // 6973
                                                                                                                       // 6974
              if(transition == 'none') {                                                                               // 6975
                start();                                                                                               // 6976
                $currentMenu.transition('hide');                                                                       // 6977
                callback.call(element);                                                                                // 6978
              }                                                                                                        // 6979
              else if($.fn.transition !== undefined && $module.transition('is supported')) {                           // 6980
                $currentMenu                                                                                           // 6981
                  .transition({                                                                                        // 6982
                    animation  : transition + ' out',                                                                  // 6983
                    duration   : settings.duration,                                                                    // 6984
                    debug      : settings.debug,                                                                       // 6985
                    verbose    : settings.verbose,                                                                     // 6986
                    queue      : true,                                                                                 // 6987
                    onStart    : start,                                                                                // 6988
                    onComplete : function() {                                                                          // 6989
                      if(settings.direction == 'auto') {                                                               // 6990
                        module.remove.upward($subMenu);                                                                // 6991
                      }                                                                                                // 6992
                      callback.call(element);                                                                          // 6993
                    }                                                                                                  // 6994
                  })                                                                                                   // 6995
                ;                                                                                                      // 6996
              }                                                                                                        // 6997
              else {                                                                                                   // 6998
                module.error(error.transition);                                                                        // 6999
              }                                                                                                        // 7000
            }                                                                                                          // 7001
          }                                                                                                            // 7002
        },                                                                                                             // 7003
                                                                                                                       // 7004
        hideAndClear: function() {                                                                                     // 7005
          module.remove.searchTerm();                                                                                  // 7006
          if( module.has.maxSelections() ) {                                                                           // 7007
            return;                                                                                                    // 7008
          }                                                                                                            // 7009
          if(module.has.search()) {                                                                                    // 7010
            module.hide(function() {                                                                                   // 7011
              module.remove.filteredItem();                                                                            // 7012
            });                                                                                                        // 7013
          }                                                                                                            // 7014
          else {                                                                                                       // 7015
            module.hide();                                                                                             // 7016
          }                                                                                                            // 7017
        },                                                                                                             // 7018
                                                                                                                       // 7019
        delay: {                                                                                                       // 7020
          show: function() {                                                                                           // 7021
            module.verbose('Delaying show event to ensure user intent');                                               // 7022
            clearTimeout(module.timer);                                                                                // 7023
            module.timer = setTimeout(module.show, settings.delay.show);                                               // 7024
          },                                                                                                           // 7025
          hide: function() {                                                                                           // 7026
            module.verbose('Delaying hide event to ensure user intent');                                               // 7027
            clearTimeout(module.timer);                                                                                // 7028
            module.timer = setTimeout(module.hide, settings.delay.hide);                                               // 7029
          }                                                                                                            // 7030
        },                                                                                                             // 7031
                                                                                                                       // 7032
        escape: {                                                                                                      // 7033
          regExp: function(text) {                                                                                     // 7034
            text =  String(text);                                                                                      // 7035
            return text.replace(regExp.escape, '\\$&');                                                                // 7036
          }                                                                                                            // 7037
        },                                                                                                             // 7038
                                                                                                                       // 7039
        setting: function(name, value) {                                                                               // 7040
          module.debug('Changing setting', name, value);                                                               // 7041
          if( $.isPlainObject(name) ) {                                                                                // 7042
            $.extend(true, settings, name);                                                                            // 7043
          }                                                                                                            // 7044
          else if(value !== undefined) {                                                                               // 7045
            settings[name] = value;                                                                                    // 7046
          }                                                                                                            // 7047
          else {                                                                                                       // 7048
            return settings[name];                                                                                     // 7049
          }                                                                                                            // 7050
        },                                                                                                             // 7051
        internal: function(name, value) {                                                                              // 7052
          if( $.isPlainObject(name) ) {                                                                                // 7053
            $.extend(true, module, name);                                                                              // 7054
          }                                                                                                            // 7055
          else if(value !== undefined) {                                                                               // 7056
            module[name] = value;                                                                                      // 7057
          }                                                                                                            // 7058
          else {                                                                                                       // 7059
            return module[name];                                                                                       // 7060
          }                                                                                                            // 7061
        },                                                                                                             // 7062
        debug: function() {                                                                                            // 7063
          if(settings.debug) {                                                                                         // 7064
            if(settings.performance) {                                                                                 // 7065
              module.performance.log(arguments);                                                                       // 7066
            }                                                                                                          // 7067
            else {                                                                                                     // 7068
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 7069
              module.debug.apply(console, arguments);                                                                  // 7070
            }                                                                                                          // 7071
          }                                                                                                            // 7072
        },                                                                                                             // 7073
        verbose: function() {                                                                                          // 7074
          if(settings.verbose && settings.debug) {                                                                     // 7075
            if(settings.performance) {                                                                                 // 7076
              module.performance.log(arguments);                                                                       // 7077
            }                                                                                                          // 7078
            else {                                                                                                     // 7079
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 7080
              module.verbose.apply(console, arguments);                                                                // 7081
            }                                                                                                          // 7082
          }                                                                                                            // 7083
        },                                                                                                             // 7084
        error: function() {                                                                                            // 7085
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 7086
          module.error.apply(console, arguments);                                                                      // 7087
        },                                                                                                             // 7088
        performance: {                                                                                                 // 7089
          log: function(message) {                                                                                     // 7090
            var                                                                                                        // 7091
              currentTime,                                                                                             // 7092
              executionTime,                                                                                           // 7093
              previousTime                                                                                             // 7094
            ;                                                                                                          // 7095
            if(settings.performance) {                                                                                 // 7096
              currentTime   = new Date().getTime();                                                                    // 7097
              previousTime  = time || currentTime;                                                                     // 7098
              executionTime = currentTime - previousTime;                                                              // 7099
              time          = currentTime;                                                                             // 7100
              performance.push({                                                                                       // 7101
                'Name'           : message[0],                                                                         // 7102
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 7103
                'Element'        : element,                                                                            // 7104
                'Execution Time' : executionTime                                                                       // 7105
              });                                                                                                      // 7106
            }                                                                                                          // 7107
            clearTimeout(module.performance.timer);                                                                    // 7108
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 7109
          },                                                                                                           // 7110
          display: function() {                                                                                        // 7111
            var                                                                                                        // 7112
              title = settings.name + ':',                                                                             // 7113
              totalTime = 0                                                                                            // 7114
            ;                                                                                                          // 7115
            time = false;                                                                                              // 7116
            clearTimeout(module.performance.timer);                                                                    // 7117
            $.each(performance, function(index, data) {                                                                // 7118
              totalTime += data['Execution Time'];                                                                     // 7119
            });                                                                                                        // 7120
            title += ' ' + totalTime + 'ms';                                                                           // 7121
            if(moduleSelector) {                                                                                       // 7122
              title += ' \'' + moduleSelector + '\'';                                                                  // 7123
            }                                                                                                          // 7124
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 7125
              console.groupCollapsed(title);                                                                           // 7126
              if(console.table) {                                                                                      // 7127
                console.table(performance);                                                                            // 7128
              }                                                                                                        // 7129
              else {                                                                                                   // 7130
                $.each(performance, function(index, data) {                                                            // 7131
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 7132
                });                                                                                                    // 7133
              }                                                                                                        // 7134
              console.groupEnd();                                                                                      // 7135
            }                                                                                                          // 7136
            performance = [];                                                                                          // 7137
          }                                                                                                            // 7138
        },                                                                                                             // 7139
        invoke: function(query, passedArguments, context) {                                                            // 7140
          var                                                                                                          // 7141
            object = instance,                                                                                         // 7142
            maxDepth,                                                                                                  // 7143
            found,                                                                                                     // 7144
            response                                                                                                   // 7145
          ;                                                                                                            // 7146
          passedArguments = passedArguments || queryArguments;                                                         // 7147
          context         = element         || context;                                                                // 7148
          if(typeof query == 'string' && object !== undefined) {                                                       // 7149
            query    = query.split(/[\. ]/);                                                                           // 7150
            maxDepth = query.length - 1;                                                                               // 7151
            $.each(query, function(depth, value) {                                                                     // 7152
              var camelCaseValue = (depth != maxDepth)                                                                 // 7153
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 7154
                : query                                                                                                // 7155
              ;                                                                                                        // 7156
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 7157
                object = object[camelCaseValue];                                                                       // 7158
              }                                                                                                        // 7159
              else if( object[camelCaseValue] !== undefined ) {                                                        // 7160
                found = object[camelCaseValue];                                                                        // 7161
                return false;                                                                                          // 7162
              }                                                                                                        // 7163
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 7164
                object = object[value];                                                                                // 7165
              }                                                                                                        // 7166
              else if( object[value] !== undefined ) {                                                                 // 7167
                found = object[value];                                                                                 // 7168
                return false;                                                                                          // 7169
              }                                                                                                        // 7170
              else {                                                                                                   // 7171
                module.error(error.method, query);                                                                     // 7172
                return false;                                                                                          // 7173
              }                                                                                                        // 7174
            });                                                                                                        // 7175
          }                                                                                                            // 7176
          if ( $.isFunction( found ) ) {                                                                               // 7177
            response = found.apply(context, passedArguments);                                                          // 7178
          }                                                                                                            // 7179
          else if(found !== undefined) {                                                                               // 7180
            response = found;                                                                                          // 7181
          }                                                                                                            // 7182
          if($.isArray(returnedValue)) {                                                                               // 7183
            returnedValue.push(response);                                                                              // 7184
          }                                                                                                            // 7185
          else if(returnedValue !== undefined) {                                                                       // 7186
            returnedValue = [returnedValue, response];                                                                 // 7187
          }                                                                                                            // 7188
          else if(response !== undefined) {                                                                            // 7189
            returnedValue = response;                                                                                  // 7190
          }                                                                                                            // 7191
          return found;                                                                                                // 7192
        }                                                                                                              // 7193
      };                                                                                                               // 7194
                                                                                                                       // 7195
      if(methodInvoked) {                                                                                              // 7196
        if(instance === undefined) {                                                                                   // 7197
          module.initialize();                                                                                         // 7198
        }                                                                                                              // 7199
        module.invoke(query);                                                                                          // 7200
      }                                                                                                                // 7201
      else {                                                                                                           // 7202
        if(instance !== undefined) {                                                                                   // 7203
          instance.invoke('destroy');                                                                                  // 7204
        }                                                                                                              // 7205
        module.initialize();                                                                                           // 7206
      }                                                                                                                // 7207
    })                                                                                                                 // 7208
  ;                                                                                                                    // 7209
  return (returnedValue !== undefined)                                                                                 // 7210
    ? returnedValue                                                                                                    // 7211
    : $allModules                                                                                                      // 7212
  ;                                                                                                                    // 7213
};                                                                                                                     // 7214
                                                                                                                       // 7215
$.fn.dropdown.settings = {                                                                                             // 7216
                                                                                                                       // 7217
  debug                  : false,                                                                                      // 7218
  verbose                : false,                                                                                      // 7219
  performance            : true,                                                                                       // 7220
                                                                                                                       // 7221
  on                     : 'click',    // what event should show menu action on item selection                         // 7222
  action                 : 'activate', // action on item selection (nothing, activate, select, combo, hide, function(){})
                                                                                                                       // 7224
                                                                                                                       // 7225
  apiSettings            : false,                                                                                      // 7226
  saveRemoteData         : true,      // Whether remote name/value pairs should be stored in sessionStorage to allow remote data to be restored on page refresh
  throttle               : 200,       // How long to wait after last user input to search remotely                     // 7228
                                                                                                                       // 7229
  context                : window,      // Context to use when determining if on screen                                // 7230
  direction              : 'auto',     // Whether dropdown should always open in one direction                         // 7231
  keepOnScreen           : true,       // Whether dropdown should check whether it is on screen before showing         // 7232
                                                                                                                       // 7233
  match                  : 'both',     // what to match against with search selection (both, text, or label)           // 7234
  fullTextSearch         : false,      // search anywhere in value                                                     // 7235
                                                                                                                       // 7236
  placeholder            : 'auto',     // whether to convert blank <select> values to placeholder text                 // 7237
  preserveHTML           : true,       // preserve html when selecting value                                           // 7238
  sortSelect             : false,      // sort selection on init                                                       // 7239
                                                                                                                       // 7240
  forceSelection         : true,       // force a choice on blur with search selection                                 // 7241
  allowAdditions         : false,      // whether multiple select should allow user added values                       // 7242
                                                                                                                       // 7243
  maxSelections          : false,      // When set to a number limits the number of selections to this count           // 7244
  useLabels              : true,       // whether multiple select should filter currently active selections from choices
  delimiter              : ',',        // when multiselect uses normal <input> the values will be delmited with this character
                                                                                                                       // 7247
  showOnFocus            : true,       // show menu on focus                                                           // 7248
  allowTab               : true,       // add tabindex to element                                                      // 7249
  allowCategorySelection : false,      // allow elements with sub-menus to be selected                                 // 7250
                                                                                                                       // 7251
  fireOnInit             : false,      // Whether callbacks should fire when initializing dropdown values              // 7252
                                                                                                                       // 7253
  transition             : 'auto',     // auto transition will slide down or up based on direction                     // 7254
  duration               : 200,        // duration of transition                                                       // 7255
                                                                                                                       // 7256
  glyphWidth             : 1.0714,     // widest glyph width in em (W is 1.0714 em) used to calculate multiselect input width
                                                                                                                       // 7258
  // label settings on multi-select                                                                                    // 7259
  label: {                                                                                                             // 7260
    transition : 'scale',                                                                                              // 7261
    duration   : 200,                                                                                                  // 7262
    variation  : false                                                                                                 // 7263
  },                                                                                                                   // 7264
                                                                                                                       // 7265
  // delay before event                                                                                                // 7266
  delay : {                                                                                                            // 7267
    hide   : 300,                                                                                                      // 7268
    show   : 200,                                                                                                      // 7269
    search : 20,                                                                                                       // 7270
    touch  : 50                                                                                                        // 7271
  },                                                                                                                   // 7272
                                                                                                                       // 7273
  /* Callbacks */                                                                                                      // 7274
  onChange      : function(value, text, $selected){},                                                                  // 7275
  onAdd         : function(value, text, $selected){},                                                                  // 7276
  onRemove      : function(value, text, $selected){},                                                                  // 7277
                                                                                                                       // 7278
  onLabelSelect : function($selectedLabels){},                                                                         // 7279
  onLabelCreate : function(value, text) { return $(this); },                                                           // 7280
  onNoResults   : function(searchTerm) { return true; },                                                               // 7281
  onShow        : function(){},                                                                                        // 7282
  onHide        : function(){},                                                                                        // 7283
                                                                                                                       // 7284
  /* Component */                                                                                                      // 7285
  name           : 'Dropdown',                                                                                         // 7286
  namespace      : 'dropdown',                                                                                         // 7287
                                                                                                                       // 7288
  message: {                                                                                                           // 7289
    addResult     : 'Add <b>{term}</b>',                                                                               // 7290
    count         : '{count} selected',                                                                                // 7291
    maxSelections : 'Max {maxCount} selections',                                                                       // 7292
    noResults     : 'No results found.',                                                                               // 7293
    serverError   : 'There was an error contacting the server'                                                         // 7294
  },                                                                                                                   // 7295
                                                                                                                       // 7296
  error : {                                                                                                            // 7297
    action          : 'You called a dropdown action that was not defined',                                             // 7298
    alreadySetup    : 'Once a select has been initialized behaviors must be called on the created ui dropdown',        // 7299
    labels          : 'Allowing user additions currently requires the use of labels.',                                 // 7300
    missingMultiple : '<select> requires multiple property to be set to correctly preserve multiple values',           // 7301
    method          : 'The method you called is not defined.',                                                         // 7302
    noAPI           : 'The API module is required to load resources remotely',                                         // 7303
    noStorage       : 'Saving remote data requires session storage',                                                   // 7304
    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>'            // 7305
  },                                                                                                                   // 7306
                                                                                                                       // 7307
  regExp : {                                                                                                           // 7308
    escape   : /[-[\]{}()*+?.,\\^$|#\s]/g,                                                                             // 7309
  },                                                                                                                   // 7310
                                                                                                                       // 7311
  metadata : {                                                                                                         // 7312
    defaultText     : 'defaultText',                                                                                   // 7313
    defaultValue    : 'defaultValue',                                                                                  // 7314
    placeholderText : 'placeholder',                                                                                   // 7315
    text            : 'text',                                                                                          // 7316
    value           : 'value'                                                                                          // 7317
  },                                                                                                                   // 7318
                                                                                                                       // 7319
  // property names for remote query                                                                                   // 7320
  fields: {                                                                                                            // 7321
    values : 'values',                                                                                                 // 7322
    name   : 'name',                                                                                                   // 7323
    value  : 'value'                                                                                                   // 7324
  },                                                                                                                   // 7325
                                                                                                                       // 7326
  selector : {                                                                                                         // 7327
    addition     : '.addition',                                                                                        // 7328
    dropdown     : '.ui.dropdown',                                                                                     // 7329
    icon         : '> .dropdown.icon',                                                                                 // 7330
    input        : '> input[type="hidden"], > select',                                                                 // 7331
    item         : '.item',                                                                                            // 7332
    label        : '> .label',                                                                                         // 7333
    remove       : '> .label > .delete.icon',                                                                          // 7334
    siblingLabel : '.label',                                                                                           // 7335
    menu         : '.menu',                                                                                            // 7336
    message      : '.message',                                                                                         // 7337
    menuIcon     : '.dropdown.icon',                                                                                   // 7338
    search       : 'input.search, .menu > .search > input',                                                            // 7339
    text         : '> .text:not(.icon)',                                                                               // 7340
    unselectable : '.disabled, .filtered'                                                                              // 7341
  },                                                                                                                   // 7342
                                                                                                                       // 7343
  className : {                                                                                                        // 7344
    active      : 'active',                                                                                            // 7345
    addition    : 'addition',                                                                                          // 7346
    animating   : 'animating',                                                                                         // 7347
    disabled    : 'disabled',                                                                                          // 7348
    dropdown    : 'ui dropdown',                                                                                       // 7349
    filtered    : 'filtered',                                                                                          // 7350
    hidden      : 'hidden transition',                                                                                 // 7351
    item        : 'item',                                                                                              // 7352
    label       : 'ui label',                                                                                          // 7353
    loading     : 'loading',                                                                                           // 7354
    menu        : 'menu',                                                                                              // 7355
    message     : 'message',                                                                                           // 7356
    multiple    : 'multiple',                                                                                          // 7357
    placeholder : 'default',                                                                                           // 7358
    search      : 'search',                                                                                            // 7359
    selected    : 'selected',                                                                                          // 7360
    selection   : 'selection',                                                                                         // 7361
    upward      : 'upward',                                                                                            // 7362
    visible     : 'visible'                                                                                            // 7363
  }                                                                                                                    // 7364
                                                                                                                       // 7365
};                                                                                                                     // 7366
                                                                                                                       // 7367
/* Templates */                                                                                                        // 7368
$.fn.dropdown.settings.templates = {                                                                                   // 7369
                                                                                                                       // 7370
  // generates dropdown from select values                                                                             // 7371
  dropdown: function(select) {                                                                                         // 7372
    var                                                                                                                // 7373
      placeholder = select.placeholder || false,                                                                       // 7374
      values      = select.values || {},                                                                               // 7375
      html        = ''                                                                                                 // 7376
    ;                                                                                                                  // 7377
    html +=  '<i class="dropdown icon"></i>';                                                                          // 7378
    if(select.placeholder) {                                                                                           // 7379
      html += '<div class="default text">' + placeholder + '</div>';                                                   // 7380
    }                                                                                                                  // 7381
    else {                                                                                                             // 7382
      html += '<div class="text"></div>';                                                                              // 7383
    }                                                                                                                  // 7384
    html += '<div class="menu">';                                                                                      // 7385
    $.each(select.values, function(index, option) {                                                                    // 7386
      html += (option.disabled)                                                                                        // 7387
        ? '<div class="disabled item" data-value="' + option.value + '">' + option.name + '</div>'                     // 7388
        : '<div class="item" data-value="' + option.value + '">' + option.name + '</div>'                              // 7389
      ;                                                                                                                // 7390
    });                                                                                                                // 7391
    html += '</div>';                                                                                                  // 7392
    return html;                                                                                                       // 7393
  },                                                                                                                   // 7394
                                                                                                                       // 7395
  // generates just menu from select                                                                                   // 7396
  menu: function(response, fields) {                                                                                   // 7397
    var                                                                                                                // 7398
      values = response.values || {},                                                                                  // 7399
      html   = ''                                                                                                      // 7400
    ;                                                                                                                  // 7401
    $.each(response[fields.values], function(index, option) {                                                          // 7402
      html += '<div class="item" data-value="' + option[fields.value] + '">' + option[fields.name] + '</div>';         // 7403
    });                                                                                                                // 7404
    return html;                                                                                                       // 7405
  },                                                                                                                   // 7406
                                                                                                                       // 7407
  // generates label for multiselect                                                                                   // 7408
  label: function(value, text) {                                                                                       // 7409
    return text + '<i class="delete icon"></i>';                                                                       // 7410
  },                                                                                                                   // 7411
                                                                                                                       // 7412
                                                                                                                       // 7413
  // generates messages like "No results"                                                                              // 7414
  message: function(message) {                                                                                         // 7415
    return message;                                                                                                    // 7416
  },                                                                                                                   // 7417
                                                                                                                       // 7418
  // generates user addition to selection menu                                                                         // 7419
  addition: function(choice) {                                                                                         // 7420
    return choice;                                                                                                     // 7421
  }                                                                                                                    // 7422
                                                                                                                       // 7423
};                                                                                                                     // 7424
                                                                                                                       // 7425
})( jQuery, window , document );                                                                                       // 7426
                                                                                                                       // 7427
/*!                                                                                                                    // 7428
 * # Semantic UI 2.1.2 - Video                                                                                         // 7429
 * http://github.com/semantic-org/semantic-ui/                                                                         // 7430
 *                                                                                                                     // 7431
 *                                                                                                                     // 7432
 * Copyright 2015 Contributors                                                                                         // 7433
 * Released under the MIT license                                                                                      // 7434
 * http://opensource.org/licenses/MIT                                                                                  // 7435
 *                                                                                                                     // 7436
 */                                                                                                                    // 7437
                                                                                                                       // 7438
;(function ($, window, document, undefined) {                                                                          // 7439
                                                                                                                       // 7440
"use strict";                                                                                                          // 7441
                                                                                                                       // 7442
$.fn.embed = function(parameters) {                                                                                    // 7443
                                                                                                                       // 7444
  var                                                                                                                  // 7445
    $allModules     = $(this),                                                                                         // 7446
                                                                                                                       // 7447
    moduleSelector  = $allModules.selector || '',                                                                      // 7448
                                                                                                                       // 7449
    time            = new Date().getTime(),                                                                            // 7450
    performance     = [],                                                                                              // 7451
                                                                                                                       // 7452
    query           = arguments[0],                                                                                    // 7453
    methodInvoked   = (typeof query == 'string'),                                                                      // 7454
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 7455
                                                                                                                       // 7456
    returnedValue                                                                                                      // 7457
  ;                                                                                                                    // 7458
                                                                                                                       // 7459
  $allModules                                                                                                          // 7460
    .each(function() {                                                                                                 // 7461
      var                                                                                                              // 7462
        settings        = ( $.isPlainObject(parameters) )                                                              // 7463
          ? $.extend(true, {}, $.fn.embed.settings, parameters)                                                        // 7464
          : $.extend({}, $.fn.embed.settings),                                                                         // 7465
                                                                                                                       // 7466
        selector        = settings.selector,                                                                           // 7467
        className       = settings.className,                                                                          // 7468
        sources         = settings.sources,                                                                            // 7469
        error           = settings.error,                                                                              // 7470
        metadata        = settings.metadata,                                                                           // 7471
        namespace       = settings.namespace,                                                                          // 7472
        templates       = settings.templates,                                                                          // 7473
                                                                                                                       // 7474
        eventNamespace  = '.' + namespace,                                                                             // 7475
        moduleNamespace = 'module-' + namespace,                                                                       // 7476
                                                                                                                       // 7477
        $window         = $(window),                                                                                   // 7478
        $module         = $(this),                                                                                     // 7479
        $placeholder    = $module.find(selector.placeholder),                                                          // 7480
        $icon           = $module.find(selector.icon),                                                                 // 7481
        $embed          = $module.find(selector.embed),                                                                // 7482
                                                                                                                       // 7483
        element         = this,                                                                                        // 7484
        instance        = $module.data(moduleNamespace),                                                               // 7485
        module                                                                                                         // 7486
      ;                                                                                                                // 7487
                                                                                                                       // 7488
      module = {                                                                                                       // 7489
                                                                                                                       // 7490
        initialize: function() {                                                                                       // 7491
          module.debug('Initializing embed');                                                                          // 7492
          module.determine.autoplay();                                                                                 // 7493
          module.create();                                                                                             // 7494
          module.bind.events();                                                                                        // 7495
          module.instantiate();                                                                                        // 7496
        },                                                                                                             // 7497
                                                                                                                       // 7498
        instantiate: function() {                                                                                      // 7499
          module.verbose('Storing instance of module', module);                                                        // 7500
          instance = module;                                                                                           // 7501
          $module                                                                                                      // 7502
            .data(moduleNamespace, module)                                                                             // 7503
          ;                                                                                                            // 7504
        },                                                                                                             // 7505
                                                                                                                       // 7506
        destroy: function() {                                                                                          // 7507
          module.verbose('Destroying previous instance of embed');                                                     // 7508
          module.reset();                                                                                              // 7509
          $module                                                                                                      // 7510
            .removeData(moduleNamespace)                                                                               // 7511
            .off(eventNamespace)                                                                                       // 7512
          ;                                                                                                            // 7513
        },                                                                                                             // 7514
                                                                                                                       // 7515
        refresh: function() {                                                                                          // 7516
          module.verbose('Refreshing selector cache');                                                                 // 7517
          $placeholder = $module.find(selector.placeholder);                                                           // 7518
          $icon        = $module.find(selector.icon);                                                                  // 7519
          $embed       = $module.find(selector.embed);                                                                 // 7520
        },                                                                                                             // 7521
                                                                                                                       // 7522
        bind: {                                                                                                        // 7523
          events: function() {                                                                                         // 7524
            if( module.has.placeholder() ) {                                                                           // 7525
              module.debug('Adding placeholder events');                                                               // 7526
              $module                                                                                                  // 7527
                .on('click' + eventNamespace, selector.placeholder, module.createAndShow)                              // 7528
                .on('click' + eventNamespace, selector.icon, module.createAndShow)                                     // 7529
              ;                                                                                                        // 7530
            }                                                                                                          // 7531
          }                                                                                                            // 7532
        },                                                                                                             // 7533
                                                                                                                       // 7534
        create: function() {                                                                                           // 7535
          var                                                                                                          // 7536
            placeholder = module.get.placeholder()                                                                     // 7537
          ;                                                                                                            // 7538
          if(placeholder) {                                                                                            // 7539
            module.createPlaceholder();                                                                                // 7540
          }                                                                                                            // 7541
          else {                                                                                                       // 7542
            module.createAndShow();                                                                                    // 7543
          }                                                                                                            // 7544
        },                                                                                                             // 7545
                                                                                                                       // 7546
        createPlaceholder: function(placeholder) {                                                                     // 7547
          var                                                                                                          // 7548
            icon  = module.get.icon(),                                                                                 // 7549
            url   = module.get.url(),                                                                                  // 7550
            embed = module.generate.embed(url)                                                                         // 7551
          ;                                                                                                            // 7552
          placeholder = placeholder || module.get.placeholder();                                                       // 7553
          $module.html( templates.placeholder(placeholder, icon) );                                                    // 7554
          module.debug('Creating placeholder for embed', placeholder, icon);                                           // 7555
        },                                                                                                             // 7556
                                                                                                                       // 7557
        createEmbed: function(url) {                                                                                   // 7558
          module.refresh();                                                                                            // 7559
          url = url || module.get.url();                                                                               // 7560
          $embed = $('<div/>')                                                                                         // 7561
            .addClass(className.embed)                                                                                 // 7562
            .html( module.generate.embed(url) )                                                                        // 7563
            .appendTo($module)                                                                                         // 7564
          ;                                                                                                            // 7565
          settings.onCreate.call(element, url);                                                                        // 7566
          module.debug('Creating embed object', $embed);                                                               // 7567
        },                                                                                                             // 7568
                                                                                                                       // 7569
        createAndShow: function() {                                                                                    // 7570
          module.createEmbed();                                                                                        // 7571
          module.show();                                                                                               // 7572
        },                                                                                                             // 7573
                                                                                                                       // 7574
        // sets new embed                                                                                              // 7575
        change: function(source, id, url) {                                                                            // 7576
          module.debug('Changing video to ', source, id, url);                                                         // 7577
          $module                                                                                                      // 7578
            .data(metadata.source, source)                                                                             // 7579
            .data(metadata.id, id)                                                                                     // 7580
            .data(metadata.url, url)                                                                                   // 7581
          ;                                                                                                            // 7582
          module.create();                                                                                             // 7583
        },                                                                                                             // 7584
                                                                                                                       // 7585
        // clears embed                                                                                                // 7586
        reset: function() {                                                                                            // 7587
          module.debug('Clearing embed and showing placeholder');                                                      // 7588
          module.remove.active();                                                                                      // 7589
          module.remove.embed();                                                                                       // 7590
          module.showPlaceholder();                                                                                    // 7591
          settings.onReset.call(element);                                                                              // 7592
        },                                                                                                             // 7593
                                                                                                                       // 7594
        // shows current embed                                                                                         // 7595
        show: function() {                                                                                             // 7596
          module.debug('Showing embed');                                                                               // 7597
          module.set.active();                                                                                         // 7598
          settings.onDisplay.call(element);                                                                            // 7599
        },                                                                                                             // 7600
                                                                                                                       // 7601
        hide: function() {                                                                                             // 7602
          module.debug('Hiding embed');                                                                                // 7603
          module.showPlaceholder();                                                                                    // 7604
        },                                                                                                             // 7605
                                                                                                                       // 7606
        showPlaceholder: function() {                                                                                  // 7607
          module.debug('Showing placeholder image');                                                                   // 7608
          module.remove.active();                                                                                      // 7609
          settings.onPlaceholderDisplay.call(element);                                                                 // 7610
        },                                                                                                             // 7611
                                                                                                                       // 7612
        get: {                                                                                                         // 7613
          id: function() {                                                                                             // 7614
            return settings.id || $module.data(metadata.id);                                                           // 7615
          },                                                                                                           // 7616
          placeholder: function() {                                                                                    // 7617
            return settings.placeholder || $module.data(metadata.placeholder);                                         // 7618
          },                                                                                                           // 7619
          icon: function() {                                                                                           // 7620
            return (settings.icon)                                                                                     // 7621
              ? settings.icon                                                                                          // 7622
              : ($module.data(metadata.icon) !== undefined)                                                            // 7623
                ? $module.data(metadata.icon)                                                                          // 7624
                : module.determine.icon()                                                                              // 7625
            ;                                                                                                          // 7626
          },                                                                                                           // 7627
          source: function(url) {                                                                                      // 7628
            return (settings.source)                                                                                   // 7629
              ? settings.source                                                                                        // 7630
              : ($module.data(metadata.source) !== undefined)                                                          // 7631
                ? $module.data(metadata.source)                                                                        // 7632
                : module.determine.source()                                                                            // 7633
            ;                                                                                                          // 7634
          },                                                                                                           // 7635
          type: function() {                                                                                           // 7636
            var source = module.get.source();                                                                          // 7637
            return (sources[source] !== undefined)                                                                     // 7638
              ? sources[source].type                                                                                   // 7639
              : false                                                                                                  // 7640
            ;                                                                                                          // 7641
          },                                                                                                           // 7642
          url: function() {                                                                                            // 7643
            return (settings.url)                                                                                      // 7644
              ? settings.url                                                                                           // 7645
              : ($module.data(metadata.url) !== undefined)                                                             // 7646
                ? $module.data(metadata.url)                                                                           // 7647
                : module.determine.url()                                                                               // 7648
            ;                                                                                                          // 7649
          }                                                                                                            // 7650
        },                                                                                                             // 7651
                                                                                                                       // 7652
        determine: {                                                                                                   // 7653
          autoplay: function() {                                                                                       // 7654
            if(module.should.autoplay()) {                                                                             // 7655
              settings.autoplay = true;                                                                                // 7656
            }                                                                                                          // 7657
          },                                                                                                           // 7658
          source: function(url) {                                                                                      // 7659
            var                                                                                                        // 7660
              matchedSource = false                                                                                    // 7661
            ;                                                                                                          // 7662
            url = url || module.get.url();                                                                             // 7663
            if(url) {                                                                                                  // 7664
              $.each(sources, function(name, source) {                                                                 // 7665
                if(url.search(source.domain) !== -1) {                                                                 // 7666
                  matchedSource = name;                                                                                // 7667
                  return false;                                                                                        // 7668
                }                                                                                                      // 7669
              });                                                                                                      // 7670
            }                                                                                                          // 7671
            return matchedSource;                                                                                      // 7672
          },                                                                                                           // 7673
          icon: function() {                                                                                           // 7674
            var                                                                                                        // 7675
              source = module.get.source()                                                                             // 7676
            ;                                                                                                          // 7677
            return (sources[source] !== undefined)                                                                     // 7678
              ? sources[source].icon                                                                                   // 7679
              : false                                                                                                  // 7680
            ;                                                                                                          // 7681
          },                                                                                                           // 7682
          url: function() {                                                                                            // 7683
            var                                                                                                        // 7684
              id     = settings.id     || $module.data(metadata.id),                                                   // 7685
              source = settings.source || $module.data(metadata.source),                                               // 7686
              url                                                                                                      // 7687
            ;                                                                                                          // 7688
            url = (sources[source] !== undefined)                                                                      // 7689
              ? sources[source].url.replace('{id}', id)                                                                // 7690
              : false                                                                                                  // 7691
            ;                                                                                                          // 7692
            if(url) {                                                                                                  // 7693
              $module.data(metadata.url, url);                                                                         // 7694
            }                                                                                                          // 7695
            return url;                                                                                                // 7696
          }                                                                                                            // 7697
        },                                                                                                             // 7698
                                                                                                                       // 7699
                                                                                                                       // 7700
        set: {                                                                                                         // 7701
          active: function() {                                                                                         // 7702
            $module.addClass(className.active);                                                                        // 7703
          }                                                                                                            // 7704
        },                                                                                                             // 7705
                                                                                                                       // 7706
        remove: {                                                                                                      // 7707
          active: function() {                                                                                         // 7708
            $module.removeClass(className.active);                                                                     // 7709
          },                                                                                                           // 7710
          embed: function() {                                                                                          // 7711
            $embed.empty();                                                                                            // 7712
          }                                                                                                            // 7713
        },                                                                                                             // 7714
                                                                                                                       // 7715
        encode: {                                                                                                      // 7716
          parameters: function(parameters) {                                                                           // 7717
            var                                                                                                        // 7718
              urlString = [],                                                                                          // 7719
              index                                                                                                    // 7720
            ;                                                                                                          // 7721
            for (index in parameters) {                                                                                // 7722
              urlString.push( encodeURIComponent(index) + '=' + encodeURIComponent( parameters[index] ) );             // 7723
            }                                                                                                          // 7724
            return urlString.join('&amp;');                                                                            // 7725
          }                                                                                                            // 7726
        },                                                                                                             // 7727
                                                                                                                       // 7728
        generate: {                                                                                                    // 7729
          embed: function(url) {                                                                                       // 7730
            module.debug('Generating embed html');                                                                     // 7731
            var                                                                                                        // 7732
              source = module.get.source(),                                                                            // 7733
              html,                                                                                                    // 7734
              parameters                                                                                               // 7735
            ;                                                                                                          // 7736
            url = module.get.url(url);                                                                                 // 7737
            if(url) {                                                                                                  // 7738
              parameters = module.generate.parameters(source);                                                         // 7739
              html       = templates.iframe(url, parameters);                                                          // 7740
            }                                                                                                          // 7741
            else {                                                                                                     // 7742
              module.error(error.noURL, $module);                                                                      // 7743
            }                                                                                                          // 7744
            return html;                                                                                               // 7745
          },                                                                                                           // 7746
          parameters: function(source, extraParameters) {                                                              // 7747
            var                                                                                                        // 7748
              parameters = (sources[source] && sources[source].parameters !== undefined)                               // 7749
                ? sources[source].parameters(settings)                                                                 // 7750
                : {}                                                                                                   // 7751
            ;                                                                                                          // 7752
            extraParameters = extraParameters || settings.parameters;                                                  // 7753
            if(extraParameters) {                                                                                      // 7754
              parameters = $.extend({}, parameters, extraParameters);                                                  // 7755
            }                                                                                                          // 7756
            parameters = settings.onEmbed(parameters);                                                                 // 7757
            return module.encode.parameters(parameters);                                                               // 7758
          }                                                                                                            // 7759
        },                                                                                                             // 7760
                                                                                                                       // 7761
        has: {                                                                                                         // 7762
          placeholder: function() {                                                                                    // 7763
            return settings.placeholder || $module.data(metadata.placeholder);                                         // 7764
          }                                                                                                            // 7765
        },                                                                                                             // 7766
                                                                                                                       // 7767
        should: {                                                                                                      // 7768
          autoplay: function() {                                                                                       // 7769
            return (settings.autoplay === 'auto')                                                                      // 7770
              ? (settings.placeholder || $module.data(metadata.placeholder) !== undefined)                             // 7771
              : settings.autoplay                                                                                      // 7772
            ;                                                                                                          // 7773
          }                                                                                                            // 7774
        },                                                                                                             // 7775
                                                                                                                       // 7776
        is: {                                                                                                          // 7777
          video: function() {                                                                                          // 7778
            return module.get.type() == 'video';                                                                       // 7779
          }                                                                                                            // 7780
        },                                                                                                             // 7781
                                                                                                                       // 7782
        setting: function(name, value) {                                                                               // 7783
          module.debug('Changing setting', name, value);                                                               // 7784
          if( $.isPlainObject(name) ) {                                                                                // 7785
            $.extend(true, settings, name);                                                                            // 7786
          }                                                                                                            // 7787
          else if(value !== undefined) {                                                                               // 7788
            settings[name] = value;                                                                                    // 7789
          }                                                                                                            // 7790
          else {                                                                                                       // 7791
            return settings[name];                                                                                     // 7792
          }                                                                                                            // 7793
        },                                                                                                             // 7794
        internal: function(name, value) {                                                                              // 7795
          if( $.isPlainObject(name) ) {                                                                                // 7796
            $.extend(true, module, name);                                                                              // 7797
          }                                                                                                            // 7798
          else if(value !== undefined) {                                                                               // 7799
            module[name] = value;                                                                                      // 7800
          }                                                                                                            // 7801
          else {                                                                                                       // 7802
            return module[name];                                                                                       // 7803
          }                                                                                                            // 7804
        },                                                                                                             // 7805
        debug: function() {                                                                                            // 7806
          if(settings.debug) {                                                                                         // 7807
            if(settings.performance) {                                                                                 // 7808
              module.performance.log(arguments);                                                                       // 7809
            }                                                                                                          // 7810
            else {                                                                                                     // 7811
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 7812
              module.debug.apply(console, arguments);                                                                  // 7813
            }                                                                                                          // 7814
          }                                                                                                            // 7815
        },                                                                                                             // 7816
        verbose: function() {                                                                                          // 7817
          if(settings.verbose && settings.debug) {                                                                     // 7818
            if(settings.performance) {                                                                                 // 7819
              module.performance.log(arguments);                                                                       // 7820
            }                                                                                                          // 7821
            else {                                                                                                     // 7822
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 7823
              module.verbose.apply(console, arguments);                                                                // 7824
            }                                                                                                          // 7825
          }                                                                                                            // 7826
        },                                                                                                             // 7827
        error: function() {                                                                                            // 7828
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 7829
          module.error.apply(console, arguments);                                                                      // 7830
        },                                                                                                             // 7831
        performance: {                                                                                                 // 7832
          log: function(message) {                                                                                     // 7833
            var                                                                                                        // 7834
              currentTime,                                                                                             // 7835
              executionTime,                                                                                           // 7836
              previousTime                                                                                             // 7837
            ;                                                                                                          // 7838
            if(settings.performance) {                                                                                 // 7839
              currentTime   = new Date().getTime();                                                                    // 7840
              previousTime  = time || currentTime;                                                                     // 7841
              executionTime = currentTime - previousTime;                                                              // 7842
              time          = currentTime;                                                                             // 7843
              performance.push({                                                                                       // 7844
                'Name'           : message[0],                                                                         // 7845
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 7846
                'Element'        : element,                                                                            // 7847
                'Execution Time' : executionTime                                                                       // 7848
              });                                                                                                      // 7849
            }                                                                                                          // 7850
            clearTimeout(module.performance.timer);                                                                    // 7851
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 7852
          },                                                                                                           // 7853
          display: function() {                                                                                        // 7854
            var                                                                                                        // 7855
              title = settings.name + ':',                                                                             // 7856
              totalTime = 0                                                                                            // 7857
            ;                                                                                                          // 7858
            time = false;                                                                                              // 7859
            clearTimeout(module.performance.timer);                                                                    // 7860
            $.each(performance, function(index, data) {                                                                // 7861
              totalTime += data['Execution Time'];                                                                     // 7862
            });                                                                                                        // 7863
            title += ' ' + totalTime + 'ms';                                                                           // 7864
            if(moduleSelector) {                                                                                       // 7865
              title += ' \'' + moduleSelector + '\'';                                                                  // 7866
            }                                                                                                          // 7867
            if($allModules.length > 1) {                                                                               // 7868
              title += ' ' + '(' + $allModules.length + ')';                                                           // 7869
            }                                                                                                          // 7870
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 7871
              console.groupCollapsed(title);                                                                           // 7872
              if(console.table) {                                                                                      // 7873
                console.table(performance);                                                                            // 7874
              }                                                                                                        // 7875
              else {                                                                                                   // 7876
                $.each(performance, function(index, data) {                                                            // 7877
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 7878
                });                                                                                                    // 7879
              }                                                                                                        // 7880
              console.groupEnd();                                                                                      // 7881
            }                                                                                                          // 7882
            performance = [];                                                                                          // 7883
          }                                                                                                            // 7884
        },                                                                                                             // 7885
        invoke: function(query, passedArguments, context) {                                                            // 7886
          var                                                                                                          // 7887
            object = instance,                                                                                         // 7888
            maxDepth,                                                                                                  // 7889
            found,                                                                                                     // 7890
            response                                                                                                   // 7891
          ;                                                                                                            // 7892
          passedArguments = passedArguments || queryArguments;                                                         // 7893
          context         = element         || context;                                                                // 7894
          if(typeof query == 'string' && object !== undefined) {                                                       // 7895
            query    = query.split(/[\. ]/);                                                                           // 7896
            maxDepth = query.length - 1;                                                                               // 7897
            $.each(query, function(depth, value) {                                                                     // 7898
              var camelCaseValue = (depth != maxDepth)                                                                 // 7899
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 7900
                : query                                                                                                // 7901
              ;                                                                                                        // 7902
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 7903
                object = object[camelCaseValue];                                                                       // 7904
              }                                                                                                        // 7905
              else if( object[camelCaseValue] !== undefined ) {                                                        // 7906
                found = object[camelCaseValue];                                                                        // 7907
                return false;                                                                                          // 7908
              }                                                                                                        // 7909
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 7910
                object = object[value];                                                                                // 7911
              }                                                                                                        // 7912
              else if( object[value] !== undefined ) {                                                                 // 7913
                found = object[value];                                                                                 // 7914
                return false;                                                                                          // 7915
              }                                                                                                        // 7916
              else {                                                                                                   // 7917
                module.error(error.method, query);                                                                     // 7918
                return false;                                                                                          // 7919
              }                                                                                                        // 7920
            });                                                                                                        // 7921
          }                                                                                                            // 7922
          if ( $.isFunction( found ) ) {                                                                               // 7923
            response = found.apply(context, passedArguments);                                                          // 7924
          }                                                                                                            // 7925
          else if(found !== undefined) {                                                                               // 7926
            response = found;                                                                                          // 7927
          }                                                                                                            // 7928
          if($.isArray(returnedValue)) {                                                                               // 7929
            returnedValue.push(response);                                                                              // 7930
          }                                                                                                            // 7931
          else if(returnedValue !== undefined) {                                                                       // 7932
            returnedValue = [returnedValue, response];                                                                 // 7933
          }                                                                                                            // 7934
          else if(response !== undefined) {                                                                            // 7935
            returnedValue = response;                                                                                  // 7936
          }                                                                                                            // 7937
          return found;                                                                                                // 7938
        }                                                                                                              // 7939
      };                                                                                                               // 7940
                                                                                                                       // 7941
      if(methodInvoked) {                                                                                              // 7942
        if(instance === undefined) {                                                                                   // 7943
          module.initialize();                                                                                         // 7944
        }                                                                                                              // 7945
        module.invoke(query);                                                                                          // 7946
      }                                                                                                                // 7947
      else {                                                                                                           // 7948
        if(instance !== undefined) {                                                                                   // 7949
          instance.invoke('destroy');                                                                                  // 7950
        }                                                                                                              // 7951
        module.initialize();                                                                                           // 7952
      }                                                                                                                // 7953
    })                                                                                                                 // 7954
  ;                                                                                                                    // 7955
  return (returnedValue !== undefined)                                                                                 // 7956
    ? returnedValue                                                                                                    // 7957
    : this                                                                                                             // 7958
  ;                                                                                                                    // 7959
};                                                                                                                     // 7960
                                                                                                                       // 7961
$.fn.embed.settings = {                                                                                                // 7962
                                                                                                                       // 7963
  name        : 'Embed',                                                                                               // 7964
  namespace   : 'embed',                                                                                               // 7965
                                                                                                                       // 7966
  debug       : false,                                                                                                 // 7967
  verbose     : false,                                                                                                 // 7968
  performance : true,                                                                                                  // 7969
                                                                                                                       // 7970
  icon     : false,                                                                                                    // 7971
  source   : false,                                                                                                    // 7972
  url      : false,                                                                                                    // 7973
  id       : false,                                                                                                    // 7974
                                                                                                                       // 7975
  // standard video settings                                                                                           // 7976
  autoplay  : 'auto',                                                                                                  // 7977
  color     : '#444444',                                                                                               // 7978
  hd        : true,                                                                                                    // 7979
  brandedUI : false,                                                                                                   // 7980
                                                                                                                       // 7981
  // additional parameters to include with the embed                                                                   // 7982
  parameters: false,                                                                                                   // 7983
                                                                                                                       // 7984
  onDisplay            : function() {},                                                                                // 7985
  onPlaceholderDisplay : function() {},                                                                                // 7986
  onReset              : function() {},                                                                                // 7987
  onCreate             : function(url) {},                                                                             // 7988
  onEmbed              : function(parameters) {                                                                        // 7989
    return parameters;                                                                                                 // 7990
  },                                                                                                                   // 7991
                                                                                                                       // 7992
  metadata    : {                                                                                                      // 7993
    id          : 'id',                                                                                                // 7994
    icon        : 'icon',                                                                                              // 7995
    placeholder : 'placeholder',                                                                                       // 7996
    source      : 'source',                                                                                            // 7997
    url         : 'url'                                                                                                // 7998
  },                                                                                                                   // 7999
                                                                                                                       // 8000
  error : {                                                                                                            // 8001
    noURL  : 'No URL specified',                                                                                       // 8002
    method : 'The method you called is not defined'                                                                    // 8003
  },                                                                                                                   // 8004
                                                                                                                       // 8005
  className : {                                                                                                        // 8006
    active : 'active',                                                                                                 // 8007
    embed  : 'embed'                                                                                                   // 8008
  },                                                                                                                   // 8009
                                                                                                                       // 8010
  selector : {                                                                                                         // 8011
    embed       : '.embed',                                                                                            // 8012
    placeholder : '.placeholder',                                                                                      // 8013
    icon        : '.icon'                                                                                              // 8014
  },                                                                                                                   // 8015
                                                                                                                       // 8016
  sources: {                                                                                                           // 8017
    youtube: {                                                                                                         // 8018
      name   : 'youtube',                                                                                              // 8019
      type   : 'video',                                                                                                // 8020
      icon   : 'video play',                                                                                           // 8021
      domain : 'youtube.com',                                                                                          // 8022
      url    : '//www.youtube.com/embed/{id}',                                                                         // 8023
      parameters: function(settings) {                                                                                 // 8024
        return {                                                                                                       // 8025
          autohide       : !settings.brandedUI,                                                                        // 8026
          autoplay       : settings.autoplay,                                                                          // 8027
          color          : settings.colors || undefined,                                                               // 8028
          hq             : settings.hd,                                                                                // 8029
          jsapi          : settings.api,                                                                               // 8030
          modestbranding : !settings.brandedUI                                                                         // 8031
        };                                                                                                             // 8032
      }                                                                                                                // 8033
    },                                                                                                                 // 8034
    vimeo: {                                                                                                           // 8035
      name   : 'vimeo',                                                                                                // 8036
      type   : 'video',                                                                                                // 8037
      icon   : 'video play',                                                                                           // 8038
      domain : 'vimeo.com',                                                                                            // 8039
      url    : '//player.vimeo.com/video/{id}',                                                                        // 8040
      parameters: function(settings) {                                                                                 // 8041
        return {                                                                                                       // 8042
          api      : settings.api,                                                                                     // 8043
          autoplay : settings.autoplay,                                                                                // 8044
          byline   : settings.brandedUI,                                                                               // 8045
          color    : settings.colors || undefined,                                                                     // 8046
          portrait : settings.brandedUI,                                                                               // 8047
          title    : settings.brandedUI                                                                                // 8048
        };                                                                                                             // 8049
      }                                                                                                                // 8050
    }                                                                                                                  // 8051
  },                                                                                                                   // 8052
                                                                                                                       // 8053
  templates: {                                                                                                         // 8054
    iframe : function(url, parameters) {                                                                               // 8055
      return ''                                                                                                        // 8056
        + '<iframe src="' + url + '?=' + parameters + '"'                                                              // 8057
        + ' width="100%" height="100%"'                                                                                // 8058
        + ' frameborder="0" scrolling="no" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'         // 8059
      ;                                                                                                                // 8060
    },                                                                                                                 // 8061
    placeholder : function(image, icon) {                                                                              // 8062
      var                                                                                                              // 8063
        html = ''                                                                                                      // 8064
      ;                                                                                                                // 8065
      if(icon) {                                                                                                       // 8066
        html += '<i class="' + icon + ' icon"></i>';                                                                   // 8067
      }                                                                                                                // 8068
      if(image) {                                                                                                      // 8069
        html += '<img class="placeholder" src="' + image + '">';                                                       // 8070
      }                                                                                                                // 8071
      return html;                                                                                                     // 8072
    }                                                                                                                  // 8073
  },                                                                                                                   // 8074
                                                                                                                       // 8075
  // NOT YET IMPLEMENTED                                                                                               // 8076
  api     : true,                                                                                                      // 8077
  onPause : function() {},                                                                                             // 8078
  onPlay  : function() {},                                                                                             // 8079
  onStop  : function() {}                                                                                              // 8080
                                                                                                                       // 8081
};                                                                                                                     // 8082
                                                                                                                       // 8083
                                                                                                                       // 8084
                                                                                                                       // 8085
})( jQuery, window , document );                                                                                       // 8086
                                                                                                                       // 8087
/*!                                                                                                                    // 8088
 * # Semantic UI 2.1.2 - Modal                                                                                         // 8089
 * http://github.com/semantic-org/semantic-ui/                                                                         // 8090
 *                                                                                                                     // 8091
 *                                                                                                                     // 8092
 * Copyright 2015 Contributors                                                                                         // 8093
 * Released under the MIT license                                                                                      // 8094
 * http://opensource.org/licenses/MIT                                                                                  // 8095
 *                                                                                                                     // 8096
 */                                                                                                                    // 8097
                                                                                                                       // 8098
;(function ( $, window, document, undefined ) {                                                                        // 8099
                                                                                                                       // 8100
"use strict";                                                                                                          // 8101
                                                                                                                       // 8102
$.fn.modal = function(parameters) {                                                                                    // 8103
  var                                                                                                                  // 8104
    $allModules    = $(this),                                                                                          // 8105
    $window        = $(window),                                                                                        // 8106
    $document      = $(document),                                                                                      // 8107
    $body          = $('body'),                                                                                        // 8108
                                                                                                                       // 8109
    moduleSelector = $allModules.selector || '',                                                                       // 8110
                                                                                                                       // 8111
    time           = new Date().getTime(),                                                                             // 8112
    performance    = [],                                                                                               // 8113
                                                                                                                       // 8114
    query          = arguments[0],                                                                                     // 8115
    methodInvoked  = (typeof query == 'string'),                                                                       // 8116
    queryArguments = [].slice.call(arguments, 1),                                                                      // 8117
                                                                                                                       // 8118
    requestAnimationFrame = window.requestAnimationFrame                                                               // 8119
      || window.mozRequestAnimationFrame                                                                               // 8120
      || window.webkitRequestAnimationFrame                                                                            // 8121
      || window.msRequestAnimationFrame                                                                                // 8122
      || function(callback) { setTimeout(callback, 0); },                                                              // 8123
                                                                                                                       // 8124
    returnedValue                                                                                                      // 8125
  ;                                                                                                                    // 8126
                                                                                                                       // 8127
  $allModules                                                                                                          // 8128
    .each(function() {                                                                                                 // 8129
      var                                                                                                              // 8130
        settings    = ( $.isPlainObject(parameters) )                                                                  // 8131
          ? $.extend(true, {}, $.fn.modal.settings, parameters)                                                        // 8132
          : $.extend({}, $.fn.modal.settings),                                                                         // 8133
                                                                                                                       // 8134
        selector        = settings.selector,                                                                           // 8135
        className       = settings.className,                                                                          // 8136
        namespace       = settings.namespace,                                                                          // 8137
        error           = settings.error,                                                                              // 8138
                                                                                                                       // 8139
        eventNamespace  = '.' + namespace,                                                                             // 8140
        moduleNamespace = 'module-' + namespace,                                                                       // 8141
                                                                                                                       // 8142
        $module         = $(this),                                                                                     // 8143
        $context        = $(settings.context),                                                                         // 8144
        $close          = $module.find(selector.close),                                                                // 8145
                                                                                                                       // 8146
        $allModals,                                                                                                    // 8147
        $otherModals,                                                                                                  // 8148
        $focusedElement,                                                                                               // 8149
        $dimmable,                                                                                                     // 8150
        $dimmer,                                                                                                       // 8151
                                                                                                                       // 8152
        element         = this,                                                                                        // 8153
        instance        = $module.data(moduleNamespace),                                                               // 8154
                                                                                                                       // 8155
        elementNamespace,                                                                                              // 8156
        id,                                                                                                            // 8157
        observer,                                                                                                      // 8158
        module                                                                                                         // 8159
      ;                                                                                                                // 8160
      module  = {                                                                                                      // 8161
                                                                                                                       // 8162
        initialize: function() {                                                                                       // 8163
          module.verbose('Initializing dimmer', $context);                                                             // 8164
                                                                                                                       // 8165
          module.create.id();                                                                                          // 8166
          module.create.dimmer();                                                                                      // 8167
          module.refreshModals();                                                                                      // 8168
                                                                                                                       // 8169
          module.bind.events();                                                                                        // 8170
          if(settings.observeChanges) {                                                                                // 8171
            module.observeChanges();                                                                                   // 8172
          }                                                                                                            // 8173
          module.instantiate();                                                                                        // 8174
        },                                                                                                             // 8175
                                                                                                                       // 8176
        instantiate: function() {                                                                                      // 8177
          module.verbose('Storing instance of modal');                                                                 // 8178
          instance = module;                                                                                           // 8179
          $module                                                                                                      // 8180
            .data(moduleNamespace, instance)                                                                           // 8181
          ;                                                                                                            // 8182
        },                                                                                                             // 8183
                                                                                                                       // 8184
        create: {                                                                                                      // 8185
          dimmer: function() {                                                                                         // 8186
            var                                                                                                        // 8187
              defaultSettings = {                                                                                      // 8188
                debug      : settings.debug,                                                                           // 8189
                dimmerName : 'modals',                                                                                 // 8190
                duration   : {                                                                                         // 8191
                  show     : settings.duration,                                                                        // 8192
                  hide     : settings.duration                                                                         // 8193
                }                                                                                                      // 8194
              },                                                                                                       // 8195
              dimmerSettings = $.extend(true, defaultSettings, settings.dimmerSettings)                                // 8196
            ;                                                                                                          // 8197
            if(settings.inverted) {                                                                                    // 8198
              dimmerSettings.variation = (dimmerSettings.variation !== undefined)                                      // 8199
                ? dimmerSettings.variation + ' inverted'                                                               // 8200
                : 'inverted'                                                                                           // 8201
              ;                                                                                                        // 8202
            }                                                                                                          // 8203
            if($.fn.dimmer === undefined) {                                                                            // 8204
              module.error(error.dimmer);                                                                              // 8205
              return;                                                                                                  // 8206
            }                                                                                                          // 8207
            module.debug('Creating dimmer with settings', dimmerSettings);                                             // 8208
            $dimmable = $context.dimmer(dimmerSettings);                                                               // 8209
            if(settings.detachable) {                                                                                  // 8210
              module.verbose('Modal is detachable, moving content into dimmer');                                       // 8211
              $dimmable.dimmer('add content', $module);                                                                // 8212
            }                                                                                                          // 8213
            else {                                                                                                     // 8214
              module.set.undetached();                                                                                 // 8215
            }                                                                                                          // 8216
            if(settings.blurring) {                                                                                    // 8217
              $dimmable.addClass(className.blurring);                                                                  // 8218
            }                                                                                                          // 8219
            $dimmer = $dimmable.dimmer('get dimmer');                                                                  // 8220
          },                                                                                                           // 8221
          id: function() {                                                                                             // 8222
            id = (Math.random().toString(16) + '000000000').substr(2,8);                                               // 8223
            elementNamespace = '.' + id;                                                                               // 8224
            module.verbose('Creating unique id for element', id);                                                      // 8225
          }                                                                                                            // 8226
        },                                                                                                             // 8227
                                                                                                                       // 8228
        destroy: function() {                                                                                          // 8229
          module.verbose('Destroying previous modal');                                                                 // 8230
          $module                                                                                                      // 8231
            .removeData(moduleNamespace)                                                                               // 8232
            .off(eventNamespace)                                                                                       // 8233
          ;                                                                                                            // 8234
          $window.off(elementNamespace);                                                                               // 8235
          $close.off(eventNamespace);                                                                                  // 8236
          $context.dimmer('destroy');                                                                                  // 8237
        },                                                                                                             // 8238
                                                                                                                       // 8239
        observeChanges: function() {                                                                                   // 8240
          if('MutationObserver' in window) {                                                                           // 8241
            observer = new MutationObserver(function(mutations) {                                                      // 8242
              module.debug('DOM tree modified, refreshing');                                                           // 8243
              module.refresh();                                                                                        // 8244
            });                                                                                                        // 8245
            observer.observe(element, {                                                                                // 8246
              childList : true,                                                                                        // 8247
              subtree   : true                                                                                         // 8248
            });                                                                                                        // 8249
            module.debug('Setting up mutation observer', observer);                                                    // 8250
          }                                                                                                            // 8251
        },                                                                                                             // 8252
                                                                                                                       // 8253
        refresh: function() {                                                                                          // 8254
          module.remove.scrolling();                                                                                   // 8255
          module.cacheSizes();                                                                                         // 8256
          module.set.screenHeight();                                                                                   // 8257
          module.set.type();                                                                                           // 8258
          module.set.position();                                                                                       // 8259
        },                                                                                                             // 8260
                                                                                                                       // 8261
        refreshModals: function() {                                                                                    // 8262
          $otherModals = $module.siblings(selector.modal);                                                             // 8263
          $allModals   = $otherModals.add($module);                                                                    // 8264
        },                                                                                                             // 8265
                                                                                                                       // 8266
        attachEvents: function(selector, event) {                                                                      // 8267
          var                                                                                                          // 8268
            $toggle = $(selector)                                                                                      // 8269
          ;                                                                                                            // 8270
          event = $.isFunction(module[event])                                                                          // 8271
            ? module[event]                                                                                            // 8272
            : module.toggle                                                                                            // 8273
          ;                                                                                                            // 8274
          if($toggle.length > 0) {                                                                                     // 8275
            module.debug('Attaching modal events to element', selector, event);                                        // 8276
            $toggle                                                                                                    // 8277
              .off(eventNamespace)                                                                                     // 8278
              .on('click' + eventNamespace, event)                                                                     // 8279
            ;                                                                                                          // 8280
          }                                                                                                            // 8281
          else {                                                                                                       // 8282
            module.error(error.notFound, selector);                                                                    // 8283
          }                                                                                                            // 8284
        },                                                                                                             // 8285
                                                                                                                       // 8286
        bind: {                                                                                                        // 8287
          events: function() {                                                                                         // 8288
            module.verbose('Attaching events');                                                                        // 8289
            $module                                                                                                    // 8290
              .on('click' + eventNamespace, selector.close, module.event.close)                                        // 8291
              .on('click' + eventNamespace, selector.approve, module.event.approve)                                    // 8292
              .on('click' + eventNamespace, selector.deny, module.event.deny)                                          // 8293
            ;                                                                                                          // 8294
            $window                                                                                                    // 8295
              .on('resize' + elementNamespace, module.event.resize)                                                    // 8296
            ;                                                                                                          // 8297
          }                                                                                                            // 8298
        },                                                                                                             // 8299
                                                                                                                       // 8300
        get: {                                                                                                         // 8301
          id: function() {                                                                                             // 8302
            return (Math.random().toString(16) + '000000000').substr(2,8);                                             // 8303
          }                                                                                                            // 8304
        },                                                                                                             // 8305
                                                                                                                       // 8306
        event: {                                                                                                       // 8307
          approve: function() {                                                                                        // 8308
            if(settings.onApprove.call(element, $(this)) === false) {                                                  // 8309
              module.verbose('Approve callback returned false cancelling hide');                                       // 8310
              return;                                                                                                  // 8311
            }                                                                                                          // 8312
            module.hide();                                                                                             // 8313
          },                                                                                                           // 8314
          deny: function() {                                                                                           // 8315
            if(settings.onDeny.call(element, $(this)) === false) {                                                     // 8316
              module.verbose('Deny callback returned false cancelling hide');                                          // 8317
              return;                                                                                                  // 8318
            }                                                                                                          // 8319
            module.hide();                                                                                             // 8320
          },                                                                                                           // 8321
          close: function() {                                                                                          // 8322
            module.hide();                                                                                             // 8323
          },                                                                                                           // 8324
          click: function(event) {                                                                                     // 8325
            var                                                                                                        // 8326
              $target   = $(event.target),                                                                             // 8327
              isInModal = ($target.closest(selector.modal).length > 0),                                                // 8328
              isInDOM   = $.contains(document.documentElement, event.target)                                           // 8329
            ;                                                                                                          // 8330
            if(!isInModal && isInDOM) {                                                                                // 8331
              module.debug('Dimmer clicked, hiding all modals');                                                       // 8332
              if( module.is.active() ) {                                                                               // 8333
                module.remove.clickaway();                                                                             // 8334
                if(settings.allowMultiple) {                                                                           // 8335
                  module.hide();                                                                                       // 8336
                }                                                                                                      // 8337
                else {                                                                                                 // 8338
                  module.hideAll();                                                                                    // 8339
                }                                                                                                      // 8340
              }                                                                                                        // 8341
            }                                                                                                          // 8342
          },                                                                                                           // 8343
          debounce: function(method, delay) {                                                                          // 8344
            clearTimeout(module.timer);                                                                                // 8345
            module.timer = setTimeout(method, delay);                                                                  // 8346
          },                                                                                                           // 8347
          keyboard: function(event) {                                                                                  // 8348
            var                                                                                                        // 8349
              keyCode   = event.which,                                                                                 // 8350
              escapeKey = 27                                                                                           // 8351
            ;                                                                                                          // 8352
            if(keyCode == escapeKey) {                                                                                 // 8353
              if(settings.closable) {                                                                                  // 8354
                module.debug('Escape key pressed hiding modal');                                                       // 8355
                module.hide();                                                                                         // 8356
              }                                                                                                        // 8357
              else {                                                                                                   // 8358
                module.debug('Escape key pressed, but closable is set to false');                                      // 8359
              }                                                                                                        // 8360
              event.preventDefault();                                                                                  // 8361
            }                                                                                                          // 8362
          },                                                                                                           // 8363
          resize: function() {                                                                                         // 8364
            if( $dimmable.dimmer('is active') ) {                                                                      // 8365
              requestAnimationFrame(module.refresh);                                                                   // 8366
            }                                                                                                          // 8367
          }                                                                                                            // 8368
        },                                                                                                             // 8369
                                                                                                                       // 8370
        toggle: function() {                                                                                           // 8371
          if( module.is.active() || module.is.animating() ) {                                                          // 8372
            module.hide();                                                                                             // 8373
          }                                                                                                            // 8374
          else {                                                                                                       // 8375
            module.show();                                                                                             // 8376
          }                                                                                                            // 8377
        },                                                                                                             // 8378
                                                                                                                       // 8379
        show: function(callback) {                                                                                     // 8380
          callback = $.isFunction(callback)                                                                            // 8381
            ? callback                                                                                                 // 8382
            : function(){}                                                                                             // 8383
          ;                                                                                                            // 8384
          module.refreshModals();                                                                                      // 8385
          module.showModal(callback);                                                                                  // 8386
        },                                                                                                             // 8387
                                                                                                                       // 8388
        hide: function(callback) {                                                                                     // 8389
          callback = $.isFunction(callback)                                                                            // 8390
            ? callback                                                                                                 // 8391
            : function(){}                                                                                             // 8392
          ;                                                                                                            // 8393
          module.refreshModals();                                                                                      // 8394
          module.hideModal(callback);                                                                                  // 8395
        },                                                                                                             // 8396
                                                                                                                       // 8397
        showModal: function(callback) {                                                                                // 8398
          callback = $.isFunction(callback)                                                                            // 8399
            ? callback                                                                                                 // 8400
            : function(){}                                                                                             // 8401
          ;                                                                                                            // 8402
          if( module.is.animating() || !module.is.active() ) {                                                         // 8403
                                                                                                                       // 8404
            module.showDimmer();                                                                                       // 8405
            module.cacheSizes();                                                                                       // 8406
            module.set.position();                                                                                     // 8407
            module.set.screenHeight();                                                                                 // 8408
            module.set.type();                                                                                         // 8409
            module.set.clickaway();                                                                                    // 8410
                                                                                                                       // 8411
            if( !settings.allowMultiple && module.others.active() ) {                                                  // 8412
              module.hideOthers(module.showModal);                                                                     // 8413
            }                                                                                                          // 8414
            else {                                                                                                     // 8415
              settings.onShow.call(element);                                                                           // 8416
              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {         // 8417
                module.debug('Showing modal with css animations');                                                     // 8418
                $module                                                                                                // 8419
                  .transition({                                                                                        // 8420
                    debug       : settings.debug,                                                                      // 8421
                    animation   : settings.transition + ' in',                                                         // 8422
                    queue       : settings.queue,                                                                      // 8423
                    duration    : settings.duration,                                                                   // 8424
                    useFailSafe : true,                                                                                // 8425
                    onComplete : function() {                                                                          // 8426
                      settings.onVisible.apply(element);                                                               // 8427
                      module.add.keyboardShortcuts();                                                                  // 8428
                      module.save.focus();                                                                             // 8429
                      module.set.active();                                                                             // 8430
                      if(settings.autofocus) {                                                                         // 8431
                        module.set.autofocus();                                                                        // 8432
                      }                                                                                                // 8433
                      callback();                                                                                      // 8434
                    }                                                                                                  // 8435
                  })                                                                                                   // 8436
                ;                                                                                                      // 8437
              }                                                                                                        // 8438
              else {                                                                                                   // 8439
                module.error(error.noTransition);                                                                      // 8440
              }                                                                                                        // 8441
            }                                                                                                          // 8442
          }                                                                                                            // 8443
          else {                                                                                                       // 8444
            module.debug('Modal is already visible');                                                                  // 8445
          }                                                                                                            // 8446
        },                                                                                                             // 8447
                                                                                                                       // 8448
        hideModal: function(callback, keepDimmed) {                                                                    // 8449
          callback = $.isFunction(callback)                                                                            // 8450
            ? callback                                                                                                 // 8451
            : function(){}                                                                                             // 8452
          ;                                                                                                            // 8453
          module.debug('Hiding modal');                                                                                // 8454
          settings.onHide.call(element);                                                                               // 8455
                                                                                                                       // 8456
          if( module.is.animating() || module.is.active() ) {                                                          // 8457
            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {           // 8458
              module.remove.active();                                                                                  // 8459
              $module                                                                                                  // 8460
                .transition({                                                                                          // 8461
                  debug       : settings.debug,                                                                        // 8462
                  animation   : settings.transition + ' out',                                                          // 8463
                  queue       : settings.queue,                                                                        // 8464
                  duration    : settings.duration,                                                                     // 8465
                  useFailSafe : true,                                                                                  // 8466
                  onStart     : function() {                                                                           // 8467
                    if(!module.others.active() && !keepDimmed) {                                                       // 8468
                      module.hideDimmer();                                                                             // 8469
                    }                                                                                                  // 8470
                    module.remove.keyboardShortcuts();                                                                 // 8471
                  },                                                                                                   // 8472
                  onComplete : function() {                                                                            // 8473
                    settings.onHidden.call(element);                                                                   // 8474
                    module.restore.focus();                                                                            // 8475
                    callback();                                                                                        // 8476
                  }                                                                                                    // 8477
                })                                                                                                     // 8478
              ;                                                                                                        // 8479
            }                                                                                                          // 8480
            else {                                                                                                     // 8481
              module.error(error.noTransition);                                                                        // 8482
            }                                                                                                          // 8483
          }                                                                                                            // 8484
        },                                                                                                             // 8485
                                                                                                                       // 8486
        showDimmer: function() {                                                                                       // 8487
          if($dimmable.dimmer('is animating') || !$dimmable.dimmer('is active') ) {                                    // 8488
            module.debug('Showing dimmer');                                                                            // 8489
            $dimmable.dimmer('show');                                                                                  // 8490
          }                                                                                                            // 8491
          else {                                                                                                       // 8492
            module.debug('Dimmer already visible');                                                                    // 8493
          }                                                                                                            // 8494
        },                                                                                                             // 8495
                                                                                                                       // 8496
        hideDimmer: function() {                                                                                       // 8497
          if( $dimmable.dimmer('is animating') || ($dimmable.dimmer('is active')) ) {                                  // 8498
            $dimmable.dimmer('hide', function() {                                                                      // 8499
              module.remove.clickaway();                                                                               // 8500
              module.remove.screenHeight();                                                                            // 8501
            });                                                                                                        // 8502
          }                                                                                                            // 8503
          else {                                                                                                       // 8504
            module.debug('Dimmer is not visible cannot hide');                                                         // 8505
            return;                                                                                                    // 8506
          }                                                                                                            // 8507
        },                                                                                                             // 8508
                                                                                                                       // 8509
        hideAll: function(callback) {                                                                                  // 8510
          var                                                                                                          // 8511
            $visibleModals = $allModals.filter('.' + className.active + ', .' + className.animating)                   // 8512
          ;                                                                                                            // 8513
          callback = $.isFunction(callback)                                                                            // 8514
            ? callback                                                                                                 // 8515
            : function(){}                                                                                             // 8516
          ;                                                                                                            // 8517
          if( $visibleModals.length > 0 ) {                                                                            // 8518
            module.debug('Hiding all visible modals');                                                                 // 8519
            module.hideDimmer();                                                                                       // 8520
            $visibleModals                                                                                             // 8521
              .modal('hide modal', callback)                                                                           // 8522
            ;                                                                                                          // 8523
          }                                                                                                            // 8524
        },                                                                                                             // 8525
                                                                                                                       // 8526
        hideOthers: function(callback) {                                                                               // 8527
          var                                                                                                          // 8528
            $visibleModals = $otherModals.filter('.' + className.active + ', .' + className.animating)                 // 8529
          ;                                                                                                            // 8530
          callback = $.isFunction(callback)                                                                            // 8531
            ? callback                                                                                                 // 8532
            : function(){}                                                                                             // 8533
          ;                                                                                                            // 8534
          if( $visibleModals.length > 0 ) {                                                                            // 8535
            module.debug('Hiding other modals', $otherModals);                                                         // 8536
            $visibleModals                                                                                             // 8537
              .modal('hide modal', callback, true)                                                                     // 8538
            ;                                                                                                          // 8539
          }                                                                                                            // 8540
        },                                                                                                             // 8541
                                                                                                                       // 8542
        others: {                                                                                                      // 8543
          active: function() {                                                                                         // 8544
            return ($otherModals.filter('.' + className.active).length > 0);                                           // 8545
          },                                                                                                           // 8546
          animating: function() {                                                                                      // 8547
            return ($otherModals.filter('.' + className.animating).length > 0);                                        // 8548
          }                                                                                                            // 8549
        },                                                                                                             // 8550
                                                                                                                       // 8551
                                                                                                                       // 8552
        add: {                                                                                                         // 8553
          keyboardShortcuts: function() {                                                                              // 8554
            module.verbose('Adding keyboard shortcuts');                                                               // 8555
            $document                                                                                                  // 8556
              .on('keyup' + eventNamespace, module.event.keyboard)                                                     // 8557
            ;                                                                                                          // 8558
          }                                                                                                            // 8559
        },                                                                                                             // 8560
                                                                                                                       // 8561
        save: {                                                                                                        // 8562
          focus: function() {                                                                                          // 8563
            $focusedElement = $(document.activeElement).blur();                                                        // 8564
          }                                                                                                            // 8565
        },                                                                                                             // 8566
                                                                                                                       // 8567
        restore: {                                                                                                     // 8568
          focus: function() {                                                                                          // 8569
            if($focusedElement && $focusedElement.length > 0) {                                                        // 8570
              $focusedElement.focus();                                                                                 // 8571
            }                                                                                                          // 8572
          }                                                                                                            // 8573
        },                                                                                                             // 8574
                                                                                                                       // 8575
        remove: {                                                                                                      // 8576
          active: function() {                                                                                         // 8577
            $module.removeClass(className.active);                                                                     // 8578
          },                                                                                                           // 8579
          clickaway: function() {                                                                                      // 8580
            if(settings.closable) {                                                                                    // 8581
              $dimmer                                                                                                  // 8582
                .off('click' + elementNamespace)                                                                       // 8583
              ;                                                                                                        // 8584
            }                                                                                                          // 8585
          },                                                                                                           // 8586
          bodyStyle: function() {                                                                                      // 8587
            if($body.attr('style') === '') {                                                                           // 8588
              module.verbose('Removing style attribute');                                                              // 8589
              $body.removeAttr('style');                                                                               // 8590
            }                                                                                                          // 8591
          },                                                                                                           // 8592
          screenHeight: function() {                                                                                   // 8593
            module.debug('Removing page height');                                                                      // 8594
            $body                                                                                                      // 8595
              .css('height', '')                                                                                       // 8596
            ;                                                                                                          // 8597
          },                                                                                                           // 8598
          keyboardShortcuts: function() {                                                                              // 8599
            module.verbose('Removing keyboard shortcuts');                                                             // 8600
            $document                                                                                                  // 8601
              .off('keyup' + eventNamespace)                                                                           // 8602
            ;                                                                                                          // 8603
          },                                                                                                           // 8604
          scrolling: function() {                                                                                      // 8605
            $dimmable.removeClass(className.scrolling);                                                                // 8606
            $module.removeClass(className.scrolling);                                                                  // 8607
          }                                                                                                            // 8608
        },                                                                                                             // 8609
                                                                                                                       // 8610
        cacheSizes: function() {                                                                                       // 8611
          var                                                                                                          // 8612
            modalHeight = $module.outerHeight()                                                                        // 8613
          ;                                                                                                            // 8614
          if(module.cache === undefined || modalHeight !== 0) {                                                        // 8615
            module.cache = {                                                                                           // 8616
              pageHeight    : $(document).outerHeight(),                                                               // 8617
              height        : modalHeight + settings.offset,                                                           // 8618
              contextHeight : (settings.context == 'body')                                                             // 8619
                ? $(window).height()                                                                                   // 8620
                : $dimmable.height()                                                                                   // 8621
            };                                                                                                         // 8622
          }                                                                                                            // 8623
          module.debug('Caching modal and container sizes', module.cache);                                             // 8624
        },                                                                                                             // 8625
                                                                                                                       // 8626
        can: {                                                                                                         // 8627
          fit: function() {                                                                                            // 8628
            return ( ( module.cache.height + (settings.padding * 2) ) < module.cache.contextHeight);                   // 8629
          }                                                                                                            // 8630
        },                                                                                                             // 8631
                                                                                                                       // 8632
        is: {                                                                                                          // 8633
          active: function() {                                                                                         // 8634
            return $module.hasClass(className.active);                                                                 // 8635
          },                                                                                                           // 8636
          animating: function() {                                                                                      // 8637
            return $module.transition('is supported')                                                                  // 8638
              ? $module.transition('is animating')                                                                     // 8639
              : $module.is(':visible')                                                                                 // 8640
            ;                                                                                                          // 8641
          },                                                                                                           // 8642
          scrolling: function() {                                                                                      // 8643
            return $dimmable.hasClass(className.scrolling);                                                            // 8644
          },                                                                                                           // 8645
          modernBrowser: function() {                                                                                  // 8646
            // appName for IE11 reports 'Netscape' can no longer use                                                   // 8647
            return !(window.ActiveXObject || "ActiveXObject" in window);                                               // 8648
          }                                                                                                            // 8649
        },                                                                                                             // 8650
                                                                                                                       // 8651
        set: {                                                                                                         // 8652
          autofocus: function() {                                                                                      // 8653
            var                                                                                                        // 8654
              $inputs    = $module.find(':input').filter(':visible'),                                                  // 8655
              $autofocus = $inputs.filter('[autofocus]'),                                                              // 8656
              $input     = ($autofocus.length > 0)                                                                     // 8657
                ? $autofocus.first()                                                                                   // 8658
                : $inputs.first()                                                                                      // 8659
            ;                                                                                                          // 8660
            if($input.length > 0) {                                                                                    // 8661
              $input.focus();                                                                                          // 8662
            }                                                                                                          // 8663
          },                                                                                                           // 8664
          clickaway: function() {                                                                                      // 8665
            if(settings.closable) {                                                                                    // 8666
              $dimmer                                                                                                  // 8667
                .on('click' + elementNamespace, module.event.click)                                                    // 8668
              ;                                                                                                        // 8669
            }                                                                                                          // 8670
          },                                                                                                           // 8671
          screenHeight: function() {                                                                                   // 8672
            if( module.can.fit() ) {                                                                                   // 8673
              $body.css('height', '');                                                                                 // 8674
            }                                                                                                          // 8675
            else {                                                                                                     // 8676
              module.debug('Modal is taller than page content, resizing page height');                                 // 8677
              $body                                                                                                    // 8678
                .css('height', module.cache.height + (settings.padding * 2) )                                          // 8679
              ;                                                                                                        // 8680
            }                                                                                                          // 8681
          },                                                                                                           // 8682
          active: function() {                                                                                         // 8683
            $module.addClass(className.active);                                                                        // 8684
          },                                                                                                           // 8685
          scrolling: function() {                                                                                      // 8686
            $dimmable.addClass(className.scrolling);                                                                   // 8687
            $module.addClass(className.scrolling);                                                                     // 8688
          },                                                                                                           // 8689
          type: function() {                                                                                           // 8690
            if(module.can.fit()) {                                                                                     // 8691
              module.verbose('Modal fits on screen');                                                                  // 8692
              if(!module.others.active() && !module.others.animating()) {                                              // 8693
                module.remove.scrolling();                                                                             // 8694
              }                                                                                                        // 8695
            }                                                                                                          // 8696
            else {                                                                                                     // 8697
              module.verbose('Modal cannot fit on screen setting to scrolling');                                       // 8698
              module.set.scrolling();                                                                                  // 8699
            }                                                                                                          // 8700
          },                                                                                                           // 8701
          position: function() {                                                                                       // 8702
            module.verbose('Centering modal on page', module.cache);                                                   // 8703
            if(module.can.fit()) {                                                                                     // 8704
              $module                                                                                                  // 8705
                .css({                                                                                                 // 8706
                  top: '',                                                                                             // 8707
                  marginTop: -(module.cache.height / 2)                                                                // 8708
                })                                                                                                     // 8709
              ;                                                                                                        // 8710
            }                                                                                                          // 8711
            else {                                                                                                     // 8712
              $module                                                                                                  // 8713
                .css({                                                                                                 // 8714
                  marginTop : '',                                                                                      // 8715
                  top       : $document.scrollTop()                                                                    // 8716
                })                                                                                                     // 8717
              ;                                                                                                        // 8718
            }                                                                                                          // 8719
          },                                                                                                           // 8720
          undetached: function() {                                                                                     // 8721
            $dimmable.addClass(className.undetached);                                                                  // 8722
          }                                                                                                            // 8723
        },                                                                                                             // 8724
                                                                                                                       // 8725
        setting: function(name, value) {                                                                               // 8726
          module.debug('Changing setting', name, value);                                                               // 8727
          if( $.isPlainObject(name) ) {                                                                                // 8728
            $.extend(true, settings, name);                                                                            // 8729
          }                                                                                                            // 8730
          else if(value !== undefined) {                                                                               // 8731
            settings[name] = value;                                                                                    // 8732
          }                                                                                                            // 8733
          else {                                                                                                       // 8734
            return settings[name];                                                                                     // 8735
          }                                                                                                            // 8736
        },                                                                                                             // 8737
        internal: function(name, value) {                                                                              // 8738
          if( $.isPlainObject(name) ) {                                                                                // 8739
            $.extend(true, module, name);                                                                              // 8740
          }                                                                                                            // 8741
          else if(value !== undefined) {                                                                               // 8742
            module[name] = value;                                                                                      // 8743
          }                                                                                                            // 8744
          else {                                                                                                       // 8745
            return module[name];                                                                                       // 8746
          }                                                                                                            // 8747
        },                                                                                                             // 8748
        debug: function() {                                                                                            // 8749
          if(settings.debug) {                                                                                         // 8750
            if(settings.performance) {                                                                                 // 8751
              module.performance.log(arguments);                                                                       // 8752
            }                                                                                                          // 8753
            else {                                                                                                     // 8754
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 8755
              module.debug.apply(console, arguments);                                                                  // 8756
            }                                                                                                          // 8757
          }                                                                                                            // 8758
        },                                                                                                             // 8759
        verbose: function() {                                                                                          // 8760
          if(settings.verbose && settings.debug) {                                                                     // 8761
            if(settings.performance) {                                                                                 // 8762
              module.performance.log(arguments);                                                                       // 8763
            }                                                                                                          // 8764
            else {                                                                                                     // 8765
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 8766
              module.verbose.apply(console, arguments);                                                                // 8767
            }                                                                                                          // 8768
          }                                                                                                            // 8769
        },                                                                                                             // 8770
        error: function() {                                                                                            // 8771
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 8772
          module.error.apply(console, arguments);                                                                      // 8773
        },                                                                                                             // 8774
        performance: {                                                                                                 // 8775
          log: function(message) {                                                                                     // 8776
            var                                                                                                        // 8777
              currentTime,                                                                                             // 8778
              executionTime,                                                                                           // 8779
              previousTime                                                                                             // 8780
            ;                                                                                                          // 8781
            if(settings.performance) {                                                                                 // 8782
              currentTime   = new Date().getTime();                                                                    // 8783
              previousTime  = time || currentTime;                                                                     // 8784
              executionTime = currentTime - previousTime;                                                              // 8785
              time          = currentTime;                                                                             // 8786
              performance.push({                                                                                       // 8787
                'Name'           : message[0],                                                                         // 8788
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 8789
                'Element'        : element,                                                                            // 8790
                'Execution Time' : executionTime                                                                       // 8791
              });                                                                                                      // 8792
            }                                                                                                          // 8793
            clearTimeout(module.performance.timer);                                                                    // 8794
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 8795
          },                                                                                                           // 8796
          display: function() {                                                                                        // 8797
            var                                                                                                        // 8798
              title = settings.name + ':',                                                                             // 8799
              totalTime = 0                                                                                            // 8800
            ;                                                                                                          // 8801
            time = false;                                                                                              // 8802
            clearTimeout(module.performance.timer);                                                                    // 8803
            $.each(performance, function(index, data) {                                                                // 8804
              totalTime += data['Execution Time'];                                                                     // 8805
            });                                                                                                        // 8806
            title += ' ' + totalTime + 'ms';                                                                           // 8807
            if(moduleSelector) {                                                                                       // 8808
              title += ' \'' + moduleSelector + '\'';                                                                  // 8809
            }                                                                                                          // 8810
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 8811
              console.groupCollapsed(title);                                                                           // 8812
              if(console.table) {                                                                                      // 8813
                console.table(performance);                                                                            // 8814
              }                                                                                                        // 8815
              else {                                                                                                   // 8816
                $.each(performance, function(index, data) {                                                            // 8817
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 8818
                });                                                                                                    // 8819
              }                                                                                                        // 8820
              console.groupEnd();                                                                                      // 8821
            }                                                                                                          // 8822
            performance = [];                                                                                          // 8823
          }                                                                                                            // 8824
        },                                                                                                             // 8825
        invoke: function(query, passedArguments, context) {                                                            // 8826
          var                                                                                                          // 8827
            object = instance,                                                                                         // 8828
            maxDepth,                                                                                                  // 8829
            found,                                                                                                     // 8830
            response                                                                                                   // 8831
          ;                                                                                                            // 8832
          passedArguments = passedArguments || queryArguments;                                                         // 8833
          context         = element         || context;                                                                // 8834
          if(typeof query == 'string' && object !== undefined) {                                                       // 8835
            query    = query.split(/[\. ]/);                                                                           // 8836
            maxDepth = query.length - 1;                                                                               // 8837
            $.each(query, function(depth, value) {                                                                     // 8838
              var camelCaseValue = (depth != maxDepth)                                                                 // 8839
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 8840
                : query                                                                                                // 8841
              ;                                                                                                        // 8842
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 8843
                object = object[camelCaseValue];                                                                       // 8844
              }                                                                                                        // 8845
              else if( object[camelCaseValue] !== undefined ) {                                                        // 8846
                found = object[camelCaseValue];                                                                        // 8847
                return false;                                                                                          // 8848
              }                                                                                                        // 8849
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 8850
                object = object[value];                                                                                // 8851
              }                                                                                                        // 8852
              else if( object[value] !== undefined ) {                                                                 // 8853
                found = object[value];                                                                                 // 8854
                return false;                                                                                          // 8855
              }                                                                                                        // 8856
              else {                                                                                                   // 8857
                return false;                                                                                          // 8858
              }                                                                                                        // 8859
            });                                                                                                        // 8860
          }                                                                                                            // 8861
          if ( $.isFunction( found ) ) {                                                                               // 8862
            response = found.apply(context, passedArguments);                                                          // 8863
          }                                                                                                            // 8864
          else if(found !== undefined) {                                                                               // 8865
            response = found;                                                                                          // 8866
          }                                                                                                            // 8867
          if($.isArray(returnedValue)) {                                                                               // 8868
            returnedValue.push(response);                                                                              // 8869
          }                                                                                                            // 8870
          else if(returnedValue !== undefined) {                                                                       // 8871
            returnedValue = [returnedValue, response];                                                                 // 8872
          }                                                                                                            // 8873
          else if(response !== undefined) {                                                                            // 8874
            returnedValue = response;                                                                                  // 8875
          }                                                                                                            // 8876
          return found;                                                                                                // 8877
        }                                                                                                              // 8878
      };                                                                                                               // 8879
                                                                                                                       // 8880
      if(methodInvoked) {                                                                                              // 8881
        if(instance === undefined) {                                                                                   // 8882
          module.initialize();                                                                                         // 8883
        }                                                                                                              // 8884
        module.invoke(query);                                                                                          // 8885
      }                                                                                                                // 8886
      else {                                                                                                           // 8887
        if(instance !== undefined) {                                                                                   // 8888
          instance.invoke('destroy');                                                                                  // 8889
        }                                                                                                              // 8890
        module.initialize();                                                                                           // 8891
      }                                                                                                                // 8892
    })                                                                                                                 // 8893
  ;                                                                                                                    // 8894
                                                                                                                       // 8895
  return (returnedValue !== undefined)                                                                                 // 8896
    ? returnedValue                                                                                                    // 8897
    : this                                                                                                             // 8898
  ;                                                                                                                    // 8899
};                                                                                                                     // 8900
                                                                                                                       // 8901
$.fn.modal.settings = {                                                                                                // 8902
                                                                                                                       // 8903
  name           : 'Modal',                                                                                            // 8904
  namespace      : 'modal',                                                                                            // 8905
                                                                                                                       // 8906
  debug          : false,                                                                                              // 8907
  verbose        : false,                                                                                              // 8908
  performance    : true,                                                                                               // 8909
                                                                                                                       // 8910
  observeChanges : false,                                                                                              // 8911
                                                                                                                       // 8912
  allowMultiple  : false,                                                                                              // 8913
  detachable     : true,                                                                                               // 8914
  closable       : true,                                                                                               // 8915
  autofocus      : true,                                                                                               // 8916
                                                                                                                       // 8917
  inverted       : false,                                                                                              // 8918
  blurring       : false,                                                                                              // 8919
                                                                                                                       // 8920
  dimmerSettings : {                                                                                                   // 8921
    closable : false,                                                                                                  // 8922
    useCSS   : true                                                                                                    // 8923
  },                                                                                                                   // 8924
                                                                                                                       // 8925
                                                                                                                       // 8926
  context    : 'body',                                                                                                 // 8927
                                                                                                                       // 8928
  queue      : false,                                                                                                  // 8929
  duration   : 500,                                                                                                    // 8930
  offset     : 0,                                                                                                      // 8931
  transition : 'scale',                                                                                                // 8932
                                                                                                                       // 8933
  // padding with edge of page                                                                                         // 8934
  padding    : 50,                                                                                                     // 8935
                                                                                                                       // 8936
  // called before show animation                                                                                      // 8937
  onShow     : function(){},                                                                                           // 8938
                                                                                                                       // 8939
  // called after show animation                                                                                       // 8940
  onVisible  : function(){},                                                                                           // 8941
                                                                                                                       // 8942
  // called before hide animation                                                                                      // 8943
  onHide     : function(){},                                                                                           // 8944
                                                                                                                       // 8945
  // called after hide animation                                                                                       // 8946
  onHidden   : function(){},                                                                                           // 8947
                                                                                                                       // 8948
  // called after approve selector match                                                                               // 8949
  onApprove  : function(){ return true; },                                                                             // 8950
                                                                                                                       // 8951
  // called after deny selector match                                                                                  // 8952
  onDeny     : function(){ return true; },                                                                             // 8953
                                                                                                                       // 8954
  selector    : {                                                                                                      // 8955
    close    : '> .close',                                                                                             // 8956
    approve  : '.actions .positive, .actions .approve, .actions .ok',                                                  // 8957
    deny     : '.actions .negative, .actions .deny, .actions .cancel',                                                 // 8958
    modal    : '.ui.modal'                                                                                             // 8959
  },                                                                                                                   // 8960
  error : {                                                                                                            // 8961
    dimmer    : 'UI Dimmer, a required component is not included in this page',                                        // 8962
    method    : 'The method you called is not defined.',                                                               // 8963
    notFound  : 'The element you specified could not be found'                                                         // 8964
  },                                                                                                                   // 8965
  className : {                                                                                                        // 8966
    active     : 'active',                                                                                             // 8967
    animating  : 'animating',                                                                                          // 8968
    blurring   : 'blurring',                                                                                           // 8969
    scrolling  : 'scrolling',                                                                                          // 8970
    undetached : 'undetached'                                                                                          // 8971
  }                                                                                                                    // 8972
};                                                                                                                     // 8973
                                                                                                                       // 8974
                                                                                                                       // 8975
})( jQuery, window , document );                                                                                       // 8976
                                                                                                                       // 8977
/*!                                                                                                                    // 8978
 * # Semantic UI 2.1.2 - Nag                                                                                           // 8979
 * http://github.com/semantic-org/semantic-ui/                                                                         // 8980
 *                                                                                                                     // 8981
 *                                                                                                                     // 8982
 * Copyright 2015 Contributors                                                                                         // 8983
 * Released under the MIT license                                                                                      // 8984
 * http://opensource.org/licenses/MIT                                                                                  // 8985
 *                                                                                                                     // 8986
 */                                                                                                                    // 8987
                                                                                                                       // 8988
;(function ($, window, document, undefined) {                                                                          // 8989
                                                                                                                       // 8990
"use strict";                                                                                                          // 8991
                                                                                                                       // 8992
$.fn.nag = function(parameters) {                                                                                      // 8993
  var                                                                                                                  // 8994
    $allModules    = $(this),                                                                                          // 8995
    moduleSelector = $allModules.selector || '',                                                                       // 8996
                                                                                                                       // 8997
    time           = new Date().getTime(),                                                                             // 8998
    performance    = [],                                                                                               // 8999
                                                                                                                       // 9000
    query          = arguments[0],                                                                                     // 9001
    methodInvoked  = (typeof query == 'string'),                                                                       // 9002
    queryArguments = [].slice.call(arguments, 1),                                                                      // 9003
    returnedValue                                                                                                      // 9004
  ;                                                                                                                    // 9005
  $allModules                                                                                                          // 9006
    .each(function() {                                                                                                 // 9007
      var                                                                                                              // 9008
        settings          = ( $.isPlainObject(parameters) )                                                            // 9009
          ? $.extend(true, {}, $.fn.nag.settings, parameters)                                                          // 9010
          : $.extend({}, $.fn.nag.settings),                                                                           // 9011
                                                                                                                       // 9012
        className       = settings.className,                                                                          // 9013
        selector        = settings.selector,                                                                           // 9014
        error           = settings.error,                                                                              // 9015
        namespace       = settings.namespace,                                                                          // 9016
                                                                                                                       // 9017
        eventNamespace  = '.' + namespace,                                                                             // 9018
        moduleNamespace = namespace + '-module',                                                                       // 9019
                                                                                                                       // 9020
        $module         = $(this),                                                                                     // 9021
                                                                                                                       // 9022
        $close          = $module.find(selector.close),                                                                // 9023
        $context        = (settings.context)                                                                           // 9024
          ? $(settings.context)                                                                                        // 9025
          : $('body'),                                                                                                 // 9026
                                                                                                                       // 9027
        element         = this,                                                                                        // 9028
        instance        = $module.data(moduleNamespace),                                                               // 9029
                                                                                                                       // 9030
        moduleOffset,                                                                                                  // 9031
        moduleHeight,                                                                                                  // 9032
                                                                                                                       // 9033
        contextWidth,                                                                                                  // 9034
        contextHeight,                                                                                                 // 9035
        contextOffset,                                                                                                 // 9036
                                                                                                                       // 9037
        yOffset,                                                                                                       // 9038
        yPosition,                                                                                                     // 9039
                                                                                                                       // 9040
        timer,                                                                                                         // 9041
        module,                                                                                                        // 9042
                                                                                                                       // 9043
        requestAnimationFrame = window.requestAnimationFrame                                                           // 9044
          || window.mozRequestAnimationFrame                                                                           // 9045
          || window.webkitRequestAnimationFrame                                                                        // 9046
          || window.msRequestAnimationFrame                                                                            // 9047
          || function(callback) { setTimeout(callback, 0); }                                                           // 9048
      ;                                                                                                                // 9049
      module = {                                                                                                       // 9050
                                                                                                                       // 9051
        initialize: function() {                                                                                       // 9052
          module.verbose('Initializing element');                                                                      // 9053
                                                                                                                       // 9054
          $module                                                                                                      // 9055
            .on('click' + eventNamespace, selector.close, module.dismiss)                                              // 9056
            .data(moduleNamespace, module)                                                                             // 9057
          ;                                                                                                            // 9058
                                                                                                                       // 9059
          if(settings.detachable && $module.parent()[0] !== $context[0]) {                                             // 9060
            $module                                                                                                    // 9061
              .detach()                                                                                                // 9062
              .prependTo($context)                                                                                     // 9063
            ;                                                                                                          // 9064
          }                                                                                                            // 9065
                                                                                                                       // 9066
          if(settings.displayTime > 0) {                                                                               // 9067
            setTimeout(module.hide, settings.displayTime);                                                             // 9068
          }                                                                                                            // 9069
          module.show();                                                                                               // 9070
        },                                                                                                             // 9071
                                                                                                                       // 9072
        destroy: function() {                                                                                          // 9073
          module.verbose('Destroying instance');                                                                       // 9074
          $module                                                                                                      // 9075
            .removeData(moduleNamespace)                                                                               // 9076
            .off(eventNamespace)                                                                                       // 9077
          ;                                                                                                            // 9078
        },                                                                                                             // 9079
                                                                                                                       // 9080
        show: function() {                                                                                             // 9081
          if( module.should.show() && !$module.is(':visible') ) {                                                      // 9082
            module.debug('Showing nag', settings.animation.show);                                                      // 9083
            if(settings.animation.show == 'fade') {                                                                    // 9084
              $module                                                                                                  // 9085
                .fadeIn(settings.duration, settings.easing)                                                            // 9086
              ;                                                                                                        // 9087
            }                                                                                                          // 9088
            else {                                                                                                     // 9089
              $module                                                                                                  // 9090
                .slideDown(settings.duration, settings.easing)                                                         // 9091
              ;                                                                                                        // 9092
            }                                                                                                          // 9093
          }                                                                                                            // 9094
        },                                                                                                             // 9095
                                                                                                                       // 9096
        hide: function() {                                                                                             // 9097
          module.debug('Showing nag', settings.animation.hide);                                                        // 9098
          if(settings.animation.show == 'fade') {                                                                      // 9099
            $module                                                                                                    // 9100
              .fadeIn(settings.duration, settings.easing)                                                              // 9101
            ;                                                                                                          // 9102
          }                                                                                                            // 9103
          else {                                                                                                       // 9104
            $module                                                                                                    // 9105
              .slideUp(settings.duration, settings.easing)                                                             // 9106
            ;                                                                                                          // 9107
          }                                                                                                            // 9108
        },                                                                                                             // 9109
                                                                                                                       // 9110
        onHide: function() {                                                                                           // 9111
          module.debug('Removing nag', settings.animation.hide);                                                       // 9112
          $module.remove();                                                                                            // 9113
          if (settings.onHide) {                                                                                       // 9114
            settings.onHide();                                                                                         // 9115
          }                                                                                                            // 9116
        },                                                                                                             // 9117
                                                                                                                       // 9118
        dismiss: function(event) {                                                                                     // 9119
          if(settings.storageMethod) {                                                                                 // 9120
            module.storage.set(settings.key, settings.value);                                                          // 9121
          }                                                                                                            // 9122
          module.hide();                                                                                               // 9123
          event.stopImmediatePropagation();                                                                            // 9124
          event.preventDefault();                                                                                      // 9125
        },                                                                                                             // 9126
                                                                                                                       // 9127
        should: {                                                                                                      // 9128
          show: function() {                                                                                           // 9129
            if(settings.persist) {                                                                                     // 9130
              module.debug('Persistent nag is set, can show nag');                                                     // 9131
              return true;                                                                                             // 9132
            }                                                                                                          // 9133
            if( module.storage.get(settings.key) != settings.value.toString() ) {                                      // 9134
              module.debug('Stored value is not set, can show nag', module.storage.get(settings.key));                 // 9135
              return true;                                                                                             // 9136
            }                                                                                                          // 9137
            module.debug('Stored value is set, cannot show nag', module.storage.get(settings.key));                    // 9138
            return false;                                                                                              // 9139
          }                                                                                                            // 9140
        },                                                                                                             // 9141
                                                                                                                       // 9142
        get: {                                                                                                         // 9143
          storageOptions: function() {                                                                                 // 9144
            var                                                                                                        // 9145
              options = {}                                                                                             // 9146
            ;                                                                                                          // 9147
            if(settings.expires) {                                                                                     // 9148
              options.expires = settings.expires;                                                                      // 9149
            }                                                                                                          // 9150
            if(settings.domain) {                                                                                      // 9151
              options.domain = settings.domain;                                                                        // 9152
            }                                                                                                          // 9153
            if(settings.path) {                                                                                        // 9154
              options.path = settings.path;                                                                            // 9155
            }                                                                                                          // 9156
            return options;                                                                                            // 9157
          }                                                                                                            // 9158
        },                                                                                                             // 9159
                                                                                                                       // 9160
        clear: function() {                                                                                            // 9161
          module.storage.remove(settings.key);                                                                         // 9162
        },                                                                                                             // 9163
                                                                                                                       // 9164
        storage: {                                                                                                     // 9165
          set: function(key, value) {                                                                                  // 9166
            var                                                                                                        // 9167
              options = module.get.storageOptions()                                                                    // 9168
            ;                                                                                                          // 9169
            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {                        // 9170
              window.localStorage.setItem(key, value);                                                                 // 9171
              module.debug('Value stored using local storage', key, value);                                            // 9172
            }                                                                                                          // 9173
            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {               // 9174
              window.sessionStorage.setItem(key, value);                                                               // 9175
              module.debug('Value stored using session storage', key, value);                                          // 9176
            }                                                                                                          // 9177
            else if($.cookie !== undefined) {                                                                          // 9178
              $.cookie(key, value, options);                                                                           // 9179
              module.debug('Value stored using cookie', key, value, options);                                          // 9180
            }                                                                                                          // 9181
            else {                                                                                                     // 9182
              module.error(error.noCookieStorage);                                                                     // 9183
              return;                                                                                                  // 9184
            }                                                                                                          // 9185
          },                                                                                                           // 9186
          get: function(key, value) {                                                                                  // 9187
            var                                                                                                        // 9188
              storedValue                                                                                              // 9189
            ;                                                                                                          // 9190
            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {                        // 9191
              storedValue = window.localStorage.getItem(key);                                                          // 9192
            }                                                                                                          // 9193
            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {               // 9194
              storedValue = window.sessionStorage.getItem(key);                                                        // 9195
            }                                                                                                          // 9196
            // get by cookie                                                                                           // 9197
            else if($.cookie !== undefined) {                                                                          // 9198
              storedValue = $.cookie(key);                                                                             // 9199
            }                                                                                                          // 9200
            else {                                                                                                     // 9201
              module.error(error.noCookieStorage);                                                                     // 9202
            }                                                                                                          // 9203
            if(storedValue == 'undefined' || storedValue == 'null' || storedValue === undefined || storedValue === null) {
              storedValue = undefined;                                                                                 // 9205
            }                                                                                                          // 9206
            return storedValue;                                                                                        // 9207
          },                                                                                                           // 9208
          remove: function(key) {                                                                                      // 9209
            var                                                                                                        // 9210
              options = module.get.storageOptions()                                                                    // 9211
            ;                                                                                                          // 9212
            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {                        // 9213
              window.localStorage.removeItem(key);                                                                     // 9214
            }                                                                                                          // 9215
            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {               // 9216
              window.sessionStorage.removeItem(key);                                                                   // 9217
            }                                                                                                          // 9218
            // store by cookie                                                                                         // 9219
            else if($.cookie !== undefined) {                                                                          // 9220
              $.removeCookie(key, options);                                                                            // 9221
            }                                                                                                          // 9222
            else {                                                                                                     // 9223
              module.error(error.noStorage);                                                                           // 9224
            }                                                                                                          // 9225
          }                                                                                                            // 9226
        },                                                                                                             // 9227
                                                                                                                       // 9228
        setting: function(name, value) {                                                                               // 9229
          module.debug('Changing setting', name, value);                                                               // 9230
          if( $.isPlainObject(name) ) {                                                                                // 9231
            $.extend(true, settings, name);                                                                            // 9232
          }                                                                                                            // 9233
          else if(value !== undefined) {                                                                               // 9234
            settings[name] = value;                                                                                    // 9235
          }                                                                                                            // 9236
          else {                                                                                                       // 9237
            return settings[name];                                                                                     // 9238
          }                                                                                                            // 9239
        },                                                                                                             // 9240
        internal: function(name, value) {                                                                              // 9241
          if( $.isPlainObject(name) ) {                                                                                // 9242
            $.extend(true, module, name);                                                                              // 9243
          }                                                                                                            // 9244
          else if(value !== undefined) {                                                                               // 9245
            module[name] = value;                                                                                      // 9246
          }                                                                                                            // 9247
          else {                                                                                                       // 9248
            return module[name];                                                                                       // 9249
          }                                                                                                            // 9250
        },                                                                                                             // 9251
        debug: function() {                                                                                            // 9252
          if(settings.debug) {                                                                                         // 9253
            if(settings.performance) {                                                                                 // 9254
              module.performance.log(arguments);                                                                       // 9255
            }                                                                                                          // 9256
            else {                                                                                                     // 9257
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 9258
              module.debug.apply(console, arguments);                                                                  // 9259
            }                                                                                                          // 9260
          }                                                                                                            // 9261
        },                                                                                                             // 9262
        verbose: function() {                                                                                          // 9263
          if(settings.verbose && settings.debug) {                                                                     // 9264
            if(settings.performance) {                                                                                 // 9265
              module.performance.log(arguments);                                                                       // 9266
            }                                                                                                          // 9267
            else {                                                                                                     // 9268
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 9269
              module.verbose.apply(console, arguments);                                                                // 9270
            }                                                                                                          // 9271
          }                                                                                                            // 9272
        },                                                                                                             // 9273
        error: function() {                                                                                            // 9274
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 9275
          module.error.apply(console, arguments);                                                                      // 9276
        },                                                                                                             // 9277
        performance: {                                                                                                 // 9278
          log: function(message) {                                                                                     // 9279
            var                                                                                                        // 9280
              currentTime,                                                                                             // 9281
              executionTime,                                                                                           // 9282
              previousTime                                                                                             // 9283
            ;                                                                                                          // 9284
            if(settings.performance) {                                                                                 // 9285
              currentTime   = new Date().getTime();                                                                    // 9286
              previousTime  = time || currentTime;                                                                     // 9287
              executionTime = currentTime - previousTime;                                                              // 9288
              time          = currentTime;                                                                             // 9289
              performance.push({                                                                                       // 9290
                'Name'           : message[0],                                                                         // 9291
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 9292
                'Element'        : element,                                                                            // 9293
                'Execution Time' : executionTime                                                                       // 9294
              });                                                                                                      // 9295
            }                                                                                                          // 9296
            clearTimeout(module.performance.timer);                                                                    // 9297
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 9298
          },                                                                                                           // 9299
          display: function() {                                                                                        // 9300
            var                                                                                                        // 9301
              title = settings.name + ':',                                                                             // 9302
              totalTime = 0                                                                                            // 9303
            ;                                                                                                          // 9304
            time = false;                                                                                              // 9305
            clearTimeout(module.performance.timer);                                                                    // 9306
            $.each(performance, function(index, data) {                                                                // 9307
              totalTime += data['Execution Time'];                                                                     // 9308
            });                                                                                                        // 9309
            title += ' ' + totalTime + 'ms';                                                                           // 9310
            if(moduleSelector) {                                                                                       // 9311
              title += ' \'' + moduleSelector + '\'';                                                                  // 9312
            }                                                                                                          // 9313
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 9314
              console.groupCollapsed(title);                                                                           // 9315
              if(console.table) {                                                                                      // 9316
                console.table(performance);                                                                            // 9317
              }                                                                                                        // 9318
              else {                                                                                                   // 9319
                $.each(performance, function(index, data) {                                                            // 9320
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 9321
                });                                                                                                    // 9322
              }                                                                                                        // 9323
              console.groupEnd();                                                                                      // 9324
            }                                                                                                          // 9325
            performance = [];                                                                                          // 9326
          }                                                                                                            // 9327
        },                                                                                                             // 9328
        invoke: function(query, passedArguments, context) {                                                            // 9329
          var                                                                                                          // 9330
            object = instance,                                                                                         // 9331
            maxDepth,                                                                                                  // 9332
            found,                                                                                                     // 9333
            response                                                                                                   // 9334
          ;                                                                                                            // 9335
          passedArguments = passedArguments || queryArguments;                                                         // 9336
          context         = element         || context;                                                                // 9337
          if(typeof query == 'string' && object !== undefined) {                                                       // 9338
            query    = query.split(/[\. ]/);                                                                           // 9339
            maxDepth = query.length - 1;                                                                               // 9340
            $.each(query, function(depth, value) {                                                                     // 9341
              var camelCaseValue = (depth != maxDepth)                                                                 // 9342
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 9343
                : query                                                                                                // 9344
              ;                                                                                                        // 9345
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 9346
                object = object[camelCaseValue];                                                                       // 9347
              }                                                                                                        // 9348
              else if( object[camelCaseValue] !== undefined ) {                                                        // 9349
                found = object[camelCaseValue];                                                                        // 9350
                return false;                                                                                          // 9351
              }                                                                                                        // 9352
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 9353
                object = object[value];                                                                                // 9354
              }                                                                                                        // 9355
              else if( object[value] !== undefined ) {                                                                 // 9356
                found = object[value];                                                                                 // 9357
                return false;                                                                                          // 9358
              }                                                                                                        // 9359
              else {                                                                                                   // 9360
                module.error(error.method, query);                                                                     // 9361
                return false;                                                                                          // 9362
              }                                                                                                        // 9363
            });                                                                                                        // 9364
          }                                                                                                            // 9365
          if ( $.isFunction( found ) ) {                                                                               // 9366
            response = found.apply(context, passedArguments);                                                          // 9367
          }                                                                                                            // 9368
          else if(found !== undefined) {                                                                               // 9369
            response = found;                                                                                          // 9370
          }                                                                                                            // 9371
          if($.isArray(returnedValue)) {                                                                               // 9372
            returnedValue.push(response);                                                                              // 9373
          }                                                                                                            // 9374
          else if(returnedValue !== undefined) {                                                                       // 9375
            returnedValue = [returnedValue, response];                                                                 // 9376
          }                                                                                                            // 9377
          else if(response !== undefined) {                                                                            // 9378
            returnedValue = response;                                                                                  // 9379
          }                                                                                                            // 9380
          return found;                                                                                                // 9381
        }                                                                                                              // 9382
      };                                                                                                               // 9383
                                                                                                                       // 9384
      if(methodInvoked) {                                                                                              // 9385
        if(instance === undefined) {                                                                                   // 9386
          module.initialize();                                                                                         // 9387
        }                                                                                                              // 9388
        module.invoke(query);                                                                                          // 9389
      }                                                                                                                // 9390
      else {                                                                                                           // 9391
        if(instance !== undefined) {                                                                                   // 9392
          instance.invoke('destroy');                                                                                  // 9393
        }                                                                                                              // 9394
        module.initialize();                                                                                           // 9395
      }                                                                                                                // 9396
    })                                                                                                                 // 9397
  ;                                                                                                                    // 9398
                                                                                                                       // 9399
  return (returnedValue !== undefined)                                                                                 // 9400
    ? returnedValue                                                                                                    // 9401
    : this                                                                                                             // 9402
  ;                                                                                                                    // 9403
};                                                                                                                     // 9404
                                                                                                                       // 9405
$.fn.nag.settings = {                                                                                                  // 9406
                                                                                                                       // 9407
  name        : 'Nag',                                                                                                 // 9408
                                                                                                                       // 9409
  debug       : false,                                                                                                 // 9410
  verbose     : false,                                                                                                 // 9411
  performance : true,                                                                                                  // 9412
                                                                                                                       // 9413
  namespace   : 'Nag',                                                                                                 // 9414
                                                                                                                       // 9415
  // allows cookie to be overriden                                                                                     // 9416
  persist     : false,                                                                                                 // 9417
                                                                                                                       // 9418
  // set to zero to require manually dismissal, otherwise hides on its own                                             // 9419
  displayTime : 0,                                                                                                     // 9420
                                                                                                                       // 9421
  animation   : {                                                                                                      // 9422
    show : 'slide',                                                                                                    // 9423
    hide : 'slide'                                                                                                     // 9424
  },                                                                                                                   // 9425
                                                                                                                       // 9426
  context       : false,                                                                                               // 9427
  detachable    : false,                                                                                               // 9428
                                                                                                                       // 9429
  expires       : 30,                                                                                                  // 9430
  domain        : false,                                                                                               // 9431
  path          : '/',                                                                                                 // 9432
                                                                                                                       // 9433
  // type of storage to use                                                                                            // 9434
  storageMethod : 'cookie',                                                                                            // 9435
                                                                                                                       // 9436
  // value to store in dismissed localstorage/cookie                                                                   // 9437
  key           : 'nag',                                                                                               // 9438
  value         : 'dismiss',                                                                                           // 9439
                                                                                                                       // 9440
  error: {                                                                                                             // 9441
    noCookieStorage : '$.cookie is not included. A storage solution is required.',                                     // 9442
    noStorage       : 'Neither $.cookie or store is defined. A storage solution is required for storing state',        // 9443
    method          : 'The method you called is not defined.'                                                          // 9444
  },                                                                                                                   // 9445
                                                                                                                       // 9446
  className     : {                                                                                                    // 9447
    bottom : 'bottom',                                                                                                 // 9448
    fixed  : 'fixed'                                                                                                   // 9449
  },                                                                                                                   // 9450
                                                                                                                       // 9451
  selector      : {                                                                                                    // 9452
    close : '.close.icon'                                                                                              // 9453
  },                                                                                                                   // 9454
                                                                                                                       // 9455
  speed         : 500,                                                                                                 // 9456
  easing        : 'easeOutQuad',                                                                                       // 9457
                                                                                                                       // 9458
  onHide: function() {}                                                                                                // 9459
                                                                                                                       // 9460
};                                                                                                                     // 9461
                                                                                                                       // 9462
})( jQuery, window , document );                                                                                       // 9463
                                                                                                                       // 9464
/*!                                                                                                                    // 9465
 * # Semantic UI 2.1.2 - Popup                                                                                         // 9466
 * http://github.com/semantic-org/semantic-ui/                                                                         // 9467
 *                                                                                                                     // 9468
 *                                                                                                                     // 9469
 * Copyright 2015 Contributors                                                                                         // 9470
 * Released under the MIT license                                                                                      // 9471
 * http://opensource.org/licenses/MIT                                                                                  // 9472
 *                                                                                                                     // 9473
 */                                                                                                                    // 9474
                                                                                                                       // 9475
;(function ($, window, document, undefined) {                                                                          // 9476
                                                                                                                       // 9477
"use strict";                                                                                                          // 9478
                                                                                                                       // 9479
$.fn.popup = function(parameters) {                                                                                    // 9480
  var                                                                                                                  // 9481
    $allModules    = $(this),                                                                                          // 9482
    $document      = $(document),                                                                                      // 9483
    $window        = $(window),                                                                                        // 9484
    $body          = $('body'),                                                                                        // 9485
                                                                                                                       // 9486
    moduleSelector = $allModules.selector || '',                                                                       // 9487
                                                                                                                       // 9488
    hasTouch       = (true),                                                                                           // 9489
    time           = new Date().getTime(),                                                                             // 9490
    performance    = [],                                                                                               // 9491
                                                                                                                       // 9492
    query          = arguments[0],                                                                                     // 9493
    methodInvoked  = (typeof query == 'string'),                                                                       // 9494
    queryArguments = [].slice.call(arguments, 1),                                                                      // 9495
                                                                                                                       // 9496
    returnedValue                                                                                                      // 9497
  ;                                                                                                                    // 9498
  $allModules                                                                                                          // 9499
    .each(function() {                                                                                                 // 9500
      var                                                                                                              // 9501
        settings        = ( $.isPlainObject(parameters) )                                                              // 9502
          ? $.extend(true, {}, $.fn.popup.settings, parameters)                                                        // 9503
          : $.extend({}, $.fn.popup.settings),                                                                         // 9504
                                                                                                                       // 9505
        selector           = settings.selector,                                                                        // 9506
        className          = settings.className,                                                                       // 9507
        error              = settings.error,                                                                           // 9508
        metadata           = settings.metadata,                                                                        // 9509
        namespace          = settings.namespace,                                                                       // 9510
                                                                                                                       // 9511
        eventNamespace     = '.' + settings.namespace,                                                                 // 9512
        moduleNamespace    = 'module-' + namespace,                                                                    // 9513
                                                                                                                       // 9514
        $module            = $(this),                                                                                  // 9515
        $context           = $(settings.context),                                                                      // 9516
        $target            = (settings.target)                                                                         // 9517
          ? $(settings.target)                                                                                         // 9518
          : $module,                                                                                                   // 9519
                                                                                                                       // 9520
        $popup,                                                                                                        // 9521
        $offsetParent,                                                                                                 // 9522
                                                                                                                       // 9523
        searchDepth        = 0,                                                                                        // 9524
        triedPositions     = false,                                                                                    // 9525
        openedWithTouch    = false,                                                                                    // 9526
                                                                                                                       // 9527
        element            = this,                                                                                     // 9528
        instance           = $module.data(moduleNamespace),                                                            // 9529
                                                                                                                       // 9530
        elementNamespace,                                                                                              // 9531
        id,                                                                                                            // 9532
        module                                                                                                         // 9533
      ;                                                                                                                // 9534
                                                                                                                       // 9535
      module = {                                                                                                       // 9536
                                                                                                                       // 9537
        // binds events                                                                                                // 9538
        initialize: function() {                                                                                       // 9539
          module.debug('Initializing', $module);                                                                       // 9540
          module.createID();                                                                                           // 9541
          module.bind.events();                                                                                        // 9542
          if( !module.exists() && settings.preserve) {                                                                 // 9543
            module.create();                                                                                           // 9544
          }                                                                                                            // 9545
          module.instantiate();                                                                                        // 9546
        },                                                                                                             // 9547
                                                                                                                       // 9548
        instantiate: function() {                                                                                      // 9549
          module.verbose('Storing instance', module);                                                                  // 9550
          instance = module;                                                                                           // 9551
          $module                                                                                                      // 9552
            .data(moduleNamespace, instance)                                                                           // 9553
          ;                                                                                                            // 9554
        },                                                                                                             // 9555
                                                                                                                       // 9556
        refresh: function() {                                                                                          // 9557
          if(settings.popup) {                                                                                         // 9558
            $popup = $(settings.popup).eq(0);                                                                          // 9559
          }                                                                                                            // 9560
          else {                                                                                                       // 9561
            if(settings.inline) {                                                                                      // 9562
              $popup = $target.nextAll(selector.popup).eq(0);                                                          // 9563
              settings.popup = $popup;                                                                                 // 9564
            }                                                                                                          // 9565
          }                                                                                                            // 9566
          if(settings.popup) {                                                                                         // 9567
            $popup.addClass(className.loading);                                                                        // 9568
            $offsetParent = module.get.offsetParent();                                                                 // 9569
            $popup.removeClass(className.loading);                                                                     // 9570
            if(settings.movePopup && module.has.popup() && module.get.offsetParent($popup)[0] !== $offsetParent[0]) {  // 9571
              module.debug('Moving popup to the same offset parent as activating element');                            // 9572
              $popup                                                                                                   // 9573
                .detach()                                                                                              // 9574
                .appendTo($offsetParent)                                                                               // 9575
              ;                                                                                                        // 9576
            }                                                                                                          // 9577
          }                                                                                                            // 9578
          else {                                                                                                       // 9579
            $offsetParent = (settings.inline)                                                                          // 9580
              ? module.get.offsetParent($target)                                                                       // 9581
              : module.has.popup()                                                                                     // 9582
                ? module.get.offsetParent($popup)                                                                      // 9583
                : $body                                                                                                // 9584
            ;                                                                                                          // 9585
          }                                                                                                            // 9586
          if( $offsetParent.is('html') && $offsetParent[0] !== $body[0] ) {                                            // 9587
            module.debug('Setting page as offset parent');                                                             // 9588
            $offsetParent = $body;                                                                                     // 9589
          }                                                                                                            // 9590
          if( module.get.variation() ) {                                                                               // 9591
            module.set.variation();                                                                                    // 9592
          }                                                                                                            // 9593
        },                                                                                                             // 9594
                                                                                                                       // 9595
        reposition: function() {                                                                                       // 9596
          module.refresh();                                                                                            // 9597
          module.set.position();                                                                                       // 9598
        },                                                                                                             // 9599
                                                                                                                       // 9600
        destroy: function() {                                                                                          // 9601
          module.debug('Destroying previous module');                                                                  // 9602
          // remove element only if was created dynamically                                                            // 9603
          if($popup && !settings.preserve) {                                                                           // 9604
            module.removePopup();                                                                                      // 9605
          }                                                                                                            // 9606
          // clear all timeouts                                                                                        // 9607
          clearTimeout(module.hideTimer);                                                                              // 9608
          clearTimeout(module.showTimer);                                                                              // 9609
          // remove events                                                                                             // 9610
          $window.off(elementNamespace);                                                                               // 9611
          $module                                                                                                      // 9612
            .off(eventNamespace)                                                                                       // 9613
            .removeData(moduleNamespace)                                                                               // 9614
          ;                                                                                                            // 9615
        },                                                                                                             // 9616
                                                                                                                       // 9617
        event: {                                                                                                       // 9618
          start:  function(event) {                                                                                    // 9619
            var                                                                                                        // 9620
              delay = ($.isPlainObject(settings.delay))                                                                // 9621
                ? settings.delay.show                                                                                  // 9622
                : settings.delay                                                                                       // 9623
            ;                                                                                                          // 9624
            clearTimeout(module.hideTimer);                                                                            // 9625
            if(!openedWithTouch) {                                                                                     // 9626
              module.showTimer = setTimeout(module.show, delay);                                                       // 9627
            }                                                                                                          // 9628
          },                                                                                                           // 9629
          end:  function() {                                                                                           // 9630
            var                                                                                                        // 9631
              delay = ($.isPlainObject(settings.delay))                                                                // 9632
                ? settings.delay.hide                                                                                  // 9633
                : settings.delay                                                                                       // 9634
            ;                                                                                                          // 9635
            clearTimeout(module.showTimer);                                                                            // 9636
            module.hideTimer = setTimeout(module.hide, delay);                                                         // 9637
          },                                                                                                           // 9638
          touchstart: function(event) {                                                                                // 9639
            openedWithTouch = true;                                                                                    // 9640
            module.show();                                                                                             // 9641
          },                                                                                                           // 9642
          resize: function() {                                                                                         // 9643
            if( module.is.visible() ) {                                                                                // 9644
              module.set.position();                                                                                   // 9645
            }                                                                                                          // 9646
          },                                                                                                           // 9647
          hideGracefully: function(event) {                                                                            // 9648
            // don't close on clicks inside popup                                                                      // 9649
            if(event && $(event.target).closest(selector.popup).length === 0) {                                        // 9650
              module.debug('Click occurred outside popup hiding popup');                                               // 9651
              module.hide();                                                                                           // 9652
            }                                                                                                          // 9653
            else {                                                                                                     // 9654
              module.debug('Click was inside popup, keeping popup open');                                              // 9655
            }                                                                                                          // 9656
          }                                                                                                            // 9657
        },                                                                                                             // 9658
                                                                                                                       // 9659
        // generates popup html from metadata                                                                          // 9660
        create: function() {                                                                                           // 9661
          var                                                                                                          // 9662
            html      = module.get.html(),                                                                             // 9663
            title     = module.get.title(),                                                                            // 9664
            content   = module.get.content()                                                                           // 9665
          ;                                                                                                            // 9666
                                                                                                                       // 9667
          if(html || content || title) {                                                                               // 9668
            module.debug('Creating pop-up html');                                                                      // 9669
            if(!html) {                                                                                                // 9670
              html = settings.templates.popup({                                                                        // 9671
                title   : title,                                                                                       // 9672
                content : content                                                                                      // 9673
              });                                                                                                      // 9674
            }                                                                                                          // 9675
            $popup = $('<div/>')                                                                                       // 9676
              .addClass(className.popup)                                                                               // 9677
              .data(metadata.activator, $module)                                                                       // 9678
              .html(html)                                                                                              // 9679
            ;                                                                                                          // 9680
            if(settings.inline) {                                                                                      // 9681
              module.verbose('Inserting popup element inline', $popup);                                                // 9682
              $popup                                                                                                   // 9683
                .insertAfter($module)                                                                                  // 9684
              ;                                                                                                        // 9685
            }                                                                                                          // 9686
            else {                                                                                                     // 9687
              module.verbose('Appending popup element to body', $popup);                                               // 9688
              $popup                                                                                                   // 9689
                .appendTo( $context )                                                                                  // 9690
              ;                                                                                                        // 9691
            }                                                                                                          // 9692
            module.refresh();                                                                                          // 9693
            module.set.variation();                                                                                    // 9694
                                                                                                                       // 9695
            if(settings.hoverable) {                                                                                   // 9696
              module.bind.popup();                                                                                     // 9697
            }                                                                                                          // 9698
            settings.onCreate.call($popup, element);                                                                   // 9699
          }                                                                                                            // 9700
          else if($target.next(selector.popup).length !== 0) {                                                         // 9701
            module.verbose('Pre-existing popup found');                                                                // 9702
            settings.inline = true;                                                                                    // 9703
            settings.popups  = $target.next(selector.popup).data(metadata.activator, $module);                         // 9704
            module.refresh();                                                                                          // 9705
            if(settings.hoverable) {                                                                                   // 9706
              module.bind.popup();                                                                                     // 9707
            }                                                                                                          // 9708
          }                                                                                                            // 9709
          else if(settings.popup) {                                                                                    // 9710
            $(settings.popup).data(metadata.activator, $module);                                                       // 9711
            module.verbose('Used popup specified in settings');                                                        // 9712
            module.refresh();                                                                                          // 9713
            if(settings.hoverable) {                                                                                   // 9714
              module.bind.popup();                                                                                     // 9715
            }                                                                                                          // 9716
          }                                                                                                            // 9717
          else {                                                                                                       // 9718
            module.debug('No content specified skipping display', element);                                            // 9719
          }                                                                                                            // 9720
        },                                                                                                             // 9721
                                                                                                                       // 9722
        createID: function() {                                                                                         // 9723
          id = (Math.random().toString(16) + '000000000').substr(2,8);                                                 // 9724
          elementNamespace = '.' + id;                                                                                 // 9725
          module.verbose('Creating unique id for element', id);                                                        // 9726
        },                                                                                                             // 9727
                                                                                                                       // 9728
        // determines popup state                                                                                      // 9729
        toggle: function() {                                                                                           // 9730
          module.debug('Toggling pop-up');                                                                             // 9731
          if( module.is.hidden() ) {                                                                                   // 9732
            module.debug('Popup is hidden, showing pop-up');                                                           // 9733
            module.unbind.close();                                                                                     // 9734
            module.show();                                                                                             // 9735
          }                                                                                                            // 9736
          else {                                                                                                       // 9737
            module.debug('Popup is visible, hiding pop-up');                                                           // 9738
            module.hide();                                                                                             // 9739
          }                                                                                                            // 9740
        },                                                                                                             // 9741
                                                                                                                       // 9742
        show: function(callback) {                                                                                     // 9743
          callback = callback || function(){};                                                                         // 9744
          module.debug('Showing pop-up', settings.transition);                                                         // 9745
          if(module.is.hidden() && !( module.is.active() && module.is.dropdown()) ) {                                  // 9746
            if( !module.exists() ) {                                                                                   // 9747
              module.create();                                                                                         // 9748
            }                                                                                                          // 9749
            if(settings.onShow.call($popup, element) === false) {                                                      // 9750
              module.debug('onShow callback returned false, cancelling popup animation');                              // 9751
              return;                                                                                                  // 9752
            }                                                                                                          // 9753
            else if(!settings.preserve && !settings.popup) {                                                           // 9754
              module.refresh();                                                                                        // 9755
            }                                                                                                          // 9756
            if( $popup && module.set.position() ) {                                                                    // 9757
              module.save.conditions();                                                                                // 9758
              if(settings.exclusive) {                                                                                 // 9759
                module.hideAll();                                                                                      // 9760
              }                                                                                                        // 9761
              module.animate.show(callback);                                                                           // 9762
            }                                                                                                          // 9763
          }                                                                                                            // 9764
        },                                                                                                             // 9765
                                                                                                                       // 9766
                                                                                                                       // 9767
        hide: function(callback) {                                                                                     // 9768
          callback = callback || function(){};                                                                         // 9769
          if( module.is.visible() || module.is.animating() ) {                                                         // 9770
            if(settings.onHide.call($popup, element) === false) {                                                      // 9771
              module.debug('onHide callback returned false, cancelling popup animation');                              // 9772
              return;                                                                                                  // 9773
            }                                                                                                          // 9774
            module.remove.visible();                                                                                   // 9775
            module.unbind.close();                                                                                     // 9776
            module.restore.conditions();                                                                               // 9777
            module.animate.hide(callback);                                                                             // 9778
          }                                                                                                            // 9779
        },                                                                                                             // 9780
                                                                                                                       // 9781
        hideAll: function() {                                                                                          // 9782
          $(selector.popup)                                                                                            // 9783
            .filter('.' + className.visible)                                                                           // 9784
            .each(function() {                                                                                         // 9785
              $(this)                                                                                                  // 9786
                .data(metadata.activator)                                                                              // 9787
                .popup('hide')                                                                                         // 9788
              ;                                                                                                        // 9789
            })                                                                                                         // 9790
          ;                                                                                                            // 9791
        },                                                                                                             // 9792
        exists: function() {                                                                                           // 9793
          if(!$popup) {                                                                                                // 9794
            return false;                                                                                              // 9795
          }                                                                                                            // 9796
          if(settings.inline || settings.popup) {                                                                      // 9797
            return ( module.has.popup() );                                                                             // 9798
          }                                                                                                            // 9799
          else {                                                                                                       // 9800
            return ( $popup.closest($context).length >= 1 )                                                            // 9801
              ? true                                                                                                   // 9802
              : false                                                                                                  // 9803
            ;                                                                                                          // 9804
          }                                                                                                            // 9805
        },                                                                                                             // 9806
                                                                                                                       // 9807
        removePopup: function() {                                                                                      // 9808
          if( module.has.popup() && !settings.popup) {                                                                 // 9809
            module.debug('Removing popup', $popup);                                                                    // 9810
            $popup.remove();                                                                                           // 9811
            $popup = undefined;                                                                                        // 9812
            settings.onRemove.call($popup, element);                                                                   // 9813
          }                                                                                                            // 9814
        },                                                                                                             // 9815
                                                                                                                       // 9816
        save: {                                                                                                        // 9817
          conditions: function() {                                                                                     // 9818
            module.cache = {                                                                                           // 9819
              title: $module.attr('title')                                                                             // 9820
            };                                                                                                         // 9821
            if (module.cache.title) {                                                                                  // 9822
              $module.removeAttr('title');                                                                             // 9823
            }                                                                                                          // 9824
            module.verbose('Saving original attributes', module.cache.title);                                          // 9825
          }                                                                                                            // 9826
        },                                                                                                             // 9827
        restore: {                                                                                                     // 9828
          conditions: function() {                                                                                     // 9829
            if(module.cache && module.cache.title) {                                                                   // 9830
              $module.attr('title', module.cache.title);                                                               // 9831
              module.verbose('Restoring original attributes', module.cache.title);                                     // 9832
            }                                                                                                          // 9833
            return true;                                                                                               // 9834
          }                                                                                                            // 9835
        },                                                                                                             // 9836
        animate: {                                                                                                     // 9837
          show: function(callback) {                                                                                   // 9838
            callback = $.isFunction(callback) ? callback : function(){};                                               // 9839
            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {           // 9840
              module.set.visible();                                                                                    // 9841
              $popup                                                                                                   // 9842
                .transition({                                                                                          // 9843
                  animation  : settings.transition + ' in',                                                            // 9844
                  queue      : false,                                                                                  // 9845
                  debug      : settings.debug,                                                                         // 9846
                  verbose    : settings.verbose,                                                                       // 9847
                  duration   : settings.duration,                                                                      // 9848
                  onComplete : function() {                                                                            // 9849
                    module.bind.close();                                                                               // 9850
                    callback.call($popup, element);                                                                    // 9851
                    settings.onVisible.call($popup, element);                                                          // 9852
                  }                                                                                                    // 9853
                })                                                                                                     // 9854
              ;                                                                                                        // 9855
            }                                                                                                          // 9856
            else {                                                                                                     // 9857
              module.error(error.noTransition);                                                                        // 9858
            }                                                                                                          // 9859
          },                                                                                                           // 9860
          hide: function(callback) {                                                                                   // 9861
            callback = $.isFunction(callback) ? callback : function(){};                                               // 9862
            module.debug('Hiding pop-up');                                                                             // 9863
            if(settings.onHide.call($popup, element) === false) {                                                      // 9864
              module.debug('onHide callback returned false, cancelling popup animation');                              // 9865
              return;                                                                                                  // 9866
            }                                                                                                          // 9867
            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {           // 9868
              $popup                                                                                                   // 9869
                .transition({                                                                                          // 9870
                  animation  : settings.transition + ' out',                                                           // 9871
                  queue      : false,                                                                                  // 9872
                  duration   : settings.duration,                                                                      // 9873
                  debug      : settings.debug,                                                                         // 9874
                  verbose    : settings.verbose,                                                                       // 9875
                  onComplete : function() {                                                                            // 9876
                    module.reset();                                                                                    // 9877
                    callback.call($popup, element);                                                                    // 9878
                    settings.onHidden.call($popup, element);                                                           // 9879
                  }                                                                                                    // 9880
                })                                                                                                     // 9881
              ;                                                                                                        // 9882
            }                                                                                                          // 9883
            else {                                                                                                     // 9884
              module.error(error.noTransition);                                                                        // 9885
            }                                                                                                          // 9886
          }                                                                                                            // 9887
        },                                                                                                             // 9888
                                                                                                                       // 9889
        get: {                                                                                                         // 9890
          html: function() {                                                                                           // 9891
            $module.removeData(metadata.html);                                                                         // 9892
            return $module.data(metadata.html) || settings.html;                                                       // 9893
          },                                                                                                           // 9894
          title: function() {                                                                                          // 9895
            $module.removeData(metadata.title);                                                                        // 9896
            return $module.data(metadata.title) || settings.title;                                                     // 9897
          },                                                                                                           // 9898
          content: function() {                                                                                        // 9899
            $module.removeData(metadata.content);                                                                      // 9900
            return $module.data(metadata.content) || $module.attr('title') || settings.content;                        // 9901
          },                                                                                                           // 9902
          variation: function() {                                                                                      // 9903
            $module.removeData(metadata.variation);                                                                    // 9904
            return $module.data(metadata.variation) || settings.variation;                                             // 9905
          },                                                                                                           // 9906
          popupOffset: function() {                                                                                    // 9907
            return $popup.offset();                                                                                    // 9908
          },                                                                                                           // 9909
          calculations: function() {                                                                                   // 9910
            var                                                                                                        // 9911
              targetElement  = $target[0],                                                                             // 9912
              targetPosition = (settings.inline || settings.popup)                                                     // 9913
                ? $target.position()                                                                                   // 9914
                : $target.offset(),                                                                                    // 9915
              calculations = {},                                                                                       // 9916
              screen                                                                                                   // 9917
            ;                                                                                                          // 9918
            calculations = {                                                                                           // 9919
              // element which is launching popup                                                                      // 9920
              target : {                                                                                               // 9921
                element : $target[0],                                                                                  // 9922
                width   : $target.outerWidth(),                                                                        // 9923
                height  : $target.outerHeight(),                                                                       // 9924
                top     : targetPosition.top,                                                                          // 9925
                left    : targetPosition.left,                                                                         // 9926
                margin  : {}                                                                                           // 9927
              },                                                                                                       // 9928
              // popup itself                                                                                          // 9929
              popup : {                                                                                                // 9930
                width  : $popup.outerWidth(),                                                                          // 9931
                height : $popup.outerHeight()                                                                          // 9932
              },                                                                                                       // 9933
              // offset container (or 3d context)                                                                      // 9934
              parent : {                                                                                               // 9935
                width  : $offsetParent.outerWidth(),                                                                   // 9936
                height : $offsetParent.outerHeight()                                                                   // 9937
              },                                                                                                       // 9938
              // screen boundaries                                                                                     // 9939
              screen : {                                                                                               // 9940
                scroll: {                                                                                              // 9941
                  top  : $window.scrollTop(),                                                                          // 9942
                  left : $window.scrollLeft()                                                                          // 9943
                },                                                                                                     // 9944
                width  : $window.width(),                                                                              // 9945
                height : $window.height()                                                                              // 9946
              }                                                                                                        // 9947
            };                                                                                                         // 9948
                                                                                                                       // 9949
            // add in container calcs if fluid                                                                         // 9950
            if( settings.setFluidWidth && module.is.fluid() ) {                                                        // 9951
              calculations.container = {                                                                               // 9952
                width: $popup.parent().outerWidth()                                                                    // 9953
              };                                                                                                       // 9954
              calculations.popup.width = calculations.container.width;                                                 // 9955
            }                                                                                                          // 9956
                                                                                                                       // 9957
            // add in margins if inline                                                                                // 9958
            calculations.target.margin.top = (settings.inline)                                                         // 9959
              ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-top'), 10)                   // 9960
              : 0                                                                                                      // 9961
            ;                                                                                                          // 9962
            calculations.target.margin.left = (settings.inline)                                                        // 9963
              ? module.is.rtl()                                                                                        // 9964
                ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-right'), 10)               // 9965
                : parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-left') , 10)               // 9966
              : 0                                                                                                      // 9967
            ;                                                                                                          // 9968
            // calculate screen boundaries                                                                             // 9969
            screen = calculations.screen;                                                                              // 9970
            calculations.boundary = {                                                                                  // 9971
              top    : screen.scroll.top,                                                                              // 9972
              bottom : screen.scroll.top + screen.height,                                                              // 9973
              left   : screen.scroll.left,                                                                             // 9974
              right  : screen.scroll.left + screen.width                                                               // 9975
            };                                                                                                         // 9976
            return calculations;                                                                                       // 9977
          },                                                                                                           // 9978
          id: function() {                                                                                             // 9979
            return id;                                                                                                 // 9980
          },                                                                                                           // 9981
          startEvent: function() {                                                                                     // 9982
            if(settings.on == 'hover') {                                                                               // 9983
              return 'mouseenter';                                                                                     // 9984
            }                                                                                                          // 9985
            else if(settings.on == 'focus') {                                                                          // 9986
              return 'focus';                                                                                          // 9987
            }                                                                                                          // 9988
            return false;                                                                                              // 9989
          },                                                                                                           // 9990
          scrollEvent: function() {                                                                                    // 9991
            return 'scroll';                                                                                           // 9992
          },                                                                                                           // 9993
          endEvent: function() {                                                                                       // 9994
            if(settings.on == 'hover') {                                                                               // 9995
              return 'mouseleave';                                                                                     // 9996
            }                                                                                                          // 9997
            else if(settings.on == 'focus') {                                                                          // 9998
              return 'blur';                                                                                           // 9999
            }                                                                                                          // 10000
            return false;                                                                                              // 10001
          },                                                                                                           // 10002
          distanceFromBoundary: function(offset, calculations) {                                                       // 10003
            var                                                                                                        // 10004
              distanceFromBoundary = {},                                                                               // 10005
              popup,                                                                                                   // 10006
              boundary                                                                                                 // 10007
            ;                                                                                                          // 10008
            offset       = offset       || module.get.offset();                                                        // 10009
            calculations = calculations || module.get.calculations();                                                  // 10010
                                                                                                                       // 10011
            // shorthand                                                                                               // 10012
            popup        = calculations.popup;                                                                         // 10013
            boundary     = calculations.boundary;                                                                      // 10014
                                                                                                                       // 10015
            if(offset) {                                                                                               // 10016
              distanceFromBoundary = {                                                                                 // 10017
                top    : (offset.top - boundary.top),                                                                  // 10018
                left   : (offset.left - boundary.left),                                                                // 10019
                right  : (boundary.right - (offset.left + popup.width) ),                                              // 10020
                bottom : (boundary.bottom - (offset.top + popup.height) )                                              // 10021
              };                                                                                                       // 10022
              module.verbose('Distance from boundaries determined', offset, distanceFromBoundary);                     // 10023
            }                                                                                                          // 10024
            return distanceFromBoundary;                                                                               // 10025
          },                                                                                                           // 10026
          offsetParent: function($target) {                                                                            // 10027
            var                                                                                                        // 10028
              element = ($target !== undefined)                                                                        // 10029
                ? $target[0]                                                                                           // 10030
                : $module[0],                                                                                          // 10031
              parentNode = element.parentNode,                                                                         // 10032
              $node    = $(parentNode)                                                                                 // 10033
            ;                                                                                                          // 10034
            if(parentNode) {                                                                                           // 10035
              var                                                                                                      // 10036
                is2D     = ($node.css('transform') === 'none'),                                                        // 10037
                isStatic = ($node.css('position') === 'static'),                                                       // 10038
                isHTML   = $node.is('html')                                                                            // 10039
              ;                                                                                                        // 10040
              while(parentNode && !isHTML && isStatic && is2D) {                                                       // 10041
                parentNode = parentNode.parentNode;                                                                    // 10042
                $node    = $(parentNode);                                                                              // 10043
                is2D     = ($node.css('transform') === 'none');                                                        // 10044
                isStatic = ($node.css('position') === 'static');                                                       // 10045
                isHTML   = $node.is('html');                                                                           // 10046
              }                                                                                                        // 10047
            }                                                                                                          // 10048
            return ($node && $node.length > 0)                                                                         // 10049
              ? $node                                                                                                  // 10050
              : $()                                                                                                    // 10051
            ;                                                                                                          // 10052
          },                                                                                                           // 10053
          positions: function() {                                                                                      // 10054
            return {                                                                                                   // 10055
              'top left'      : false,                                                                                 // 10056
              'top center'    : false,                                                                                 // 10057
              'top right'     : false,                                                                                 // 10058
              'bottom left'   : false,                                                                                 // 10059
              'bottom center' : false,                                                                                 // 10060
              'bottom right'  : false,                                                                                 // 10061
              'left center'   : false,                                                                                 // 10062
              'right center'  : false                                                                                  // 10063
            };                                                                                                         // 10064
          },                                                                                                           // 10065
          nextPosition: function(position) {                                                                           // 10066
            var                                                                                                        // 10067
              positions          = position.split(' '),                                                                // 10068
              verticalPosition   = positions[0],                                                                       // 10069
              horizontalPosition = positions[1],                                                                       // 10070
              opposite = {                                                                                             // 10071
                top    : 'bottom',                                                                                     // 10072
                bottom : 'top',                                                                                        // 10073
                left   : 'right',                                                                                      // 10074
                right  : 'left'                                                                                        // 10075
              },                                                                                                       // 10076
              adjacent = {                                                                                             // 10077
                left   : 'center',                                                                                     // 10078
                center : 'right',                                                                                      // 10079
                right  : 'left'                                                                                        // 10080
              },                                                                                                       // 10081
              backup = {                                                                                               // 10082
                'top left'      : 'top center',                                                                        // 10083
                'top center'    : 'top right',                                                                         // 10084
                'top right'     : 'right center',                                                                      // 10085
                'right center'  : 'bottom right',                                                                      // 10086
                'bottom right'  : 'bottom center',                                                                     // 10087
                'bottom center' : 'bottom left',                                                                       // 10088
                'bottom left'   : 'left center',                                                                       // 10089
                'left center'   : 'top left'                                                                           // 10090
              },                                                                                                       // 10091
              adjacentsAvailable = (verticalPosition == 'top' || verticalPosition == 'bottom'),                        // 10092
              oppositeTried = false,                                                                                   // 10093
              adjacentTried = false,                                                                                   // 10094
              nextPosition  = false                                                                                    // 10095
            ;                                                                                                          // 10096
            if(!triedPositions) {                                                                                      // 10097
              module.verbose('All available positions available');                                                     // 10098
              triedPositions = module.get.positions();                                                                 // 10099
            }                                                                                                          // 10100
                                                                                                                       // 10101
            module.debug('Recording last position tried', position);                                                   // 10102
            triedPositions[position] = true;                                                                           // 10103
                                                                                                                       // 10104
            if(settings.prefer === 'opposite') {                                                                       // 10105
              nextPosition  = [opposite[verticalPosition], horizontalPosition];                                        // 10106
              nextPosition  = nextPosition.join(' ');                                                                  // 10107
              oppositeTried = (triedPositions[nextPosition] === true);                                                 // 10108
              module.debug('Trying opposite strategy', nextPosition);                                                  // 10109
            }                                                                                                          // 10110
            if((settings.prefer === 'adjacent') && adjacentsAvailable ) {                                              // 10111
              nextPosition  = [verticalPosition, adjacent[horizontalPosition]];                                        // 10112
              nextPosition  = nextPosition.join(' ');                                                                  // 10113
              adjacentTried = (triedPositions[nextPosition] === true);                                                 // 10114
              module.debug('Trying adjacent strategy', nextPosition);                                                  // 10115
            }                                                                                                          // 10116
            if(adjacentTried || oppositeTried) {                                                                       // 10117
              module.debug('Using backup position', nextPosition);                                                     // 10118
              nextPosition = backup[position];                                                                         // 10119
            }                                                                                                          // 10120
            return nextPosition;                                                                                       // 10121
          }                                                                                                            // 10122
        },                                                                                                             // 10123
                                                                                                                       // 10124
        set: {                                                                                                         // 10125
          position: function(position, calculations) {                                                                 // 10126
                                                                                                                       // 10127
            // exit conditions                                                                                         // 10128
            if($target.length === 0 || $popup.length === 0) {                                                          // 10129
              module.error(error.notFound);                                                                            // 10130
              return;                                                                                                  // 10131
            }                                                                                                          // 10132
            var                                                                                                        // 10133
              offset,                                                                                                  // 10134
              distanceAway,                                                                                            // 10135
              target,                                                                                                  // 10136
              popup,                                                                                                   // 10137
              parent,                                                                                                  // 10138
              positioning,                                                                                             // 10139
              popupOffset,                                                                                             // 10140
              distanceFromBoundary                                                                                     // 10141
            ;                                                                                                          // 10142
                                                                                                                       // 10143
            calculations = calculations || module.get.calculations();                                                  // 10144
            position     = position     || $module.data(metadata.position) || settings.position;                       // 10145
                                                                                                                       // 10146
            offset       = $module.data(metadata.offset) || settings.offset;                                           // 10147
            distanceAway = settings.distanceAway;                                                                      // 10148
                                                                                                                       // 10149
            // shorthand                                                                                               // 10150
            target = calculations.target;                                                                              // 10151
            popup  = calculations.popup;                                                                               // 10152
            parent = calculations.parent;                                                                              // 10153
                                                                                                                       // 10154
            if(target.width === 0 && target.height === 0) {                                                            // 10155
              module.debug('Popup target is hidden, no action taken');                                                 // 10156
              return false;                                                                                            // 10157
            }                                                                                                          // 10158
                                                                                                                       // 10159
            if(settings.inline) {                                                                                      // 10160
              module.debug('Adding margin to calculation', target.margin);                                             // 10161
              if(position == 'left center' || position == 'right center') {                                            // 10162
                offset       +=  target.margin.top;                                                                    // 10163
                distanceAway += -target.margin.left;                                                                   // 10164
              }                                                                                                        // 10165
              else if (position == 'top left' || position == 'top center' || position == 'top right') {                // 10166
                offset       += target.margin.left;                                                                    // 10167
                distanceAway -= target.margin.top;                                                                     // 10168
              }                                                                                                        // 10169
              else {                                                                                                   // 10170
                offset       += target.margin.left;                                                                    // 10171
                distanceAway += target.margin.top;                                                                     // 10172
              }                                                                                                        // 10173
            }                                                                                                          // 10174
                                                                                                                       // 10175
            module.debug('Determining popup position from calculations', position, calculations);                      // 10176
                                                                                                                       // 10177
            if (module.is.rtl()) {                                                                                     // 10178
              position = position.replace(/left|right/g, function (match) {                                            // 10179
                return (match == 'left')                                                                               // 10180
                  ? 'right'                                                                                            // 10181
                  : 'left'                                                                                             // 10182
                ;                                                                                                      // 10183
              });                                                                                                      // 10184
              module.debug('RTL: Popup position updated', position);                                                   // 10185
            }                                                                                                          // 10186
                                                                                                                       // 10187
            // if last attempt use specified last resort position                                                      // 10188
            if(searchDepth == settings.maxSearchDepth && typeof settings.lastResort === 'string') {                    // 10189
              position = settings.lastResort;                                                                          // 10190
            }                                                                                                          // 10191
                                                                                                                       // 10192
            switch (position) {                                                                                        // 10193
              case 'top left':                                                                                         // 10194
                positioning = {                                                                                        // 10195
                  top    : 'auto',                                                                                     // 10196
                  bottom : parent.height - target.top + distanceAway,                                                  // 10197
                  left   : target.left + offset,                                                                       // 10198
                  right  : 'auto'                                                                                      // 10199
                };                                                                                                     // 10200
              break;                                                                                                   // 10201
              case 'top center':                                                                                       // 10202
                positioning = {                                                                                        // 10203
                  bottom : parent.height - target.top + distanceAway,                                                  // 10204
                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,                              // 10205
                  top    : 'auto',                                                                                     // 10206
                  right  : 'auto'                                                                                      // 10207
                };                                                                                                     // 10208
              break;                                                                                                   // 10209
              case 'top right':                                                                                        // 10210
                positioning = {                                                                                        // 10211
                  bottom :  parent.height - target.top + distanceAway,                                                 // 10212
                  right  :  parent.width - target.left - target.width - offset,                                        // 10213
                  top    : 'auto',                                                                                     // 10214
                  left   : 'auto'                                                                                      // 10215
                };                                                                                                     // 10216
              break;                                                                                                   // 10217
              case 'left center':                                                                                      // 10218
                positioning = {                                                                                        // 10219
                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,                             // 10220
                  right  : parent.width - target.left + distanceAway,                                                  // 10221
                  left   : 'auto',                                                                                     // 10222
                  bottom : 'auto'                                                                                      // 10223
                };                                                                                                     // 10224
              break;                                                                                                   // 10225
              case 'right center':                                                                                     // 10226
                positioning = {                                                                                        // 10227
                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,                             // 10228
                  left   : target.left + target.width + distanceAway,                                                  // 10229
                  bottom : 'auto',                                                                                     // 10230
                  right  : 'auto'                                                                                      // 10231
                };                                                                                                     // 10232
              break;                                                                                                   // 10233
              case 'bottom left':                                                                                      // 10234
                positioning = {                                                                                        // 10235
                  top    : target.top + target.height + distanceAway,                                                  // 10236
                  left   : target.left + offset,                                                                       // 10237
                  bottom : 'auto',                                                                                     // 10238
                  right  : 'auto'                                                                                      // 10239
                };                                                                                                     // 10240
              break;                                                                                                   // 10241
              case 'bottom center':                                                                                    // 10242
                positioning = {                                                                                        // 10243
                  top    : target.top + target.height + distanceAway,                                                  // 10244
                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,                              // 10245
                  bottom : 'auto',                                                                                     // 10246
                  right  : 'auto'                                                                                      // 10247
                };                                                                                                     // 10248
              break;                                                                                                   // 10249
              case 'bottom right':                                                                                     // 10250
                positioning = {                                                                                        // 10251
                  top    : target.top + target.height + distanceAway,                                                  // 10252
                  right  : parent.width - target.left  - target.width - offset,                                        // 10253
                  left   : 'auto',                                                                                     // 10254
                  bottom : 'auto'                                                                                      // 10255
                };                                                                                                     // 10256
              break;                                                                                                   // 10257
            }                                                                                                          // 10258
            if(positioning === undefined) {                                                                            // 10259
              module.error(error.invalidPosition, position);                                                           // 10260
            }                                                                                                          // 10261
                                                                                                                       // 10262
            module.debug('Calculated popup positioning values', positioning);                                          // 10263
                                                                                                                       // 10264
            // tentatively place on stage                                                                              // 10265
            $popup                                                                                                     // 10266
              .css(positioning)                                                                                        // 10267
              .removeClass(className.position)                                                                         // 10268
              .addClass(position)                                                                                      // 10269
              .addClass(className.loading)                                                                             // 10270
            ;                                                                                                          // 10271
                                                                                                                       // 10272
            popupOffset = module.get.popupOffset();                                                                    // 10273
                                                                                                                       // 10274
            // see if any boundaries are surpassed with this tentative position                                        // 10275
            distanceFromBoundary = module.get.distanceFromBoundary(popupOffset, calculations);                         // 10276
                                                                                                                       // 10277
            if( module.is.offstage(distanceFromBoundary, position) ) {                                                 // 10278
              module.debug('Position is outside viewport', position);                                                  // 10279
              if(searchDepth < settings.maxSearchDepth) {                                                              // 10280
                searchDepth++;                                                                                         // 10281
                position = module.get.nextPosition(position);                                                          // 10282
                module.debug('Trying new position', position);                                                         // 10283
                return ($popup)                                                                                        // 10284
                  ? module.set.position(position, calculations)                                                        // 10285
                  : false                                                                                              // 10286
                ;                                                                                                      // 10287
              }                                                                                                        // 10288
              else {                                                                                                   // 10289
                if(settings.lastResort) {                                                                              // 10290
                  module.debug('No position found, showing with last position');                                       // 10291
                }                                                                                                      // 10292
                else {                                                                                                 // 10293
                  module.debug('Popup could not find a position to display', $popup);                                  // 10294
                  module.error(error.cannotPlace, element);                                                            // 10295
                  module.remove.attempts();                                                                            // 10296
                  module.remove.loading();                                                                             // 10297
                  module.reset();                                                                                      // 10298
                  return false;                                                                                        // 10299
                }                                                                                                      // 10300
              }                                                                                                        // 10301
            }                                                                                                          // 10302
            module.debug('Position is on stage', position);                                                            // 10303
            module.remove.attempts();                                                                                  // 10304
            module.remove.loading();                                                                                   // 10305
            if( settings.setFluidWidth && module.is.fluid() ) {                                                        // 10306
              module.set.fluidWidth(calculations);                                                                     // 10307
            }                                                                                                          // 10308
            return true;                                                                                               // 10309
          },                                                                                                           // 10310
                                                                                                                       // 10311
          fluidWidth: function(calculations) {                                                                         // 10312
            calculations = calculations || module.get.calculations();                                                  // 10313
            module.debug('Automatically setting element width to parent width', calculations.parent.width);            // 10314
            $popup.css('width', calculations.container.width);                                                         // 10315
          },                                                                                                           // 10316
                                                                                                                       // 10317
          variation: function(variation) {                                                                             // 10318
            variation = variation || module.get.variation();                                                           // 10319
            if(variation && module.has.popup() ) {                                                                     // 10320
              module.verbose('Adding variation to popup', variation);                                                  // 10321
              $popup.addClass(variation);                                                                              // 10322
            }                                                                                                          // 10323
          },                                                                                                           // 10324
                                                                                                                       // 10325
          visible: function() {                                                                                        // 10326
            $module.addClass(className.visible);                                                                       // 10327
          }                                                                                                            // 10328
        },                                                                                                             // 10329
                                                                                                                       // 10330
        remove: {                                                                                                      // 10331
          loading: function() {                                                                                        // 10332
            $popup.removeClass(className.loading);                                                                     // 10333
          },                                                                                                           // 10334
          variation: function(variation) {                                                                             // 10335
            variation = variation || module.get.variation();                                                           // 10336
            if(variation) {                                                                                            // 10337
              module.verbose('Removing variation', variation);                                                         // 10338
              $popup.removeClass(variation);                                                                           // 10339
            }                                                                                                          // 10340
          },                                                                                                           // 10341
          visible: function() {                                                                                        // 10342
            $module.removeClass(className.visible);                                                                    // 10343
          },                                                                                                           // 10344
          attempts: function() {                                                                                       // 10345
            module.verbose('Resetting all searched positions');                                                        // 10346
            searchDepth    = 0;                                                                                        // 10347
            triedPositions = false;                                                                                    // 10348
          }                                                                                                            // 10349
        },                                                                                                             // 10350
                                                                                                                       // 10351
        bind: {                                                                                                        // 10352
          events: function() {                                                                                         // 10353
            module.debug('Binding popup events to module');                                                            // 10354
            if(settings.on == 'click') {                                                                               // 10355
              $module                                                                                                  // 10356
                .on('click' + eventNamespace, module.toggle)                                                           // 10357
              ;                                                                                                        // 10358
            }                                                                                                          // 10359
            if(settings.on == 'hover' && hasTouch) {                                                                   // 10360
              $module                                                                                                  // 10361
                .on('touchstart' + eventNamespace, module.event.touchstart)                                            // 10362
              ;                                                                                                        // 10363
            }                                                                                                          // 10364
            if( module.get.startEvent() ) {                                                                            // 10365
              $module                                                                                                  // 10366
                .on(module.get.startEvent() + eventNamespace, module.event.start)                                      // 10367
                .on(module.get.endEvent() + eventNamespace, module.event.end)                                          // 10368
              ;                                                                                                        // 10369
            }                                                                                                          // 10370
            if(settings.target) {                                                                                      // 10371
              module.debug('Target set to element', $target);                                                          // 10372
            }                                                                                                          // 10373
            $window.on('resize' + elementNamespace, module.event.resize);                                              // 10374
          },                                                                                                           // 10375
          popup: function() {                                                                                          // 10376
            module.verbose('Allowing hover events on popup to prevent closing');                                       // 10377
            if( $popup && module.has.popup() ) {                                                                       // 10378
              $popup                                                                                                   // 10379
                .on('mouseenter' + eventNamespace, module.event.start)                                                 // 10380
                .on('mouseleave' + eventNamespace, module.event.end)                                                   // 10381
              ;                                                                                                        // 10382
            }                                                                                                          // 10383
          },                                                                                                           // 10384
          close: function() {                                                                                          // 10385
            if(settings.hideOnScroll === true || (settings.hideOnScroll == 'auto' && settings.on != 'click'))   {      // 10386
              $document                                                                                                // 10387
                .one(module.get.scrollEvent() + elementNamespace, module.event.hideGracefully)                         // 10388
              ;                                                                                                        // 10389
              $context                                                                                                 // 10390
                .one(module.get.scrollEvent() + elementNamespace, module.event.hideGracefully)                         // 10391
              ;                                                                                                        // 10392
            }                                                                                                          // 10393
            if(settings.on == 'hover' && openedWithTouch) {                                                            // 10394
              module.verbose('Binding popup close event to document');                                                 // 10395
              $document                                                                                                // 10396
                .on('touchstart' + elementNamespace, function(event) {                                                 // 10397
                  module.verbose('Touched away from popup');                                                           // 10398
                  module.event.hideGracefully.call(element, event);                                                    // 10399
                })                                                                                                     // 10400
              ;                                                                                                        // 10401
            }                                                                                                          // 10402
            if(settings.on == 'click' && settings.closable) {                                                          // 10403
              module.verbose('Binding popup close event to document');                                                 // 10404
              $document                                                                                                // 10405
                .on('click' + elementNamespace, function(event) {                                                      // 10406
                  module.verbose('Clicked away from popup');                                                           // 10407
                  module.event.hideGracefully.call(element, event);                                                    // 10408
                })                                                                                                     // 10409
              ;                                                                                                        // 10410
            }                                                                                                          // 10411
          }                                                                                                            // 10412
        },                                                                                                             // 10413
                                                                                                                       // 10414
        unbind: {                                                                                                      // 10415
          close: function() {                                                                                          // 10416
            if(settings.hideOnScroll === true || (settings.hideOnScroll == 'auto' && settings.on != 'click')) {        // 10417
              $document                                                                                                // 10418
                .off('scroll' + elementNamespace, module.hide)                                                         // 10419
              ;                                                                                                        // 10420
              $context                                                                                                 // 10421
                .off('scroll' + elementNamespace, module.hide)                                                         // 10422
              ;                                                                                                        // 10423
            }                                                                                                          // 10424
            if(settings.on == 'hover' && openedWithTouch) {                                                            // 10425
              $document                                                                                                // 10426
                .off('touchstart' + elementNamespace)                                                                  // 10427
              ;                                                                                                        // 10428
              openedWithTouch = false;                                                                                 // 10429
            }                                                                                                          // 10430
            if(settings.on == 'click' && settings.closable) {                                                          // 10431
              module.verbose('Removing close event from document');                                                    // 10432
              $document                                                                                                // 10433
                .off('click' + elementNamespace)                                                                       // 10434
              ;                                                                                                        // 10435
            }                                                                                                          // 10436
          }                                                                                                            // 10437
        },                                                                                                             // 10438
                                                                                                                       // 10439
        has: {                                                                                                         // 10440
          popup: function() {                                                                                          // 10441
            return ($popup && $popup.length > 0);                                                                      // 10442
          }                                                                                                            // 10443
        },                                                                                                             // 10444
                                                                                                                       // 10445
        is: {                                                                                                          // 10446
          offstage: function(distanceFromBoundary, position) {                                                         // 10447
            var                                                                                                        // 10448
              offstage = []                                                                                            // 10449
            ;                                                                                                          // 10450
            // return boundaries that have been surpassed                                                              // 10451
            $.each(distanceFromBoundary, function(direction, distance) {                                               // 10452
              if(distance < -settings.jitter) {                                                                        // 10453
                module.debug('Position exceeds allowable distance from edge', direction, distance, position);          // 10454
                offstage.push(direction);                                                                              // 10455
              }                                                                                                        // 10456
            });                                                                                                        // 10457
            if(offstage.length > 0) {                                                                                  // 10458
              return true;                                                                                             // 10459
            }                                                                                                          // 10460
            else {                                                                                                     // 10461
              return false;                                                                                            // 10462
            }                                                                                                          // 10463
          },                                                                                                           // 10464
          active: function() {                                                                                         // 10465
            return $module.hasClass(className.active);                                                                 // 10466
          },                                                                                                           // 10467
          animating: function() {                                                                                      // 10468
            return ( $popup && $popup.hasClass(className.animating) );                                                 // 10469
          },                                                                                                           // 10470
          fluid: function() {                                                                                          // 10471
            return ( $popup && $popup.hasClass(className.fluid));                                                      // 10472
          },                                                                                                           // 10473
          visible: function() {                                                                                        // 10474
            return $popup && $popup.hasClass(className.visible);                                                       // 10475
          },                                                                                                           // 10476
          dropdown: function() {                                                                                       // 10477
            return $module.hasClass(className.dropdown);                                                               // 10478
          },                                                                                                           // 10479
          hidden: function() {                                                                                         // 10480
            return !module.is.visible();                                                                               // 10481
          },                                                                                                           // 10482
          rtl: function () {                                                                                           // 10483
            return $module.css('direction') == 'rtl';                                                                  // 10484
          }                                                                                                            // 10485
        },                                                                                                             // 10486
                                                                                                                       // 10487
        reset: function() {                                                                                            // 10488
          module.remove.visible();                                                                                     // 10489
          if(settings.preserve) {                                                                                      // 10490
            if($.fn.transition !== undefined) {                                                                        // 10491
              $popup                                                                                                   // 10492
                .transition('remove transition')                                                                       // 10493
              ;                                                                                                        // 10494
            }                                                                                                          // 10495
          }                                                                                                            // 10496
          else {                                                                                                       // 10497
            module.removePopup();                                                                                      // 10498
          }                                                                                                            // 10499
        },                                                                                                             // 10500
                                                                                                                       // 10501
        setting: function(name, value) {                                                                               // 10502
          if( $.isPlainObject(name) ) {                                                                                // 10503
            $.extend(true, settings, name);                                                                            // 10504
          }                                                                                                            // 10505
          else if(value !== undefined) {                                                                               // 10506
            settings[name] = value;                                                                                    // 10507
          }                                                                                                            // 10508
          else {                                                                                                       // 10509
            return settings[name];                                                                                     // 10510
          }                                                                                                            // 10511
        },                                                                                                             // 10512
        internal: function(name, value) {                                                                              // 10513
          if( $.isPlainObject(name) ) {                                                                                // 10514
            $.extend(true, module, name);                                                                              // 10515
          }                                                                                                            // 10516
          else if(value !== undefined) {                                                                               // 10517
            module[name] = value;                                                                                      // 10518
          }                                                                                                            // 10519
          else {                                                                                                       // 10520
            return module[name];                                                                                       // 10521
          }                                                                                                            // 10522
        },                                                                                                             // 10523
        debug: function() {                                                                                            // 10524
          if(settings.debug) {                                                                                         // 10525
            if(settings.performance) {                                                                                 // 10526
              module.performance.log(arguments);                                                                       // 10527
            }                                                                                                          // 10528
            else {                                                                                                     // 10529
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 10530
              module.debug.apply(console, arguments);                                                                  // 10531
            }                                                                                                          // 10532
          }                                                                                                            // 10533
        },                                                                                                             // 10534
        verbose: function() {                                                                                          // 10535
          if(settings.verbose && settings.debug) {                                                                     // 10536
            if(settings.performance) {                                                                                 // 10537
              module.performance.log(arguments);                                                                       // 10538
            }                                                                                                          // 10539
            else {                                                                                                     // 10540
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 10541
              module.verbose.apply(console, arguments);                                                                // 10542
            }                                                                                                          // 10543
          }                                                                                                            // 10544
        },                                                                                                             // 10545
        error: function() {                                                                                            // 10546
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 10547
          module.error.apply(console, arguments);                                                                      // 10548
        },                                                                                                             // 10549
        performance: {                                                                                                 // 10550
          log: function(message) {                                                                                     // 10551
            var                                                                                                        // 10552
              currentTime,                                                                                             // 10553
              executionTime,                                                                                           // 10554
              previousTime                                                                                             // 10555
            ;                                                                                                          // 10556
            if(settings.performance) {                                                                                 // 10557
              currentTime   = new Date().getTime();                                                                    // 10558
              previousTime  = time || currentTime;                                                                     // 10559
              executionTime = currentTime - previousTime;                                                              // 10560
              time          = currentTime;                                                                             // 10561
              performance.push({                                                                                       // 10562
                'Name'           : message[0],                                                                         // 10563
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 10564
                'Element'        : element,                                                                            // 10565
                'Execution Time' : executionTime                                                                       // 10566
              });                                                                                                      // 10567
            }                                                                                                          // 10568
            clearTimeout(module.performance.timer);                                                                    // 10569
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 10570
          },                                                                                                           // 10571
          display: function() {                                                                                        // 10572
            var                                                                                                        // 10573
              title = settings.name + ':',                                                                             // 10574
              totalTime = 0                                                                                            // 10575
            ;                                                                                                          // 10576
            time = false;                                                                                              // 10577
            clearTimeout(module.performance.timer);                                                                    // 10578
            $.each(performance, function(index, data) {                                                                // 10579
              totalTime += data['Execution Time'];                                                                     // 10580
            });                                                                                                        // 10581
            title += ' ' + totalTime + 'ms';                                                                           // 10582
            if(moduleSelector) {                                                                                       // 10583
              title += ' \'' + moduleSelector + '\'';                                                                  // 10584
            }                                                                                                          // 10585
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 10586
              console.groupCollapsed(title);                                                                           // 10587
              if(console.table) {                                                                                      // 10588
                console.table(performance);                                                                            // 10589
              }                                                                                                        // 10590
              else {                                                                                                   // 10591
                $.each(performance, function(index, data) {                                                            // 10592
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 10593
                });                                                                                                    // 10594
              }                                                                                                        // 10595
              console.groupEnd();                                                                                      // 10596
            }                                                                                                          // 10597
            performance = [];                                                                                          // 10598
          }                                                                                                            // 10599
        },                                                                                                             // 10600
        invoke: function(query, passedArguments, context) {                                                            // 10601
          var                                                                                                          // 10602
            object = instance,                                                                                         // 10603
            maxDepth,                                                                                                  // 10604
            found,                                                                                                     // 10605
            response                                                                                                   // 10606
          ;                                                                                                            // 10607
          passedArguments = passedArguments || queryArguments;                                                         // 10608
          context         = element         || context;                                                                // 10609
          if(typeof query == 'string' && object !== undefined) {                                                       // 10610
            query    = query.split(/[\. ]/);                                                                           // 10611
            maxDepth = query.length - 1;                                                                               // 10612
            $.each(query, function(depth, value) {                                                                     // 10613
              var camelCaseValue = (depth != maxDepth)                                                                 // 10614
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 10615
                : query                                                                                                // 10616
              ;                                                                                                        // 10617
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 10618
                object = object[camelCaseValue];                                                                       // 10619
              }                                                                                                        // 10620
              else if( object[camelCaseValue] !== undefined ) {                                                        // 10621
                found = object[camelCaseValue];                                                                        // 10622
                return false;                                                                                          // 10623
              }                                                                                                        // 10624
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 10625
                object = object[value];                                                                                // 10626
              }                                                                                                        // 10627
              else if( object[value] !== undefined ) {                                                                 // 10628
                found = object[value];                                                                                 // 10629
                return false;                                                                                          // 10630
              }                                                                                                        // 10631
              else {                                                                                                   // 10632
                return false;                                                                                          // 10633
              }                                                                                                        // 10634
            });                                                                                                        // 10635
          }                                                                                                            // 10636
          if ( $.isFunction( found ) ) {                                                                               // 10637
            response = found.apply(context, passedArguments);                                                          // 10638
          }                                                                                                            // 10639
          else if(found !== undefined) {                                                                               // 10640
            response = found;                                                                                          // 10641
          }                                                                                                            // 10642
          if($.isArray(returnedValue)) {                                                                               // 10643
            returnedValue.push(response);                                                                              // 10644
          }                                                                                                            // 10645
          else if(returnedValue !== undefined) {                                                                       // 10646
            returnedValue = [returnedValue, response];                                                                 // 10647
          }                                                                                                            // 10648
          else if(response !== undefined) {                                                                            // 10649
            returnedValue = response;                                                                                  // 10650
          }                                                                                                            // 10651
          return found;                                                                                                // 10652
        }                                                                                                              // 10653
      };                                                                                                               // 10654
                                                                                                                       // 10655
      if(methodInvoked) {                                                                                              // 10656
        if(instance === undefined) {                                                                                   // 10657
          module.initialize();                                                                                         // 10658
        }                                                                                                              // 10659
        module.invoke(query);                                                                                          // 10660
      }                                                                                                                // 10661
      else {                                                                                                           // 10662
        if(instance !== undefined) {                                                                                   // 10663
          instance.invoke('destroy');                                                                                  // 10664
        }                                                                                                              // 10665
        module.initialize();                                                                                           // 10666
      }                                                                                                                // 10667
    })                                                                                                                 // 10668
  ;                                                                                                                    // 10669
                                                                                                                       // 10670
  return (returnedValue !== undefined)                                                                                 // 10671
    ? returnedValue                                                                                                    // 10672
    : this                                                                                                             // 10673
  ;                                                                                                                    // 10674
};                                                                                                                     // 10675
                                                                                                                       // 10676
$.fn.popup.settings = {                                                                                                // 10677
                                                                                                                       // 10678
  name         : 'Popup',                                                                                              // 10679
                                                                                                                       // 10680
  // module settings                                                                                                   // 10681
  debug        : false,                                                                                                // 10682
  verbose      : false,                                                                                                // 10683
  performance  : true,                                                                                                 // 10684
  namespace    : 'popup',                                                                                              // 10685
                                                                                                                       // 10686
  // callback only when element added to dom                                                                           // 10687
  onCreate     : function(){},                                                                                         // 10688
                                                                                                                       // 10689
  // callback before element removed from dom                                                                          // 10690
  onRemove     : function(){},                                                                                         // 10691
                                                                                                                       // 10692
  // callback before show animation                                                                                    // 10693
  onShow       : function(){},                                                                                         // 10694
                                                                                                                       // 10695
  // callback after show animation                                                                                     // 10696
  onVisible    : function(){},                                                                                         // 10697
                                                                                                                       // 10698
  // callback before hide animation                                                                                    // 10699
  onHide       : function(){},                                                                                         // 10700
                                                                                                                       // 10701
  // callback after hide animation                                                                                     // 10702
  onHidden     : function(){},                                                                                         // 10703
                                                                                                                       // 10704
  // when to show popup                                                                                                // 10705
  on           : 'hover',                                                                                              // 10706
                                                                                                                       // 10707
  // whether to add touchstart events when using hover                                                                 // 10708
  addTouchEvents : true,                                                                                               // 10709
                                                                                                                       // 10710
  // default position relative to element                                                                              // 10711
  position     : 'top left',                                                                                           // 10712
                                                                                                                       // 10713
  // name of variation to use                                                                                          // 10714
  variation    : '',                                                                                                   // 10715
                                                                                                                       // 10716
  // whether popup should be moved to context                                                                          // 10717
  movePopup      : true,                                                                                               // 10718
                                                                                                                       // 10719
  // element which popup should be relative to                                                                         // 10720
  target         : false,                                                                                              // 10721
                                                                                                                       // 10722
  // jq selector or element that should be used as popup                                                               // 10723
  popup          : false,                                                                                              // 10724
                                                                                                                       // 10725
  // popup should remain inline next to activator                                                                      // 10726
  inline         : false,                                                                                              // 10727
                                                                                                                       // 10728
  // popup should be removed from page on hide                                                                         // 10729
  preserve       : false,                                                                                              // 10730
                                                                                                                       // 10731
  // popup should not close when being hovered on                                                                      // 10732
  hoverable      : false,                                                                                              // 10733
                                                                                                                       // 10734
  // explicitly set content                                                                                            // 10735
  content      : false,                                                                                                // 10736
                                                                                                                       // 10737
  // explicitly set html                                                                                               // 10738
  html         : false,                                                                                                // 10739
                                                                                                                       // 10740
  // explicitly set title                                                                                              // 10741
  title        : false,                                                                                                // 10742
                                                                                                                       // 10743
  // whether automatically close on clickaway when on click                                                            // 10744
  closable     : true,                                                                                                 // 10745
                                                                                                                       // 10746
  // automatically hide on scroll                                                                                      // 10747
  hideOnScroll : 'auto',                                                                                               // 10748
                                                                                                                       // 10749
  // hide other popups on show                                                                                         // 10750
  exclusive    : false,                                                                                                // 10751
                                                                                                                       // 10752
  // context to attach popups                                                                                          // 10753
  context      : 'body',                                                                                               // 10754
                                                                                                                       // 10755
  // position to prefer when calculating new position                                                                  // 10756
  prefer       : 'opposite',                                                                                           // 10757
                                                                                                                       // 10758
  // specify position to appear even if it doesn't fit                                                                 // 10759
  lastResort   : false,                                                                                                // 10760
                                                                                                                       // 10761
  // delay used to prevent accidental refiring of animations due to user error                                         // 10762
  delay        : {                                                                                                     // 10763
    show : 50,                                                                                                         // 10764
    hide : 70                                                                                                          // 10765
  },                                                                                                                   // 10766
                                                                                                                       // 10767
  // whether fluid variation should assign width explicitly                                                            // 10768
  setFluidWidth  : true,                                                                                               // 10769
                                                                                                                       // 10770
  // transition settings                                                                                               // 10771
  duration       : 200,                                                                                                // 10772
  transition     : 'scale',                                                                                            // 10773
                                                                                                                       // 10774
  // distance away from activating element in px                                                                       // 10775
  distanceAway   : 0,                                                                                                  // 10776
                                                                                                                       // 10777
  // number of pixels an element is allowed to be "offstage" for a position to be chosen (allows for rounding)         // 10778
  jitter         : 2,                                                                                                  // 10779
                                                                                                                       // 10780
  // offset on aligning axis from calculated position                                                                  // 10781
  offset         : 0,                                                                                                  // 10782
                                                                                                                       // 10783
  // maximum times to look for a position before failing (9 positions total)                                           // 10784
  maxSearchDepth : 15,                                                                                                 // 10785
                                                                                                                       // 10786
  error: {                                                                                                             // 10787
    invalidPosition : 'The position you specified is not a valid position',                                            // 10788
    cannotPlace     : 'Popup does not fit within the boundaries of the viewport',                                      // 10789
    method          : 'The method you called is not defined.',                                                         // 10790
    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>',           // 10791
    notFound        : 'The target or popup you specified does not exist on the page'                                   // 10792
  },                                                                                                                   // 10793
                                                                                                                       // 10794
  metadata: {                                                                                                          // 10795
    activator : 'activator',                                                                                           // 10796
    content   : 'content',                                                                                             // 10797
    html      : 'html',                                                                                                // 10798
    offset    : 'offset',                                                                                              // 10799
    position  : 'position',                                                                                            // 10800
    title     : 'title',                                                                                               // 10801
    variation : 'variation'                                                                                            // 10802
  },                                                                                                                   // 10803
                                                                                                                       // 10804
  className   : {                                                                                                      // 10805
    active    : 'active',                                                                                              // 10806
    animating : 'animating',                                                                                           // 10807
    dropdown  : 'dropdown',                                                                                            // 10808
    fluid     : 'fluid',                                                                                               // 10809
    loading   : 'loading',                                                                                             // 10810
    popup     : 'ui popup',                                                                                            // 10811
    position  : 'top left center bottom right',                                                                        // 10812
    visible   : 'visible'                                                                                              // 10813
  },                                                                                                                   // 10814
                                                                                                                       // 10815
  selector    : {                                                                                                      // 10816
    popup    : '.ui.popup'                                                                                             // 10817
  },                                                                                                                   // 10818
                                                                                                                       // 10819
  templates: {                                                                                                         // 10820
    escape: function(string) {                                                                                         // 10821
      var                                                                                                              // 10822
        badChars     = /[&<>"'`]/g,                                                                                    // 10823
        shouldEscape = /[&<>"'`]/,                                                                                     // 10824
        escape       = {                                                                                               // 10825
          "&": "&amp;",                                                                                                // 10826
          "<": "&lt;",                                                                                                 // 10827
          ">": "&gt;",                                                                                                 // 10828
          '"': "&quot;",                                                                                               // 10829
          "'": "&#x27;",                                                                                               // 10830
          "`": "&#x60;"                                                                                                // 10831
        },                                                                                                             // 10832
        escapedChar  = function(chr) {                                                                                 // 10833
          return escape[chr];                                                                                          // 10834
        }                                                                                                              // 10835
      ;                                                                                                                // 10836
      if(shouldEscape.test(string)) {                                                                                  // 10837
        return string.replace(badChars, escapedChar);                                                                  // 10838
      }                                                                                                                // 10839
      return string;                                                                                                   // 10840
    },                                                                                                                 // 10841
    popup: function(text) {                                                                                            // 10842
      var                                                                                                              // 10843
        html   = '',                                                                                                   // 10844
        escape = $.fn.popup.settings.templates.escape                                                                  // 10845
      ;                                                                                                                // 10846
      if(typeof text !== undefined) {                                                                                  // 10847
        if(typeof text.title !== undefined && text.title) {                                                            // 10848
          text.title = escape(text.title);                                                                             // 10849
          html += '<div class="header">' + text.title + '</div>';                                                      // 10850
        }                                                                                                              // 10851
        if(typeof text.content !== undefined && text.content) {                                                        // 10852
          text.content = escape(text.content);                                                                         // 10853
          html += '<div class="content">' + text.content + '</div>';                                                   // 10854
        }                                                                                                              // 10855
      }                                                                                                                // 10856
      return html;                                                                                                     // 10857
    }                                                                                                                  // 10858
  }                                                                                                                    // 10859
                                                                                                                       // 10860
};                                                                                                                     // 10861
                                                                                                                       // 10862
                                                                                                                       // 10863
})( jQuery, window , document );                                                                                       // 10864
                                                                                                                       // 10865
/*!                                                                                                                    // 10866
 * # Semantic UI 2.1.2 - Progress                                                                                      // 10867
 * http://github.com/semantic-org/semantic-ui/                                                                         // 10868
 *                                                                                                                     // 10869
 *                                                                                                                     // 10870
 * Copyright 2015 Contributors                                                                                         // 10871
 * Released under the MIT license                                                                                      // 10872
 * http://opensource.org/licenses/MIT                                                                                  // 10873
 *                                                                                                                     // 10874
 */                                                                                                                    // 10875
                                                                                                                       // 10876
;(function ( $, window, document, undefined ) {                                                                        // 10877
                                                                                                                       // 10878
"use strict";                                                                                                          // 10879
                                                                                                                       // 10880
$.fn.progress = function(parameters) {                                                                                 // 10881
  var                                                                                                                  // 10882
    $allModules    = $(this),                                                                                          // 10883
                                                                                                                       // 10884
    moduleSelector = $allModules.selector || '',                                                                       // 10885
                                                                                                                       // 10886
    time           = new Date().getTime(),                                                                             // 10887
    performance    = [],                                                                                               // 10888
                                                                                                                       // 10889
    query          = arguments[0],                                                                                     // 10890
    methodInvoked  = (typeof query == 'string'),                                                                       // 10891
    queryArguments = [].slice.call(arguments, 1),                                                                      // 10892
                                                                                                                       // 10893
    returnedValue                                                                                                      // 10894
  ;                                                                                                                    // 10895
                                                                                                                       // 10896
  $allModules                                                                                                          // 10897
    .each(function() {                                                                                                 // 10898
      var                                                                                                              // 10899
        settings          = ( $.isPlainObject(parameters) )                                                            // 10900
          ? $.extend(true, {}, $.fn.progress.settings, parameters)                                                     // 10901
          : $.extend({}, $.fn.progress.settings),                                                                      // 10902
                                                                                                                       // 10903
        className       = settings.className,                                                                          // 10904
        metadata        = settings.metadata,                                                                           // 10905
        namespace       = settings.namespace,                                                                          // 10906
        selector        = settings.selector,                                                                           // 10907
        error           = settings.error,                                                                              // 10908
                                                                                                                       // 10909
        eventNamespace  = '.' + namespace,                                                                             // 10910
        moduleNamespace = 'module-' + namespace,                                                                       // 10911
                                                                                                                       // 10912
        $module         = $(this),                                                                                     // 10913
        $bar            = $(this).find(selector.bar),                                                                  // 10914
        $progress       = $(this).find(selector.progress),                                                             // 10915
        $label          = $(this).find(selector.label),                                                                // 10916
                                                                                                                       // 10917
        element         = this,                                                                                        // 10918
        instance        = $module.data(moduleNamespace),                                                               // 10919
                                                                                                                       // 10920
        animating = false,                                                                                             // 10921
        transitionEnd,                                                                                                 // 10922
        module                                                                                                         // 10923
      ;                                                                                                                // 10924
                                                                                                                       // 10925
      module = {                                                                                                       // 10926
                                                                                                                       // 10927
        initialize: function() {                                                                                       // 10928
          module.debug('Initializing progress bar', settings);                                                         // 10929
                                                                                                                       // 10930
          module.set.duration();                                                                                       // 10931
          module.set.transitionEvent();                                                                                // 10932
                                                                                                                       // 10933
          module.read.metadata();                                                                                      // 10934
          module.read.settings();                                                                                      // 10935
                                                                                                                       // 10936
          module.instantiate();                                                                                        // 10937
        },                                                                                                             // 10938
                                                                                                                       // 10939
        instantiate: function() {                                                                                      // 10940
          module.verbose('Storing instance of progress', module);                                                      // 10941
          instance = module;                                                                                           // 10942
          $module                                                                                                      // 10943
            .data(moduleNamespace, module)                                                                             // 10944
          ;                                                                                                            // 10945
        },                                                                                                             // 10946
        destroy: function() {                                                                                          // 10947
          module.verbose('Destroying previous progress for', $module);                                                 // 10948
          clearInterval(instance.interval);                                                                            // 10949
          module.remove.state();                                                                                       // 10950
          $module.removeData(moduleNamespace);                                                                         // 10951
          instance = undefined;                                                                                        // 10952
        },                                                                                                             // 10953
                                                                                                                       // 10954
        reset: function() {                                                                                            // 10955
          module.set.percent(0);                                                                                       // 10956
        },                                                                                                             // 10957
                                                                                                                       // 10958
        complete: function() {                                                                                         // 10959
          if(module.percent === undefined || module.percent < 100) {                                                   // 10960
            module.set.percent(100);                                                                                   // 10961
          }                                                                                                            // 10962
        },                                                                                                             // 10963
                                                                                                                       // 10964
        read: {                                                                                                        // 10965
          metadata: function() {                                                                                       // 10966
            var                                                                                                        // 10967
              data = {                                                                                                 // 10968
                percent : $module.data(metadata.percent),                                                              // 10969
                total   : $module.data(metadata.total),                                                                // 10970
                value   : $module.data(metadata.value)                                                                 // 10971
              }                                                                                                        // 10972
            ;                                                                                                          // 10973
            if(data.percent) {                                                                                         // 10974
              module.debug('Current percent value set from metadata', data.percent);                                   // 10975
              module.set.percent(data.percent);                                                                        // 10976
            }                                                                                                          // 10977
            if(data.total) {                                                                                           // 10978
              module.debug('Total value set from metadata', data.total);                                               // 10979
              module.set.total(data.total);                                                                            // 10980
            }                                                                                                          // 10981
            if(data.value) {                                                                                           // 10982
              module.debug('Current value set from metadata', data.value);                                             // 10983
              module.set.value(data.value);                                                                            // 10984
              module.set.progress(data.value);                                                                         // 10985
            }                                                                                                          // 10986
          },                                                                                                           // 10987
          settings: function() {                                                                                       // 10988
            if(settings.total !== false) {                                                                             // 10989
              module.debug('Current total set in settings', settings.total);                                           // 10990
              module.set.total(settings.total);                                                                        // 10991
            }                                                                                                          // 10992
            if(settings.value !== false) {                                                                             // 10993
              module.debug('Current value set in settings', settings.value);                                           // 10994
              module.set.value(settings.value);                                                                        // 10995
              module.set.progress(module.value);                                                                       // 10996
            }                                                                                                          // 10997
            if(settings.percent !== false) {                                                                           // 10998
              module.debug('Current percent set in settings', settings.percent);                                       // 10999
              module.set.percent(settings.percent);                                                                    // 11000
            }                                                                                                          // 11001
          }                                                                                                            // 11002
        },                                                                                                             // 11003
                                                                                                                       // 11004
        increment: function(incrementValue) {                                                                          // 11005
          var                                                                                                          // 11006
            maxValue,                                                                                                  // 11007
            startValue,                                                                                                // 11008
            newValue                                                                                                   // 11009
          ;                                                                                                            // 11010
          if( module.has.total() ) {                                                                                   // 11011
            startValue     = module.get.value();                                                                       // 11012
            incrementValue = incrementValue || 1;                                                                      // 11013
                                                                                                                       // 11014
            newValue       = startValue + incrementValue;                                                              // 11015
            maxValue       = module.get.total();                                                                       // 11016
                                                                                                                       // 11017
            module.debug('Incrementing value', startValue, newValue, maxValue);                                        // 11018
            if(newValue > maxValue ) {                                                                                 // 11019
              module.debug('Value cannot increment above total', maxValue);                                            // 11020
              newValue = maxValue;                                                                                     // 11021
            }                                                                                                          // 11022
          }                                                                                                            // 11023
          else {                                                                                                       // 11024
            startValue     = module.get.percent();                                                                     // 11025
            incrementValue = incrementValue || module.get.randomValue();                                               // 11026
                                                                                                                       // 11027
            newValue       = startValue + incrementValue;                                                              // 11028
            maxValue       = 100;                                                                                      // 11029
                                                                                                                       // 11030
            module.debug('Incrementing percentage by', startValue, newValue);                                          // 11031
            if(newValue > maxValue ) {                                                                                 // 11032
              module.debug('Value cannot increment above 100 percent');                                                // 11033
              newValue = maxValue;                                                                                     // 11034
            }                                                                                                          // 11035
          }                                                                                                            // 11036
          module.set.progress(newValue);                                                                               // 11037
        },                                                                                                             // 11038
        decrement: function(decrementValue) {                                                                          // 11039
          var                                                                                                          // 11040
            total     = module.get.total(),                                                                            // 11041
            startValue,                                                                                                // 11042
            newValue                                                                                                   // 11043
          ;                                                                                                            // 11044
          if(total) {                                                                                                  // 11045
            startValue     =  module.get.value();                                                                      // 11046
            decrementValue =  decrementValue || 1;                                                                     // 11047
            newValue       =  startValue - decrementValue;                                                             // 11048
            module.debug('Decrementing value by', decrementValue, startValue);                                         // 11049
          }                                                                                                            // 11050
          else {                                                                                                       // 11051
            startValue     =  module.get.percent();                                                                    // 11052
            decrementValue =  decrementValue || module.get.randomValue();                                              // 11053
            newValue       =  startValue - decrementValue;                                                             // 11054
            module.debug('Decrementing percentage by', decrementValue, startValue);                                    // 11055
          }                                                                                                            // 11056
                                                                                                                       // 11057
          if(newValue < 0) {                                                                                           // 11058
            module.debug('Value cannot decrement below 0');                                                            // 11059
            newValue = 0;                                                                                              // 11060
          }                                                                                                            // 11061
          module.set.progress(newValue);                                                                               // 11062
        },                                                                                                             // 11063
                                                                                                                       // 11064
        has: {                                                                                                         // 11065
          total: function() {                                                                                          // 11066
            return (module.get.total() !== false);                                                                     // 11067
          }                                                                                                            // 11068
        },                                                                                                             // 11069
                                                                                                                       // 11070
        get: {                                                                                                         // 11071
          text: function(templateText) {                                                                               // 11072
            var                                                                                                        // 11073
              value   = module.value                || 0,                                                              // 11074
              total   = module.total                || 0,                                                              // 11075
              percent = (animating)                                                                                    // 11076
                ? module.get.displayPercent()                                                                          // 11077
                : module.percent || 0,                                                                                 // 11078
              left = (module.total > 0)                                                                                // 11079
                ? (total - value)                                                                                      // 11080
                : (100 - percent)                                                                                      // 11081
            ;                                                                                                          // 11082
            templateText = templateText || '';                                                                         // 11083
            templateText = templateText                                                                                // 11084
              .replace('{value}', value)                                                                               // 11085
              .replace('{total}', total)                                                                               // 11086
              .replace('{left}', left)                                                                                 // 11087
              .replace('{percent}', percent)                                                                           // 11088
            ;                                                                                                          // 11089
            module.debug('Adding variables to progress bar text', templateText);                                       // 11090
            return templateText;                                                                                       // 11091
          },                                                                                                           // 11092
                                                                                                                       // 11093
                                                                                                                       // 11094
          randomValue: function() {                                                                                    // 11095
            module.debug('Generating random increment percentage');                                                    // 11096
            return Math.floor((Math.random() * settings.random.max) + settings.random.min);                            // 11097
          },                                                                                                           // 11098
                                                                                                                       // 11099
          numericValue: function(value) {                                                                              // 11100
            return (typeof value === 'string')                                                                         // 11101
              ? (value.replace(/[^\d.]/g, '') !== '')                                                                  // 11102
                ? +(value.replace(/[^\d.]/g, ''))                                                                      // 11103
                : false                                                                                                // 11104
              : value                                                                                                  // 11105
            ;                                                                                                          // 11106
          },                                                                                                           // 11107
                                                                                                                       // 11108
          transitionEnd: function() {                                                                                  // 11109
            var                                                                                                        // 11110
              element     = document.createElement('element'),                                                         // 11111
              transitions = {                                                                                          // 11112
                'transition'       :'transitionend',                                                                   // 11113
                'OTransition'      :'oTransitionEnd',                                                                  // 11114
                'MozTransition'    :'transitionend',                                                                   // 11115
                'WebkitTransition' :'webkitTransitionEnd'                                                              // 11116
              },                                                                                                       // 11117
              transition                                                                                               // 11118
            ;                                                                                                          // 11119
            for(transition in transitions){                                                                            // 11120
              if( element.style[transition] !== undefined ){                                                           // 11121
                return transitions[transition];                                                                        // 11122
              }                                                                                                        // 11123
            }                                                                                                          // 11124
          },                                                                                                           // 11125
                                                                                                                       // 11126
          // gets current displayed percentage (if animating values this is the intermediary value)                    // 11127
          displayPercent: function() {                                                                                 // 11128
            var                                                                                                        // 11129
              barWidth       = $bar.width(),                                                                           // 11130
              totalWidth     = $module.width(),                                                                        // 11131
              minDisplay     = parseInt($bar.css('min-width'), 10),                                                    // 11132
              displayPercent = (barWidth > minDisplay)                                                                 // 11133
                ? (barWidth / totalWidth * 100)                                                                        // 11134
                : module.percent                                                                                       // 11135
            ;                                                                                                          // 11136
            return (settings.precision > 0)                                                                            // 11137
              ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision)                     // 11138
              : Math.round(displayPercent)                                                                             // 11139
            ;                                                                                                          // 11140
          },                                                                                                           // 11141
                                                                                                                       // 11142
          percent: function() {                                                                                        // 11143
            return module.percent || 0;                                                                                // 11144
          },                                                                                                           // 11145
          value: function() {                                                                                          // 11146
            return module.value || 0;                                                                                  // 11147
          },                                                                                                           // 11148
          total: function() {                                                                                          // 11149
            return module.total || false;                                                                              // 11150
          }                                                                                                            // 11151
        },                                                                                                             // 11152
                                                                                                                       // 11153
        is: {                                                                                                          // 11154
          success: function() {                                                                                        // 11155
            return $module.hasClass(className.success);                                                                // 11156
          },                                                                                                           // 11157
          warning: function() {                                                                                        // 11158
            return $module.hasClass(className.warning);                                                                // 11159
          },                                                                                                           // 11160
          error: function() {                                                                                          // 11161
            return $module.hasClass(className.error);                                                                  // 11162
          },                                                                                                           // 11163
          active: function() {                                                                                         // 11164
            return $module.hasClass(className.active);                                                                 // 11165
          },                                                                                                           // 11166
          visible: function() {                                                                                        // 11167
            return $module.is(':visible');                                                                             // 11168
          }                                                                                                            // 11169
        },                                                                                                             // 11170
                                                                                                                       // 11171
        remove: {                                                                                                      // 11172
          state: function() {                                                                                          // 11173
            module.verbose('Removing stored state');                                                                   // 11174
            delete module.total;                                                                                       // 11175
            delete module.percent;                                                                                     // 11176
            delete module.value;                                                                                       // 11177
          },                                                                                                           // 11178
          active: function() {                                                                                         // 11179
            module.verbose('Removing active state');                                                                   // 11180
            $module.removeClass(className.active);                                                                     // 11181
          },                                                                                                           // 11182
          success: function() {                                                                                        // 11183
            module.verbose('Removing success state');                                                                  // 11184
            $module.removeClass(className.success);                                                                    // 11185
          },                                                                                                           // 11186
          warning: function() {                                                                                        // 11187
            module.verbose('Removing warning state');                                                                  // 11188
            $module.removeClass(className.warning);                                                                    // 11189
          },                                                                                                           // 11190
          error: function() {                                                                                          // 11191
            module.verbose('Removing error state');                                                                    // 11192
            $module.removeClass(className.error);                                                                      // 11193
          }                                                                                                            // 11194
        },                                                                                                             // 11195
                                                                                                                       // 11196
        set: {                                                                                                         // 11197
          barWidth: function(value) {                                                                                  // 11198
            if(value > 100) {                                                                                          // 11199
              module.error(error.tooHigh, value);                                                                      // 11200
            }                                                                                                          // 11201
            else if (value < 0) {                                                                                      // 11202
              module.error(error.tooLow, value);                                                                       // 11203
            }                                                                                                          // 11204
            else {                                                                                                     // 11205
              $bar                                                                                                     // 11206
                .css('width', value + '%')                                                                             // 11207
              ;                                                                                                        // 11208
              $module                                                                                                  // 11209
                .attr('data-percent', parseInt(value, 10))                                                             // 11210
              ;                                                                                                        // 11211
            }                                                                                                          // 11212
          },                                                                                                           // 11213
          duration: function(duration) {                                                                               // 11214
            duration = duration || settings.duration;                                                                  // 11215
            duration = (typeof duration == 'number')                                                                   // 11216
              ? duration + 'ms'                                                                                        // 11217
              : duration                                                                                               // 11218
            ;                                                                                                          // 11219
            module.verbose('Setting progress bar transition duration', duration);                                      // 11220
            $bar                                                                                                       // 11221
              .css({                                                                                                   // 11222
                'transition-duration':  duration                                                                       // 11223
              })                                                                                                       // 11224
            ;                                                                                                          // 11225
          },                                                                                                           // 11226
          percent: function(percent) {                                                                                 // 11227
            percent = (typeof percent == 'string')                                                                     // 11228
              ? +(percent.replace('%', ''))                                                                            // 11229
              : percent                                                                                                // 11230
            ;                                                                                                          // 11231
            // round display percentage                                                                                // 11232
            percent = (settings.precision > 0)                                                                         // 11233
              ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision)                            // 11234
              : Math.round(percent)                                                                                    // 11235
            ;                                                                                                          // 11236
            module.percent = percent;                                                                                  // 11237
            if( !module.has.total() ) {                                                                                // 11238
              module.value = (settings.precision > 0)                                                                  // 11239
                ? Math.round( (percent / 100) * module.total * (10 * settings.precision)) / (10 * settings.precision)  // 11240
                : Math.round( (percent / 100) * module.total * 10) / 10                                                // 11241
              ;                                                                                                        // 11242
              if(settings.limitValues) {                                                                               // 11243
                module.value = (module.value > 100)                                                                    // 11244
                  ? 100                                                                                                // 11245
                  : (module.value < 0)                                                                                 // 11246
                    ? 0                                                                                                // 11247
                    : module.value                                                                                     // 11248
                ;                                                                                                      // 11249
              }                                                                                                        // 11250
            }                                                                                                          // 11251
            module.set.barWidth(percent);                                                                              // 11252
            module.set.labelInterval();                                                                                // 11253
            module.set.labels();                                                                                       // 11254
            settings.onChange.call(element, percent, module.value, module.total);                                      // 11255
          },                                                                                                           // 11256
          labelInterval: function() {                                                                                  // 11257
            var                                                                                                        // 11258
              animationCallback = function() {                                                                         // 11259
                module.verbose('Bar finished animating, removing continuous label updates');                           // 11260
                clearInterval(module.interval);                                                                        // 11261
                animating = false;                                                                                     // 11262
                module.set.labels();                                                                                   // 11263
              }                                                                                                        // 11264
            ;                                                                                                          // 11265
            clearInterval(module.interval);                                                                            // 11266
            $bar.one(transitionEnd + eventNamespace, animationCallback);                                               // 11267
            module.timer = setTimeout(animationCallback, settings.duration + 100);                                     // 11268
            animating = true;                                                                                          // 11269
            module.interval = setInterval(module.set.labels, settings.framerate);                                      // 11270
          },                                                                                                           // 11271
          labels: function() {                                                                                         // 11272
            module.verbose('Setting both bar progress and outer label text');                                          // 11273
            module.set.barLabel();                                                                                     // 11274
            module.set.state();                                                                                        // 11275
          },                                                                                                           // 11276
          label: function(text) {                                                                                      // 11277
            text = text || '';                                                                                         // 11278
            if(text) {                                                                                                 // 11279
              text = module.get.text(text);                                                                            // 11280
              module.debug('Setting label to text', text);                                                             // 11281
              $label.text(text);                                                                                       // 11282
            }                                                                                                          // 11283
          },                                                                                                           // 11284
          state: function(percent) {                                                                                   // 11285
            percent = (percent !== undefined)                                                                          // 11286
              ? percent                                                                                                // 11287
              : module.percent                                                                                         // 11288
            ;                                                                                                          // 11289
            if(percent === 100) {                                                                                      // 11290
              if(settings.autoSuccess && !(module.is.warning() || module.is.error())) {                                // 11291
                module.set.success();                                                                                  // 11292
                module.debug('Automatically triggering success at 100%');                                              // 11293
              }                                                                                                        // 11294
              else {                                                                                                   // 11295
                module.verbose('Reached 100% removing active state');                                                  // 11296
                module.remove.active();                                                                                // 11297
              }                                                                                                        // 11298
            }                                                                                                          // 11299
            else if(percent > 0) {                                                                                     // 11300
              module.verbose('Adjusting active progress bar label', percent);                                          // 11301
              module.set.active();                                                                                     // 11302
            }                                                                                                          // 11303
            else {                                                                                                     // 11304
              module.remove.active();                                                                                  // 11305
              module.set.label(settings.text.active);                                                                  // 11306
            }                                                                                                          // 11307
          },                                                                                                           // 11308
          barLabel: function(text) {                                                                                   // 11309
            if(text !== undefined) {                                                                                   // 11310
              $progress.text( module.get.text(text) );                                                                 // 11311
            }                                                                                                          // 11312
            else if(settings.label == 'ratio' && module.total) {                                                       // 11313
              module.debug('Adding ratio to bar label');                                                               // 11314
              $progress.text( module.get.text(settings.text.ratio) );                                                  // 11315
            }                                                                                                          // 11316
            else if(settings.label == 'percent') {                                                                     // 11317
              module.debug('Adding percentage to bar label');                                                          // 11318
              $progress.text( module.get.text(settings.text.percent) );                                                // 11319
            }                                                                                                          // 11320
          },                                                                                                           // 11321
          active: function(text) {                                                                                     // 11322
            text = text || settings.text.active;                                                                       // 11323
            module.debug('Setting active state');                                                                      // 11324
            if(settings.showActivity && !module.is.active() ) {                                                        // 11325
              $module.addClass(className.active);                                                                      // 11326
            }                                                                                                          // 11327
            module.remove.warning();                                                                                   // 11328
            module.remove.error();                                                                                     // 11329
            module.remove.success();                                                                                   // 11330
            if(text) {                                                                                                 // 11331
              module.set.label(text);                                                                                  // 11332
            }                                                                                                          // 11333
            settings.onActive.call(element, module.value, module.total);                                               // 11334
          },                                                                                                           // 11335
          success : function(text) {                                                                                   // 11336
            text = text || settings.text.success;                                                                      // 11337
            module.debug('Setting success state');                                                                     // 11338
            $module.addClass(className.success);                                                                       // 11339
            module.remove.active();                                                                                    // 11340
            module.remove.warning();                                                                                   // 11341
            module.remove.error();                                                                                     // 11342
            module.complete();                                                                                         // 11343
            if(text) {                                                                                                 // 11344
              module.set.label(text);                                                                                  // 11345
            }                                                                                                          // 11346
            settings.onSuccess.call(element, module.total);                                                            // 11347
          },                                                                                                           // 11348
          warning : function(text) {                                                                                   // 11349
            text = text || settings.text.warning;                                                                      // 11350
            module.debug('Setting warning state');                                                                     // 11351
            $module.addClass(className.warning);                                                                       // 11352
            module.remove.active();                                                                                    // 11353
            module.remove.success();                                                                                   // 11354
            module.remove.error();                                                                                     // 11355
            module.complete();                                                                                         // 11356
            if(text) {                                                                                                 // 11357
              module.set.label(text);                                                                                  // 11358
            }                                                                                                          // 11359
            settings.onWarning.call(element, module.value, module.total);                                              // 11360
          },                                                                                                           // 11361
          error : function(text) {                                                                                     // 11362
            text = text || settings.text.error;                                                                        // 11363
            module.debug('Setting error state');                                                                       // 11364
            $module.addClass(className.error);                                                                         // 11365
            module.remove.active();                                                                                    // 11366
            module.remove.success();                                                                                   // 11367
            module.remove.warning();                                                                                   // 11368
            module.complete();                                                                                         // 11369
            if(text) {                                                                                                 // 11370
              module.set.label(text);                                                                                  // 11371
            }                                                                                                          // 11372
            settings.onError.call(element, module.value, module.total);                                                // 11373
          },                                                                                                           // 11374
          transitionEvent: function() {                                                                                // 11375
            transitionEnd = module.get.transitionEnd();                                                                // 11376
          },                                                                                                           // 11377
          total: function(totalValue) {                                                                                // 11378
            module.total = totalValue;                                                                                 // 11379
          },                                                                                                           // 11380
          value: function(value) {                                                                                     // 11381
            module.value = value;                                                                                      // 11382
          },                                                                                                           // 11383
          progress: function(value) {                                                                                  // 11384
            var                                                                                                        // 11385
              numericValue = module.get.numericValue(value),                                                           // 11386
              percentComplete                                                                                          // 11387
            ;                                                                                                          // 11388
            if(numericValue === false) {                                                                               // 11389
              module.error(error.nonNumeric, value);                                                                   // 11390
            }                                                                                                          // 11391
            if( module.has.total() ) {                                                                                 // 11392
              module.set.value(numericValue);                                                                          // 11393
              percentComplete = (numericValue / module.total) * 100;                                                   // 11394
              module.debug('Calculating percent complete from total', percentComplete);                                // 11395
              module.set.percent( percentComplete );                                                                   // 11396
            }                                                                                                          // 11397
            else {                                                                                                     // 11398
              percentComplete = numericValue;                                                                          // 11399
              module.debug('Setting value to exact percentage value', percentComplete);                                // 11400
              module.set.percent( percentComplete );                                                                   // 11401
            }                                                                                                          // 11402
          }                                                                                                            // 11403
        },                                                                                                             // 11404
                                                                                                                       // 11405
        setting: function(name, value) {                                                                               // 11406
          module.debug('Changing setting', name, value);                                                               // 11407
          if( $.isPlainObject(name) ) {                                                                                // 11408
            $.extend(true, settings, name);                                                                            // 11409
          }                                                                                                            // 11410
          else if(value !== undefined) {                                                                               // 11411
            settings[name] = value;                                                                                    // 11412
          }                                                                                                            // 11413
          else {                                                                                                       // 11414
            return settings[name];                                                                                     // 11415
          }                                                                                                            // 11416
        },                                                                                                             // 11417
        internal: function(name, value) {                                                                              // 11418
          if( $.isPlainObject(name) ) {                                                                                // 11419
            $.extend(true, module, name);                                                                              // 11420
          }                                                                                                            // 11421
          else if(value !== undefined) {                                                                               // 11422
            module[name] = value;                                                                                      // 11423
          }                                                                                                            // 11424
          else {                                                                                                       // 11425
            return module[name];                                                                                       // 11426
          }                                                                                                            // 11427
        },                                                                                                             // 11428
        debug: function() {                                                                                            // 11429
          if(settings.debug) {                                                                                         // 11430
            if(settings.performance) {                                                                                 // 11431
              module.performance.log(arguments);                                                                       // 11432
            }                                                                                                          // 11433
            else {                                                                                                     // 11434
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 11435
              module.debug.apply(console, arguments);                                                                  // 11436
            }                                                                                                          // 11437
          }                                                                                                            // 11438
        },                                                                                                             // 11439
        verbose: function() {                                                                                          // 11440
          if(settings.verbose && settings.debug) {                                                                     // 11441
            if(settings.performance) {                                                                                 // 11442
              module.performance.log(arguments);                                                                       // 11443
            }                                                                                                          // 11444
            else {                                                                                                     // 11445
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 11446
              module.verbose.apply(console, arguments);                                                                // 11447
            }                                                                                                          // 11448
          }                                                                                                            // 11449
        },                                                                                                             // 11450
        error: function() {                                                                                            // 11451
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 11452
          module.error.apply(console, arguments);                                                                      // 11453
        },                                                                                                             // 11454
        performance: {                                                                                                 // 11455
          log: function(message) {                                                                                     // 11456
            var                                                                                                        // 11457
              currentTime,                                                                                             // 11458
              executionTime,                                                                                           // 11459
              previousTime                                                                                             // 11460
            ;                                                                                                          // 11461
            if(settings.performance) {                                                                                 // 11462
              currentTime   = new Date().getTime();                                                                    // 11463
              previousTime  = time || currentTime;                                                                     // 11464
              executionTime = currentTime - previousTime;                                                              // 11465
              time          = currentTime;                                                                             // 11466
              performance.push({                                                                                       // 11467
                'Name'           : message[0],                                                                         // 11468
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 11469
                'Element'        : element,                                                                            // 11470
                'Execution Time' : executionTime                                                                       // 11471
              });                                                                                                      // 11472
            }                                                                                                          // 11473
            clearTimeout(module.performance.timer);                                                                    // 11474
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 11475
          },                                                                                                           // 11476
          display: function() {                                                                                        // 11477
            var                                                                                                        // 11478
              title = settings.name + ':',                                                                             // 11479
              totalTime = 0                                                                                            // 11480
            ;                                                                                                          // 11481
            time = false;                                                                                              // 11482
            clearTimeout(module.performance.timer);                                                                    // 11483
            $.each(performance, function(index, data) {                                                                // 11484
              totalTime += data['Execution Time'];                                                                     // 11485
            });                                                                                                        // 11486
            title += ' ' + totalTime + 'ms';                                                                           // 11487
            if(moduleSelector) {                                                                                       // 11488
              title += ' \'' + moduleSelector + '\'';                                                                  // 11489
            }                                                                                                          // 11490
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 11491
              console.groupCollapsed(title);                                                                           // 11492
              if(console.table) {                                                                                      // 11493
                console.table(performance);                                                                            // 11494
              }                                                                                                        // 11495
              else {                                                                                                   // 11496
                $.each(performance, function(index, data) {                                                            // 11497
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 11498
                });                                                                                                    // 11499
              }                                                                                                        // 11500
              console.groupEnd();                                                                                      // 11501
            }                                                                                                          // 11502
            performance = [];                                                                                          // 11503
          }                                                                                                            // 11504
        },                                                                                                             // 11505
        invoke: function(query, passedArguments, context) {                                                            // 11506
          var                                                                                                          // 11507
            object = instance,                                                                                         // 11508
            maxDepth,                                                                                                  // 11509
            found,                                                                                                     // 11510
            response                                                                                                   // 11511
          ;                                                                                                            // 11512
          passedArguments = passedArguments || queryArguments;                                                         // 11513
          context         = element         || context;                                                                // 11514
          if(typeof query == 'string' && object !== undefined) {                                                       // 11515
            query    = query.split(/[\. ]/);                                                                           // 11516
            maxDepth = query.length - 1;                                                                               // 11517
            $.each(query, function(depth, value) {                                                                     // 11518
              var camelCaseValue = (depth != maxDepth)                                                                 // 11519
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 11520
                : query                                                                                                // 11521
              ;                                                                                                        // 11522
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 11523
                object = object[camelCaseValue];                                                                       // 11524
              }                                                                                                        // 11525
              else if( object[camelCaseValue] !== undefined ) {                                                        // 11526
                found = object[camelCaseValue];                                                                        // 11527
                return false;                                                                                          // 11528
              }                                                                                                        // 11529
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 11530
                object = object[value];                                                                                // 11531
              }                                                                                                        // 11532
              else if( object[value] !== undefined ) {                                                                 // 11533
                found = object[value];                                                                                 // 11534
                return false;                                                                                          // 11535
              }                                                                                                        // 11536
              else {                                                                                                   // 11537
                module.error(error.method, query);                                                                     // 11538
                return false;                                                                                          // 11539
              }                                                                                                        // 11540
            });                                                                                                        // 11541
          }                                                                                                            // 11542
          if ( $.isFunction( found ) ) {                                                                               // 11543
            response = found.apply(context, passedArguments);                                                          // 11544
          }                                                                                                            // 11545
          else if(found !== undefined) {                                                                               // 11546
            response = found;                                                                                          // 11547
          }                                                                                                            // 11548
          if($.isArray(returnedValue)) {                                                                               // 11549
            returnedValue.push(response);                                                                              // 11550
          }                                                                                                            // 11551
          else if(returnedValue !== undefined) {                                                                       // 11552
            returnedValue = [returnedValue, response];                                                                 // 11553
          }                                                                                                            // 11554
          else if(response !== undefined) {                                                                            // 11555
            returnedValue = response;                                                                                  // 11556
          }                                                                                                            // 11557
          return found;                                                                                                // 11558
        }                                                                                                              // 11559
      };                                                                                                               // 11560
                                                                                                                       // 11561
      if(methodInvoked) {                                                                                              // 11562
        if(instance === undefined) {                                                                                   // 11563
          module.initialize();                                                                                         // 11564
        }                                                                                                              // 11565
        module.invoke(query);                                                                                          // 11566
      }                                                                                                                // 11567
      else {                                                                                                           // 11568
        if(instance !== undefined) {                                                                                   // 11569
          instance.invoke('destroy');                                                                                  // 11570
        }                                                                                                              // 11571
        module.initialize();                                                                                           // 11572
      }                                                                                                                // 11573
    })                                                                                                                 // 11574
  ;                                                                                                                    // 11575
                                                                                                                       // 11576
  return (returnedValue !== undefined)                                                                                 // 11577
    ? returnedValue                                                                                                    // 11578
    : this                                                                                                             // 11579
  ;                                                                                                                    // 11580
};                                                                                                                     // 11581
                                                                                                                       // 11582
$.fn.progress.settings = {                                                                                             // 11583
                                                                                                                       // 11584
  name         : 'Progress',                                                                                           // 11585
  namespace    : 'progress',                                                                                           // 11586
                                                                                                                       // 11587
  debug        : false,                                                                                                // 11588
  verbose      : false,                                                                                                // 11589
  performance  : true,                                                                                                 // 11590
                                                                                                                       // 11591
  random       : {                                                                                                     // 11592
    min : 2,                                                                                                           // 11593
    max : 5                                                                                                            // 11594
  },                                                                                                                   // 11595
                                                                                                                       // 11596
  duration     : 300,                                                                                                  // 11597
                                                                                                                       // 11598
  autoSuccess  : true,                                                                                                 // 11599
  showActivity : true,                                                                                                 // 11600
  limitValues  : true,                                                                                                 // 11601
                                                                                                                       // 11602
  label        : 'percent',                                                                                            // 11603
  precision    : 0,                                                                                                    // 11604
  framerate    : (1000 / 30), /// 30 fps                                                                               // 11605
                                                                                                                       // 11606
  percent      : false,                                                                                                // 11607
  total        : false,                                                                                                // 11608
  value        : false,                                                                                                // 11609
                                                                                                                       // 11610
  onChange     : function(percent, value, total){},                                                                    // 11611
  onSuccess    : function(total){},                                                                                    // 11612
  onActive     : function(value, total){},                                                                             // 11613
  onError      : function(value, total){},                                                                             // 11614
  onWarning    : function(value, total){},                                                                             // 11615
                                                                                                                       // 11616
  error    : {                                                                                                         // 11617
    method     : 'The method you called is not defined.',                                                              // 11618
    nonNumeric : 'Progress value is non numeric',                                                                      // 11619
    tooHigh    : 'Value specified is above 100%',                                                                      // 11620
    tooLow     : 'Value specified is below 0%'                                                                         // 11621
  },                                                                                                                   // 11622
                                                                                                                       // 11623
  regExp: {                                                                                                            // 11624
    variable: /\{\$*[A-z0-9]+\}/g                                                                                      // 11625
  },                                                                                                                   // 11626
                                                                                                                       // 11627
  metadata: {                                                                                                          // 11628
    percent : 'percent',                                                                                               // 11629
    total   : 'total',                                                                                                 // 11630
    value   : 'value'                                                                                                  // 11631
  },                                                                                                                   // 11632
                                                                                                                       // 11633
  selector : {                                                                                                         // 11634
    bar      : '> .bar',                                                                                               // 11635
    label    : '> .label',                                                                                             // 11636
    progress : '.bar > .progress'                                                                                      // 11637
  },                                                                                                                   // 11638
                                                                                                                       // 11639
  text : {                                                                                                             // 11640
    active  : false,                                                                                                   // 11641
    error   : false,                                                                                                   // 11642
    success : false,                                                                                                   // 11643
    warning : false,                                                                                                   // 11644
    percent : '{percent}%',                                                                                            // 11645
    ratio   : '{value} of {total}'                                                                                     // 11646
  },                                                                                                                   // 11647
                                                                                                                       // 11648
  className : {                                                                                                        // 11649
    active  : 'active',                                                                                                // 11650
    error   : 'error',                                                                                                 // 11651
    success : 'success',                                                                                               // 11652
    warning : 'warning'                                                                                                // 11653
  }                                                                                                                    // 11654
                                                                                                                       // 11655
};                                                                                                                     // 11656
                                                                                                                       // 11657
                                                                                                                       // 11658
})( jQuery, window , document );                                                                                       // 11659
/*!                                                                                                                    // 11660
 * # Semantic UI 2.1.2 - Rating                                                                                        // 11661
 * http://github.com/semantic-org/semantic-ui/                                                                         // 11662
 *                                                                                                                     // 11663
 *                                                                                                                     // 11664
 * Copyright 2015 Contributors                                                                                         // 11665
 * Released under the MIT license                                                                                      // 11666
 * http://opensource.org/licenses/MIT                                                                                  // 11667
 *                                                                                                                     // 11668
 */                                                                                                                    // 11669
                                                                                                                       // 11670
;(function ($, window, document, undefined) {                                                                          // 11671
                                                                                                                       // 11672
"use strict";                                                                                                          // 11673
                                                                                                                       // 11674
$.fn.rating = function(parameters) {                                                                                   // 11675
  var                                                                                                                  // 11676
    $allModules     = $(this),                                                                                         // 11677
    moduleSelector  = $allModules.selector || '',                                                                      // 11678
                                                                                                                       // 11679
    time            = new Date().getTime(),                                                                            // 11680
    performance     = [],                                                                                              // 11681
                                                                                                                       // 11682
    query           = arguments[0],                                                                                    // 11683
    methodInvoked   = (typeof query == 'string'),                                                                      // 11684
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 11685
    returnedValue                                                                                                      // 11686
  ;                                                                                                                    // 11687
  $allModules                                                                                                          // 11688
    .each(function() {                                                                                                 // 11689
      var                                                                                                              // 11690
        settings        = ( $.isPlainObject(parameters) )                                                              // 11691
          ? $.extend(true, {}, $.fn.rating.settings, parameters)                                                       // 11692
          : $.extend({}, $.fn.rating.settings),                                                                        // 11693
                                                                                                                       // 11694
        namespace       = settings.namespace,                                                                          // 11695
        className       = settings.className,                                                                          // 11696
        metadata        = settings.metadata,                                                                           // 11697
        selector        = settings.selector,                                                                           // 11698
        error           = settings.error,                                                                              // 11699
                                                                                                                       // 11700
        eventNamespace  = '.' + namespace,                                                                             // 11701
        moduleNamespace = 'module-' + namespace,                                                                       // 11702
                                                                                                                       // 11703
        element         = this,                                                                                        // 11704
        instance        = $(this).data(moduleNamespace),                                                               // 11705
                                                                                                                       // 11706
        $module         = $(this),                                                                                     // 11707
        $icon           = $module.find(selector.icon),                                                                 // 11708
                                                                                                                       // 11709
        module                                                                                                         // 11710
      ;                                                                                                                // 11711
                                                                                                                       // 11712
      module = {                                                                                                       // 11713
                                                                                                                       // 11714
        initialize: function() {                                                                                       // 11715
          module.verbose('Initializing rating module', settings);                                                      // 11716
                                                                                                                       // 11717
          if($icon.length === 0) {                                                                                     // 11718
            module.setup.layout();                                                                                     // 11719
          }                                                                                                            // 11720
                                                                                                                       // 11721
          if(settings.interactive) {                                                                                   // 11722
            module.enable();                                                                                           // 11723
          }                                                                                                            // 11724
          else {                                                                                                       // 11725
            module.disable();                                                                                          // 11726
          }                                                                                                            // 11727
          module.set.rating( module.get.initialRating() );                                                             // 11728
          module.instantiate();                                                                                        // 11729
        },                                                                                                             // 11730
                                                                                                                       // 11731
        instantiate: function() {                                                                                      // 11732
          module.verbose('Instantiating module', settings);                                                            // 11733
          instance = module;                                                                                           // 11734
          $module                                                                                                      // 11735
            .data(moduleNamespace, module)                                                                             // 11736
          ;                                                                                                            // 11737
        },                                                                                                             // 11738
                                                                                                                       // 11739
        destroy: function() {                                                                                          // 11740
          module.verbose('Destroying previous instance', instance);                                                    // 11741
          module.remove.events();                                                                                      // 11742
          $module                                                                                                      // 11743
            .removeData(moduleNamespace)                                                                               // 11744
          ;                                                                                                            // 11745
        },                                                                                                             // 11746
                                                                                                                       // 11747
        refresh: function() {                                                                                          // 11748
          $icon   = $module.find(selector.icon);                                                                       // 11749
        },                                                                                                             // 11750
                                                                                                                       // 11751
        setup: {                                                                                                       // 11752
          layout: function() {                                                                                         // 11753
            var                                                                                                        // 11754
              maxRating = module.get.maxRating(),                                                                      // 11755
              html      = $.fn.rating.settings.templates.icon(maxRating)                                               // 11756
            ;                                                                                                          // 11757
            module.debug('Generating icon html dynamically');                                                          // 11758
            $module                                                                                                    // 11759
              .html(html)                                                                                              // 11760
            ;                                                                                                          // 11761
            module.refresh();                                                                                          // 11762
          }                                                                                                            // 11763
        },                                                                                                             // 11764
                                                                                                                       // 11765
        event: {                                                                                                       // 11766
          mouseenter: function() {                                                                                     // 11767
            var                                                                                                        // 11768
              $activeIcon = $(this)                                                                                    // 11769
            ;                                                                                                          // 11770
            $activeIcon                                                                                                // 11771
              .nextAll()                                                                                               // 11772
                .removeClass(className.selected)                                                                       // 11773
            ;                                                                                                          // 11774
            $module                                                                                                    // 11775
              .addClass(className.selected)                                                                            // 11776
            ;                                                                                                          // 11777
            $activeIcon                                                                                                // 11778
              .addClass(className.selected)                                                                            // 11779
                .prevAll()                                                                                             // 11780
                .addClass(className.selected)                                                                          // 11781
            ;                                                                                                          // 11782
          },                                                                                                           // 11783
          mouseleave: function() {                                                                                     // 11784
            $module                                                                                                    // 11785
              .removeClass(className.selected)                                                                         // 11786
            ;                                                                                                          // 11787
            $icon                                                                                                      // 11788
              .removeClass(className.selected)                                                                         // 11789
            ;                                                                                                          // 11790
          },                                                                                                           // 11791
          click: function() {                                                                                          // 11792
            var                                                                                                        // 11793
              $activeIcon   = $(this),                                                                                 // 11794
              currentRating = module.get.rating(),                                                                     // 11795
              rating        = $icon.index($activeIcon) + 1,                                                            // 11796
              canClear      = (settings.clearable == 'auto')                                                           // 11797
               ? ($icon.length === 1)                                                                                  // 11798
               : settings.clearable                                                                                    // 11799
            ;                                                                                                          // 11800
            if(canClear && currentRating == rating) {                                                                  // 11801
              module.clearRating();                                                                                    // 11802
            }                                                                                                          // 11803
            else {                                                                                                     // 11804
              module.set.rating( rating );                                                                             // 11805
            }                                                                                                          // 11806
          }                                                                                                            // 11807
        },                                                                                                             // 11808
                                                                                                                       // 11809
        clearRating: function() {                                                                                      // 11810
          module.debug('Clearing current rating');                                                                     // 11811
          module.set.rating(0);                                                                                        // 11812
        },                                                                                                             // 11813
                                                                                                                       // 11814
        bind: {                                                                                                        // 11815
          events: function() {                                                                                         // 11816
            module.verbose('Binding events');                                                                          // 11817
            $module                                                                                                    // 11818
              .on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter)                               // 11819
              .on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave)                               // 11820
              .on('click'      + eventNamespace, selector.icon, module.event.click)                                    // 11821
            ;                                                                                                          // 11822
          }                                                                                                            // 11823
        },                                                                                                             // 11824
                                                                                                                       // 11825
        remove: {                                                                                                      // 11826
          events: function() {                                                                                         // 11827
            module.verbose('Removing events');                                                                         // 11828
            $module                                                                                                    // 11829
              .off(eventNamespace)                                                                                     // 11830
            ;                                                                                                          // 11831
          }                                                                                                            // 11832
        },                                                                                                             // 11833
                                                                                                                       // 11834
        enable: function() {                                                                                           // 11835
          module.debug('Setting rating to interactive mode');                                                          // 11836
          module.bind.events();                                                                                        // 11837
          $module                                                                                                      // 11838
            .removeClass(className.disabled)                                                                           // 11839
          ;                                                                                                            // 11840
        },                                                                                                             // 11841
                                                                                                                       // 11842
        disable: function() {                                                                                          // 11843
          module.debug('Setting rating to read-only mode');                                                            // 11844
          module.remove.events();                                                                                      // 11845
          $module                                                                                                      // 11846
            .addClass(className.disabled)                                                                              // 11847
          ;                                                                                                            // 11848
        },                                                                                                             // 11849
                                                                                                                       // 11850
        get: {                                                                                                         // 11851
          initialRating: function() {                                                                                  // 11852
            if($module.data(metadata.rating) !== undefined) {                                                          // 11853
              $module.removeData(metadata.rating);                                                                     // 11854
              return $module.data(metadata.rating);                                                                    // 11855
            }                                                                                                          // 11856
            return settings.initialRating;                                                                             // 11857
          },                                                                                                           // 11858
          maxRating: function() {                                                                                      // 11859
            if($module.data(metadata.maxRating) !== undefined) {                                                       // 11860
              $module.removeData(metadata.maxRating);                                                                  // 11861
              return $module.data(metadata.maxRating);                                                                 // 11862
            }                                                                                                          // 11863
            return settings.maxRating;                                                                                 // 11864
          },                                                                                                           // 11865
          rating: function() {                                                                                         // 11866
            var                                                                                                        // 11867
              currentRating = $icon.filter('.' + className.active).length                                              // 11868
            ;                                                                                                          // 11869
            module.verbose('Current rating retrieved', currentRating);                                                 // 11870
            return currentRating;                                                                                      // 11871
          }                                                                                                            // 11872
        },                                                                                                             // 11873
                                                                                                                       // 11874
        set: {                                                                                                         // 11875
          rating: function(rating) {                                                                                   // 11876
            var                                                                                                        // 11877
              ratingIndex = (rating - 1 >= 0)                                                                          // 11878
                ? (rating - 1)                                                                                         // 11879
                : 0,                                                                                                   // 11880
              $activeIcon = $icon.eq(ratingIndex)                                                                      // 11881
            ;                                                                                                          // 11882
            $module                                                                                                    // 11883
              .removeClass(className.selected)                                                                         // 11884
            ;                                                                                                          // 11885
            $icon                                                                                                      // 11886
              .removeClass(className.selected)                                                                         // 11887
              .removeClass(className.active)                                                                           // 11888
            ;                                                                                                          // 11889
            if(rating > 0) {                                                                                           // 11890
              module.verbose('Setting current rating to', rating);                                                     // 11891
              $activeIcon                                                                                              // 11892
                .prevAll()                                                                                             // 11893
                .andSelf()                                                                                             // 11894
                  .addClass(className.active)                                                                          // 11895
              ;                                                                                                        // 11896
            }                                                                                                          // 11897
            settings.onRate.call(element, rating);                                                                     // 11898
          }                                                                                                            // 11899
        },                                                                                                             // 11900
                                                                                                                       // 11901
        setting: function(name, value) {                                                                               // 11902
          module.debug('Changing setting', name, value);                                                               // 11903
          if( $.isPlainObject(name) ) {                                                                                // 11904
            $.extend(true, settings, name);                                                                            // 11905
          }                                                                                                            // 11906
          else if(value !== undefined) {                                                                               // 11907
            settings[name] = value;                                                                                    // 11908
          }                                                                                                            // 11909
          else {                                                                                                       // 11910
            return settings[name];                                                                                     // 11911
          }                                                                                                            // 11912
        },                                                                                                             // 11913
        internal: function(name, value) {                                                                              // 11914
          if( $.isPlainObject(name) ) {                                                                                // 11915
            $.extend(true, module, name);                                                                              // 11916
          }                                                                                                            // 11917
          else if(value !== undefined) {                                                                               // 11918
            module[name] = value;                                                                                      // 11919
          }                                                                                                            // 11920
          else {                                                                                                       // 11921
            return module[name];                                                                                       // 11922
          }                                                                                                            // 11923
        },                                                                                                             // 11924
        debug: function() {                                                                                            // 11925
          if(settings.debug) {                                                                                         // 11926
            if(settings.performance) {                                                                                 // 11927
              module.performance.log(arguments);                                                                       // 11928
            }                                                                                                          // 11929
            else {                                                                                                     // 11930
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 11931
              module.debug.apply(console, arguments);                                                                  // 11932
            }                                                                                                          // 11933
          }                                                                                                            // 11934
        },                                                                                                             // 11935
        verbose: function() {                                                                                          // 11936
          if(settings.verbose && settings.debug) {                                                                     // 11937
            if(settings.performance) {                                                                                 // 11938
              module.performance.log(arguments);                                                                       // 11939
            }                                                                                                          // 11940
            else {                                                                                                     // 11941
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 11942
              module.verbose.apply(console, arguments);                                                                // 11943
            }                                                                                                          // 11944
          }                                                                                                            // 11945
        },                                                                                                             // 11946
        error: function() {                                                                                            // 11947
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 11948
          module.error.apply(console, arguments);                                                                      // 11949
        },                                                                                                             // 11950
        performance: {                                                                                                 // 11951
          log: function(message) {                                                                                     // 11952
            var                                                                                                        // 11953
              currentTime,                                                                                             // 11954
              executionTime,                                                                                           // 11955
              previousTime                                                                                             // 11956
            ;                                                                                                          // 11957
            if(settings.performance) {                                                                                 // 11958
              currentTime   = new Date().getTime();                                                                    // 11959
              previousTime  = time || currentTime;                                                                     // 11960
              executionTime = currentTime - previousTime;                                                              // 11961
              time          = currentTime;                                                                             // 11962
              performance.push({                                                                                       // 11963
                'Name'           : message[0],                                                                         // 11964
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 11965
                'Element'        : element,                                                                            // 11966
                'Execution Time' : executionTime                                                                       // 11967
              });                                                                                                      // 11968
            }                                                                                                          // 11969
            clearTimeout(module.performance.timer);                                                                    // 11970
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 11971
          },                                                                                                           // 11972
          display: function() {                                                                                        // 11973
            var                                                                                                        // 11974
              title = settings.name + ':',                                                                             // 11975
              totalTime = 0                                                                                            // 11976
            ;                                                                                                          // 11977
            time = false;                                                                                              // 11978
            clearTimeout(module.performance.timer);                                                                    // 11979
            $.each(performance, function(index, data) {                                                                // 11980
              totalTime += data['Execution Time'];                                                                     // 11981
            });                                                                                                        // 11982
            title += ' ' + totalTime + 'ms';                                                                           // 11983
            if(moduleSelector) {                                                                                       // 11984
              title += ' \'' + moduleSelector + '\'';                                                                  // 11985
            }                                                                                                          // 11986
            if($allModules.length > 1) {                                                                               // 11987
              title += ' ' + '(' + $allModules.length + ')';                                                           // 11988
            }                                                                                                          // 11989
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 11990
              console.groupCollapsed(title);                                                                           // 11991
              if(console.table) {                                                                                      // 11992
                console.table(performance);                                                                            // 11993
              }                                                                                                        // 11994
              else {                                                                                                   // 11995
                $.each(performance, function(index, data) {                                                            // 11996
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 11997
                });                                                                                                    // 11998
              }                                                                                                        // 11999
              console.groupEnd();                                                                                      // 12000
            }                                                                                                          // 12001
            performance = [];                                                                                          // 12002
          }                                                                                                            // 12003
        },                                                                                                             // 12004
        invoke: function(query, passedArguments, context) {                                                            // 12005
          var                                                                                                          // 12006
            object = instance,                                                                                         // 12007
            maxDepth,                                                                                                  // 12008
            found,                                                                                                     // 12009
            response                                                                                                   // 12010
          ;                                                                                                            // 12011
          passedArguments = passedArguments || queryArguments;                                                         // 12012
          context         = element         || context;                                                                // 12013
          if(typeof query == 'string' && object !== undefined) {                                                       // 12014
            query    = query.split(/[\. ]/);                                                                           // 12015
            maxDepth = query.length - 1;                                                                               // 12016
            $.each(query, function(depth, value) {                                                                     // 12017
              var camelCaseValue = (depth != maxDepth)                                                                 // 12018
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 12019
                : query                                                                                                // 12020
              ;                                                                                                        // 12021
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 12022
                object = object[camelCaseValue];                                                                       // 12023
              }                                                                                                        // 12024
              else if( object[camelCaseValue] !== undefined ) {                                                        // 12025
                found = object[camelCaseValue];                                                                        // 12026
                return false;                                                                                          // 12027
              }                                                                                                        // 12028
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 12029
                object = object[value];                                                                                // 12030
              }                                                                                                        // 12031
              else if( object[value] !== undefined ) {                                                                 // 12032
                found = object[value];                                                                                 // 12033
                return false;                                                                                          // 12034
              }                                                                                                        // 12035
              else {                                                                                                   // 12036
                return false;                                                                                          // 12037
              }                                                                                                        // 12038
            });                                                                                                        // 12039
          }                                                                                                            // 12040
          if ( $.isFunction( found ) ) {                                                                               // 12041
            response = found.apply(context, passedArguments);                                                          // 12042
          }                                                                                                            // 12043
          else if(found !== undefined) {                                                                               // 12044
            response = found;                                                                                          // 12045
          }                                                                                                            // 12046
          if($.isArray(returnedValue)) {                                                                               // 12047
            returnedValue.push(response);                                                                              // 12048
          }                                                                                                            // 12049
          else if(returnedValue !== undefined) {                                                                       // 12050
            returnedValue = [returnedValue, response];                                                                 // 12051
          }                                                                                                            // 12052
          else if(response !== undefined) {                                                                            // 12053
            returnedValue = response;                                                                                  // 12054
          }                                                                                                            // 12055
          return found;                                                                                                // 12056
        }                                                                                                              // 12057
      };                                                                                                               // 12058
      if(methodInvoked) {                                                                                              // 12059
        if(instance === undefined) {                                                                                   // 12060
          module.initialize();                                                                                         // 12061
        }                                                                                                              // 12062
        module.invoke(query);                                                                                          // 12063
      }                                                                                                                // 12064
      else {                                                                                                           // 12065
        if(instance !== undefined) {                                                                                   // 12066
          instance.invoke('destroy');                                                                                  // 12067
        }                                                                                                              // 12068
        module.initialize();                                                                                           // 12069
      }                                                                                                                // 12070
    })                                                                                                                 // 12071
  ;                                                                                                                    // 12072
                                                                                                                       // 12073
  return (returnedValue !== undefined)                                                                                 // 12074
    ? returnedValue                                                                                                    // 12075
    : this                                                                                                             // 12076
  ;                                                                                                                    // 12077
};                                                                                                                     // 12078
                                                                                                                       // 12079
$.fn.rating.settings = {                                                                                               // 12080
                                                                                                                       // 12081
  name          : 'Rating',                                                                                            // 12082
  namespace     : 'rating',                                                                                            // 12083
                                                                                                                       // 12084
  debug         : false,                                                                                               // 12085
  verbose       : false,                                                                                               // 12086
  performance   : true,                                                                                                // 12087
                                                                                                                       // 12088
  initialRating : 0,                                                                                                   // 12089
  interactive   : true,                                                                                                // 12090
  maxRating     : 4,                                                                                                   // 12091
  clearable     : 'auto',                                                                                              // 12092
                                                                                                                       // 12093
  onRate        : function(rating){},                                                                                  // 12094
                                                                                                                       // 12095
  error         : {                                                                                                    // 12096
    method    : 'The method you called is not defined',                                                                // 12097
    noMaximum : 'No maximum rating specified. Cannot generate HTML automatically'                                      // 12098
  },                                                                                                                   // 12099
                                                                                                                       // 12100
                                                                                                                       // 12101
  metadata: {                                                                                                          // 12102
    rating    : 'rating',                                                                                              // 12103
    maxRating : 'maxRating'                                                                                            // 12104
  },                                                                                                                   // 12105
                                                                                                                       // 12106
  className : {                                                                                                        // 12107
    active   : 'active',                                                                                               // 12108
    disabled : 'disabled',                                                                                             // 12109
    selected : 'selected',                                                                                             // 12110
    loading  : 'loading'                                                                                               // 12111
  },                                                                                                                   // 12112
                                                                                                                       // 12113
  selector  : {                                                                                                        // 12114
    icon : '.icon'                                                                                                     // 12115
  },                                                                                                                   // 12116
                                                                                                                       // 12117
  templates: {                                                                                                         // 12118
    icon: function(maxRating) {                                                                                        // 12119
      var                                                                                                              // 12120
        icon = 1,                                                                                                      // 12121
        html = ''                                                                                                      // 12122
      ;                                                                                                                // 12123
      while(icon <= maxRating) {                                                                                       // 12124
        html += '<i class="icon"></i>';                                                                                // 12125
        icon++;                                                                                                        // 12126
      }                                                                                                                // 12127
      return html;                                                                                                     // 12128
    }                                                                                                                  // 12129
  }                                                                                                                    // 12130
                                                                                                                       // 12131
};                                                                                                                     // 12132
                                                                                                                       // 12133
})( jQuery, window , document );                                                                                       // 12134
                                                                                                                       // 12135
/*!                                                                                                                    // 12136
 * # Semantic UI 2.1.2 - Search                                                                                        // 12137
 * http://github.com/semantic-org/semantic-ui/                                                                         // 12138
 *                                                                                                                     // 12139
 *                                                                                                                     // 12140
 * Copyright 2015 Contributors                                                                                         // 12141
 * Released under the MIT license                                                                                      // 12142
 * http://opensource.org/licenses/MIT                                                                                  // 12143
 *                                                                                                                     // 12144
 */                                                                                                                    // 12145
                                                                                                                       // 12146
;(function ($, window, document, undefined) {                                                                          // 12147
                                                                                                                       // 12148
"use strict";                                                                                                          // 12149
                                                                                                                       // 12150
$.fn.search = function(parameters) {                                                                                   // 12151
  var                                                                                                                  // 12152
    $allModules     = $(this),                                                                                         // 12153
    moduleSelector  = $allModules.selector || '',                                                                      // 12154
                                                                                                                       // 12155
    time            = new Date().getTime(),                                                                            // 12156
    performance     = [],                                                                                              // 12157
                                                                                                                       // 12158
    query           = arguments[0],                                                                                    // 12159
    methodInvoked   = (typeof query == 'string'),                                                                      // 12160
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 12161
    returnedValue                                                                                                      // 12162
  ;                                                                                                                    // 12163
  $(this)                                                                                                              // 12164
    .each(function() {                                                                                                 // 12165
      var                                                                                                              // 12166
        settings          = ( $.isPlainObject(parameters) )                                                            // 12167
          ? $.extend(true, {}, $.fn.search.settings, parameters)                                                       // 12168
          : $.extend({}, $.fn.search.settings),                                                                        // 12169
                                                                                                                       // 12170
        className       = settings.className,                                                                          // 12171
        metadata        = settings.metadata,                                                                           // 12172
        regExp          = settings.regExp,                                                                             // 12173
        fields          = settings.fields,                                                                             // 12174
        selector        = settings.selector,                                                                           // 12175
        error           = settings.error,                                                                              // 12176
        namespace       = settings.namespace,                                                                          // 12177
                                                                                                                       // 12178
        eventNamespace  = '.' + namespace,                                                                             // 12179
        moduleNamespace = namespace + '-module',                                                                       // 12180
                                                                                                                       // 12181
        $module         = $(this),                                                                                     // 12182
        $prompt         = $module.find(selector.prompt),                                                               // 12183
        $searchButton   = $module.find(selector.searchButton),                                                         // 12184
        $results        = $module.find(selector.results),                                                              // 12185
        $result         = $module.find(selector.result),                                                               // 12186
        $category       = $module.find(selector.category),                                                             // 12187
                                                                                                                       // 12188
        element         = this,                                                                                        // 12189
        instance        = $module.data(moduleNamespace),                                                               // 12190
                                                                                                                       // 12191
        module                                                                                                         // 12192
      ;                                                                                                                // 12193
                                                                                                                       // 12194
      module = {                                                                                                       // 12195
                                                                                                                       // 12196
        initialize: function() {                                                                                       // 12197
          module.verbose('Initializing module');                                                                       // 12198
          module.determine.searchFields();                                                                             // 12199
          module.bind.events();                                                                                        // 12200
          module.set.type();                                                                                           // 12201
          module.create.results();                                                                                     // 12202
          module.instantiate();                                                                                        // 12203
        },                                                                                                             // 12204
        instantiate: function() {                                                                                      // 12205
          module.verbose('Storing instance of module', module);                                                        // 12206
          instance = module;                                                                                           // 12207
          $module                                                                                                      // 12208
            .data(moduleNamespace, module)                                                                             // 12209
          ;                                                                                                            // 12210
        },                                                                                                             // 12211
        destroy: function() {                                                                                          // 12212
          module.verbose('Destroying instance');                                                                       // 12213
          $module                                                                                                      // 12214
            .off(eventNamespace)                                                                                       // 12215
            .removeData(moduleNamespace)                                                                               // 12216
          ;                                                                                                            // 12217
        },                                                                                                             // 12218
                                                                                                                       // 12219
        bind: {                                                                                                        // 12220
          events: function() {                                                                                         // 12221
            module.verbose('Binding events to search');                                                                // 12222
            if(settings.automatic) {                                                                                   // 12223
              $module                                                                                                  // 12224
                .on(module.get.inputEvent() + eventNamespace, selector.prompt, module.event.input)                     // 12225
              ;                                                                                                        // 12226
              $prompt                                                                                                  // 12227
                .attr('autocomplete', 'off')                                                                           // 12228
              ;                                                                                                        // 12229
            }                                                                                                          // 12230
            $module                                                                                                    // 12231
              // prompt                                                                                                // 12232
              .on('focus'     + eventNamespace, selector.prompt, module.event.focus)                                   // 12233
              .on('blur'      + eventNamespace, selector.prompt, module.event.blur)                                    // 12234
              .on('keydown'   + eventNamespace, selector.prompt, module.handleKeyboard)                                // 12235
              // search button                                                                                         // 12236
              .on('click'     + eventNamespace, selector.searchButton, module.query)                                   // 12237
              // results                                                                                               // 12238
              .on('mousedown' + eventNamespace, selector.results, module.event.result.mousedown)                       // 12239
              .on('mouseup'   + eventNamespace, selector.results, module.event.result.mouseup)                         // 12240
              .on('click'     + eventNamespace, selector.result,  module.event.result.click)                           // 12241
            ;                                                                                                          // 12242
          }                                                                                                            // 12243
        },                                                                                                             // 12244
                                                                                                                       // 12245
        determine: {                                                                                                   // 12246
          searchFields: function() {                                                                                   // 12247
            // this makes sure $.extend does not add specified search fields to default fields                         // 12248
            // this is the only setting which should not extend defaults                                               // 12249
            if(parameters && parameters.searchFields !== undefined) {                                                  // 12250
              settings.searchFields = parameters.searchFields;                                                         // 12251
            }                                                                                                          // 12252
          }                                                                                                            // 12253
        },                                                                                                             // 12254
                                                                                                                       // 12255
        event: {                                                                                                       // 12256
          input: function() {                                                                                          // 12257
            clearTimeout(module.timer);                                                                                // 12258
            module.timer = setTimeout(module.query, settings.searchDelay);                                             // 12259
          },                                                                                                           // 12260
          focus: function() {                                                                                          // 12261
            module.set.focus();                                                                                        // 12262
            if( module.has.minimumCharacters() ) {                                                                     // 12263
              module.query();                                                                                          // 12264
              if( module.can.show() ) {                                                                                // 12265
                module.showResults();                                                                                  // 12266
              }                                                                                                        // 12267
            }                                                                                                          // 12268
          },                                                                                                           // 12269
          blur: function(event) {                                                                                      // 12270
            var                                                                                                        // 12271
              pageLostFocus = (document.activeElement === this)                                                        // 12272
            ;                                                                                                          // 12273
            if(!pageLostFocus && !module.resultsClicked) {                                                             // 12274
              module.cancel.query();                                                                                   // 12275
              module.remove.focus();                                                                                   // 12276
              module.timer = setTimeout(module.hideResults, settings.hideDelay);                                       // 12277
            }                                                                                                          // 12278
          },                                                                                                           // 12279
          result: {                                                                                                    // 12280
            mousedown: function() {                                                                                    // 12281
              module.resultsClicked = true;                                                                            // 12282
            },                                                                                                         // 12283
            mouseup: function() {                                                                                      // 12284
              module.resultsClicked = false;                                                                           // 12285
            },                                                                                                         // 12286
            click: function(event) {                                                                                   // 12287
              module.debug('Search result selected');                                                                  // 12288
              var                                                                                                      // 12289
                $result = $(this),                                                                                     // 12290
                $title  = $result.find(selector.title).eq(0),                                                          // 12291
                $link   = $result.find('a[href]').eq(0),                                                               // 12292
                href    = $link.attr('href')   || false,                                                               // 12293
                target  = $link.attr('target') || false,                                                               // 12294
                title   = $title.html(),                                                                               // 12295
                // title is used for result lookup                                                                     // 12296
                value   = ($title.length > 0)                                                                          // 12297
                  ? $title.text()                                                                                      // 12298
                  : false,                                                                                             // 12299
                results = module.get.results(),                                                                        // 12300
                result  = $result.data(metadata.result) || module.get.result(value, results),                          // 12301
                returnedValue                                                                                          // 12302
              ;                                                                                                        // 12303
              if( $.isFunction(settings.onSelect) ) {                                                                  // 12304
                if(settings.onSelect.call(element, result, results) === false) {                                       // 12305
                  module.debug('Custom onSelect callback cancelled default select action');                            // 12306
                  return;                                                                                              // 12307
                }                                                                                                      // 12308
              }                                                                                                        // 12309
              module.hideResults();                                                                                    // 12310
              if(value) {                                                                                              // 12311
                module.set.value(value);                                                                               // 12312
              }                                                                                                        // 12313
              if(href) {                                                                                               // 12314
                module.verbose('Opening search link found in result', $link);                                          // 12315
                if(target == '_blank' || event.ctrlKey) {                                                              // 12316
                  window.open(href);                                                                                   // 12317
                }                                                                                                      // 12318
                else {                                                                                                 // 12319
                  window.location.href = (href);                                                                       // 12320
                }                                                                                                      // 12321
              }                                                                                                        // 12322
            }                                                                                                          // 12323
          }                                                                                                            // 12324
        },                                                                                                             // 12325
        handleKeyboard: function(event) {                                                                              // 12326
          var                                                                                                          // 12327
            // force selector refresh                                                                                  // 12328
            $result      = $module.find(selector.result),                                                              // 12329
            $category    = $module.find(selector.category),                                                            // 12330
            currentIndex = $result.index( $result.filter('.' + className.active) ),                                    // 12331
            resultSize   = $result.length,                                                                             // 12332
                                                                                                                       // 12333
            keyCode      = event.which,                                                                                // 12334
            keys         = {                                                                                           // 12335
              backspace : 8,                                                                                           // 12336
              enter     : 13,                                                                                          // 12337
              escape    : 27,                                                                                          // 12338
              upArrow   : 38,                                                                                          // 12339
              downArrow : 40                                                                                           // 12340
            },                                                                                                         // 12341
            newIndex                                                                                                   // 12342
          ;                                                                                                            // 12343
          // search shortcuts                                                                                          // 12344
          if(keyCode == keys.escape) {                                                                                 // 12345
            module.verbose('Escape key pressed, blurring search field');                                               // 12346
            $prompt                                                                                                    // 12347
              .trigger('blur')                                                                                         // 12348
            ;                                                                                                          // 12349
          }                                                                                                            // 12350
          if( module.is.visible() ) {                                                                                  // 12351
            if(keyCode == keys.enter) {                                                                                // 12352
              module.verbose('Enter key pressed, selecting active result');                                            // 12353
              if( $result.filter('.' + className.active).length > 0 ) {                                                // 12354
                module.event.result.click.call($result.filter('.' + className.active), event);                         // 12355
                event.preventDefault();                                                                                // 12356
                return false;                                                                                          // 12357
              }                                                                                                        // 12358
            }                                                                                                          // 12359
            else if(keyCode == keys.upArrow) {                                                                         // 12360
              module.verbose('Up key pressed, changing active result');                                                // 12361
              newIndex = (currentIndex - 1 < 0)                                                                        // 12362
                ? currentIndex                                                                                         // 12363
                : currentIndex - 1                                                                                     // 12364
              ;                                                                                                        // 12365
              $category                                                                                                // 12366
                .removeClass(className.active)                                                                         // 12367
              ;                                                                                                        // 12368
              $result                                                                                                  // 12369
                .removeClass(className.active)                                                                         // 12370
                .eq(newIndex)                                                                                          // 12371
                  .addClass(className.active)                                                                          // 12372
                  .closest($category)                                                                                  // 12373
                    .addClass(className.active)                                                                        // 12374
              ;                                                                                                        // 12375
              event.preventDefault();                                                                                  // 12376
            }                                                                                                          // 12377
            else if(keyCode == keys.downArrow) {                                                                       // 12378
              module.verbose('Down key pressed, changing active result');                                              // 12379
              newIndex = (currentIndex + 1 >= resultSize)                                                              // 12380
                ? currentIndex                                                                                         // 12381
                : currentIndex + 1                                                                                     // 12382
              ;                                                                                                        // 12383
              $category                                                                                                // 12384
                .removeClass(className.active)                                                                         // 12385
              ;                                                                                                        // 12386
              $result                                                                                                  // 12387
                .removeClass(className.active)                                                                         // 12388
                .eq(newIndex)                                                                                          // 12389
                  .addClass(className.active)                                                                          // 12390
                  .closest($category)                                                                                  // 12391
                    .addClass(className.active)                                                                        // 12392
              ;                                                                                                        // 12393
              event.preventDefault();                                                                                  // 12394
            }                                                                                                          // 12395
          }                                                                                                            // 12396
          else {                                                                                                       // 12397
            // query shortcuts                                                                                         // 12398
            if(keyCode == keys.enter) {                                                                                // 12399
              module.verbose('Enter key pressed, executing query');                                                    // 12400
              module.query();                                                                                          // 12401
              module.set.buttonPressed();                                                                              // 12402
              $prompt.one('keyup', module.remove.buttonFocus);                                                         // 12403
            }                                                                                                          // 12404
          }                                                                                                            // 12405
        },                                                                                                             // 12406
                                                                                                                       // 12407
        setup: {                                                                                                       // 12408
          api: function() {                                                                                            // 12409
            var                                                                                                        // 12410
              apiSettings = {                                                                                          // 12411
                debug     : settings.debug,                                                                            // 12412
                on        : false,                                                                                     // 12413
                cache     : 'local',                                                                                   // 12414
                action    : 'search',                                                                                  // 12415
                onError   : module.error                                                                               // 12416
              },                                                                                                       // 12417
              searchHTML                                                                                               // 12418
            ;                                                                                                          // 12419
            module.verbose('First request, initializing API');                                                         // 12420
            $module.api(apiSettings);                                                                                  // 12421
          }                                                                                                            // 12422
        },                                                                                                             // 12423
                                                                                                                       // 12424
        can: {                                                                                                         // 12425
          useAPI: function() {                                                                                         // 12426
            return $.fn.api !== undefined;                                                                             // 12427
          },                                                                                                           // 12428
          show: function() {                                                                                           // 12429
            return module.is.focused() && !module.is.visible() && !module.is.empty();                                  // 12430
          },                                                                                                           // 12431
          transition: function() {                                                                                     // 12432
            return settings.transition && $.fn.transition !== undefined && $module.transition('is supported');         // 12433
          }                                                                                                            // 12434
        },                                                                                                             // 12435
                                                                                                                       // 12436
        is: {                                                                                                          // 12437
          empty: function() {                                                                                          // 12438
            return ($results.html() === '');                                                                           // 12439
          },                                                                                                           // 12440
          visible: function() {                                                                                        // 12441
            return ($results.filter(':visible').length > 0);                                                           // 12442
          },                                                                                                           // 12443
          focused: function() {                                                                                        // 12444
            return ($prompt.filter(':focus').length > 0);                                                              // 12445
          }                                                                                                            // 12446
        },                                                                                                             // 12447
                                                                                                                       // 12448
        get: {                                                                                                         // 12449
          inputEvent: function() {                                                                                     // 12450
            var                                                                                                        // 12451
              prompt = $prompt[0],                                                                                     // 12452
              inputEvent   = (prompt !== undefined && prompt.oninput !== undefined)                                    // 12453
                ? 'input'                                                                                              // 12454
                : (prompt !== undefined && prompt.onpropertychange !== undefined)                                      // 12455
                  ? 'propertychange'                                                                                   // 12456
                  : 'keyup'                                                                                            // 12457
            ;                                                                                                          // 12458
            return inputEvent;                                                                                         // 12459
          },                                                                                                           // 12460
          value: function() {                                                                                          // 12461
            return $prompt.val();                                                                                      // 12462
          },                                                                                                           // 12463
          results: function() {                                                                                        // 12464
            var                                                                                                        // 12465
              results = $module.data(metadata.results)                                                                 // 12466
            ;                                                                                                          // 12467
            return results;                                                                                            // 12468
          },                                                                                                           // 12469
          result: function(value, results) {                                                                           // 12470
            var                                                                                                        // 12471
              lookupFields = ['title', 'id'],                                                                          // 12472
              result       = false                                                                                     // 12473
            ;                                                                                                          // 12474
            value = (value !== undefined)                                                                              // 12475
              ? value                                                                                                  // 12476
              : module.get.value()                                                                                     // 12477
            ;                                                                                                          // 12478
            results = (results !== undefined)                                                                          // 12479
              ? results                                                                                                // 12480
              : module.get.results()                                                                                   // 12481
            ;                                                                                                          // 12482
            if(settings.type === 'category') {                                                                         // 12483
              module.debug('Finding result that matches', value);                                                      // 12484
              $.each(results, function(index, category) {                                                              // 12485
                if($.isArray(category.results)) {                                                                      // 12486
                  result = module.search.object(value, category.results, lookupFields)[0];                             // 12487
                  // dont continue searching if a result is found                                                      // 12488
                  if(result) {                                                                                         // 12489
                    return false;                                                                                      // 12490
                  }                                                                                                    // 12491
                }                                                                                                      // 12492
              });                                                                                                      // 12493
            }                                                                                                          // 12494
            else {                                                                                                     // 12495
              module.debug('Finding result in results object', value);                                                 // 12496
              result = module.search.object(value, results, lookupFields)[0];                                          // 12497
            }                                                                                                          // 12498
            return result || false;                                                                                    // 12499
          },                                                                                                           // 12500
        },                                                                                                             // 12501
                                                                                                                       // 12502
        set: {                                                                                                         // 12503
          focus: function() {                                                                                          // 12504
            $module.addClass(className.focus);                                                                         // 12505
          },                                                                                                           // 12506
          loading: function() {                                                                                        // 12507
            $module.addClass(className.loading);                                                                       // 12508
          },                                                                                                           // 12509
          value: function(value) {                                                                                     // 12510
            module.verbose('Setting search input value', value);                                                       // 12511
            $prompt                                                                                                    // 12512
              .val(value)                                                                                              // 12513
            ;                                                                                                          // 12514
          },                                                                                                           // 12515
          type: function(type) {                                                                                       // 12516
            type = type || settings.type;                                                                              // 12517
            if(settings.type == 'category') {                                                                          // 12518
              $module.addClass(settings.type);                                                                         // 12519
            }                                                                                                          // 12520
          },                                                                                                           // 12521
          buttonPressed: function() {                                                                                  // 12522
            $searchButton.addClass(className.pressed);                                                                 // 12523
          }                                                                                                            // 12524
        },                                                                                                             // 12525
                                                                                                                       // 12526
        remove: {                                                                                                      // 12527
          loading: function() {                                                                                        // 12528
            $module.removeClass(className.loading);                                                                    // 12529
          },                                                                                                           // 12530
          focus: function() {                                                                                          // 12531
            $module.removeClass(className.focus);                                                                      // 12532
          },                                                                                                           // 12533
          buttonPressed: function() {                                                                                  // 12534
            $searchButton.removeClass(className.pressed);                                                              // 12535
          }                                                                                                            // 12536
        },                                                                                                             // 12537
                                                                                                                       // 12538
        query: function() {                                                                                            // 12539
          var                                                                                                          // 12540
            searchTerm = module.get.value(),                                                                           // 12541
            cache = module.read.cache(searchTerm)                                                                      // 12542
          ;                                                                                                            // 12543
          if( module.has.minimumCharacters() )  {                                                                      // 12544
            if(cache) {                                                                                                // 12545
              module.debug('Reading result from cache', searchTerm);                                                   // 12546
              module.save.results(cache.results);                                                                      // 12547
              module.addResults(cache.html);                                                                           // 12548
              module.inject.id(cache.results);                                                                         // 12549
            }                                                                                                          // 12550
            else {                                                                                                     // 12551
              module.debug('Querying for', searchTerm);                                                                // 12552
              if($.isPlainObject(settings.source) || $.isArray(settings.source)) {                                     // 12553
                module.search.local(searchTerm);                                                                       // 12554
              }                                                                                                        // 12555
              else if( module.can.useAPI() ) {                                                                         // 12556
                module.search.remote(searchTerm);                                                                      // 12557
              }                                                                                                        // 12558
              else {                                                                                                   // 12559
                module.error(error.source);                                                                            // 12560
              }                                                                                                        // 12561
              settings.onSearchQuery.call(element, searchTerm);                                                        // 12562
            }                                                                                                          // 12563
          }                                                                                                            // 12564
          else {                                                                                                       // 12565
            module.hideResults();                                                                                      // 12566
          }                                                                                                            // 12567
        },                                                                                                             // 12568
                                                                                                                       // 12569
        search: {                                                                                                      // 12570
          local: function(searchTerm) {                                                                                // 12571
            var                                                                                                        // 12572
              results = module.search.object(searchTerm, settings.content),                                            // 12573
              searchHTML                                                                                               // 12574
            ;                                                                                                          // 12575
            module.set.loading();                                                                                      // 12576
            module.save.results(results);                                                                              // 12577
            module.debug('Returned local search results', results);                                                    // 12578
                                                                                                                       // 12579
            searchHTML = module.generateResults({                                                                      // 12580
              results: results                                                                                         // 12581
            });                                                                                                        // 12582
            module.remove.loading();                                                                                   // 12583
            module.addResults(searchHTML);                                                                             // 12584
            module.inject.id(results);                                                                                 // 12585
            module.write.cache(searchTerm, {                                                                           // 12586
              html    : searchHTML,                                                                                    // 12587
              results : results                                                                                        // 12588
            });                                                                                                        // 12589
          },                                                                                                           // 12590
          remote: function(searchTerm) {                                                                               // 12591
            var                                                                                                        // 12592
              apiSettings = {                                                                                          // 12593
                onSuccess : function(response) {                                                                       // 12594
                  module.parse.response.call(element, response, searchTerm);                                           // 12595
                },                                                                                                     // 12596
                onFailure: function() {                                                                                // 12597
                  module.displayMessage(error.serverError);                                                            // 12598
                },                                                                                                     // 12599
                urlData: {                                                                                             // 12600
                  query: searchTerm                                                                                    // 12601
                }                                                                                                      // 12602
              }                                                                                                        // 12603
            ;                                                                                                          // 12604
            if( !$module.api('get request') ) {                                                                        // 12605
              module.setup.api();                                                                                      // 12606
            }                                                                                                          // 12607
            $.extend(true, apiSettings, settings.apiSettings);                                                         // 12608
            module.debug('Executing search', apiSettings);                                                             // 12609
            module.cancel.query();                                                                                     // 12610
            $module                                                                                                    // 12611
              .api('setting', apiSettings)                                                                             // 12612
              .api('query')                                                                                            // 12613
            ;                                                                                                          // 12614
          },                                                                                                           // 12615
          object: function(searchTerm, source, searchFields) {                                                         // 12616
            var                                                                                                        // 12617
              results      = [],                                                                                       // 12618
              fuzzyResults = [],                                                                                       // 12619
              searchExp    = searchTerm.toString().replace(regExp.escape, '\\$&'),                                     // 12620
              matchRegExp  = new RegExp(regExp.beginsWith + searchExp, 'i'),                                           // 12621
                                                                                                                       // 12622
              // avoid duplicates when pushing results                                                                 // 12623
              addResult = function(array, result) {                                                                    // 12624
                var                                                                                                    // 12625
                  notResult      = ($.inArray(result, results) == -1),                                                 // 12626
                  notFuzzyResult = ($.inArray(result, fuzzyResults) == -1)                                             // 12627
                ;                                                                                                      // 12628
                if(notResult && notFuzzyResult) {                                                                      // 12629
                  array.push(result);                                                                                  // 12630
                }                                                                                                      // 12631
              }                                                                                                        // 12632
            ;                                                                                                          // 12633
            source = source || settings.source;                                                                        // 12634
            searchFields = (searchFields !== undefined)                                                                // 12635
              ? searchFields                                                                                           // 12636
              : settings.searchFields                                                                                  // 12637
            ;                                                                                                          // 12638
                                                                                                                       // 12639
            // search fields should be array to loop correctly                                                         // 12640
            if(!$.isArray(searchFields)) {                                                                             // 12641
              searchFields = [searchFields];                                                                           // 12642
            }                                                                                                          // 12643
                                                                                                                       // 12644
            // exit conditions if no source                                                                            // 12645
            if(source === undefined || source === false) {                                                             // 12646
              module.error(error.source);                                                                              // 12647
              return [];                                                                                               // 12648
            }                                                                                                          // 12649
                                                                                                                       // 12650
            // iterate through search fields looking for matches                                                       // 12651
            $.each(searchFields, function(index, field) {                                                              // 12652
              $.each(source, function(label, content) {                                                                // 12653
                var                                                                                                    // 12654
                  fieldExists = (typeof content[field] == 'string')                                                    // 12655
                ;                                                                                                      // 12656
                if(fieldExists) {                                                                                      // 12657
                  if( content[field].search(matchRegExp) !== -1) {                                                     // 12658
                    // content starts with value (first in results)                                                    // 12659
                    addResult(results, content);                                                                       // 12660
                  }                                                                                                    // 12661
                  else if(settings.searchFullText && module.fuzzySearch(searchTerm, content[field]) ) {                // 12662
                    // content fuzzy matches (last in results)                                                         // 12663
                    addResult(fuzzyResults, content);                                                                  // 12664
                  }                                                                                                    // 12665
                }                                                                                                      // 12666
              });                                                                                                      // 12667
            });                                                                                                        // 12668
            return $.merge(results, fuzzyResults);                                                                     // 12669
          }                                                                                                            // 12670
        },                                                                                                             // 12671
                                                                                                                       // 12672
        fuzzySearch: function(query, term) {                                                                           // 12673
          var                                                                                                          // 12674
            termLength  = term.length,                                                                                 // 12675
            queryLength = query.length                                                                                 // 12676
          ;                                                                                                            // 12677
          if(typeof query !== 'string') {                                                                              // 12678
            return false;                                                                                              // 12679
          }                                                                                                            // 12680
          query = query.toLowerCase();                                                                                 // 12681
          term  = term.toLowerCase();                                                                                  // 12682
          if(queryLength > termLength) {                                                                               // 12683
            return false;                                                                                              // 12684
          }                                                                                                            // 12685
          if(queryLength === termLength) {                                                                             // 12686
            return (query === term);                                                                                   // 12687
          }                                                                                                            // 12688
          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {
            var                                                                                                        // 12690
              queryCharacter = query.charCodeAt(characterIndex)                                                        // 12691
            ;                                                                                                          // 12692
            while(nextCharacterIndex < termLength) {                                                                   // 12693
              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {                                           // 12694
                continue search;                                                                                       // 12695
              }                                                                                                        // 12696
            }                                                                                                          // 12697
            return false;                                                                                              // 12698
          }                                                                                                            // 12699
          return true;                                                                                                 // 12700
        },                                                                                                             // 12701
                                                                                                                       // 12702
        parse: {                                                                                                       // 12703
          response: function(response, searchTerm) {                                                                   // 12704
            var                                                                                                        // 12705
              searchHTML = module.generateResults(response)                                                            // 12706
            ;                                                                                                          // 12707
            module.verbose('Parsing server response', response);                                                       // 12708
            if(response !== undefined) {                                                                               // 12709
              if(searchTerm !== undefined && response[fields.results] !== undefined) {                                 // 12710
                module.addResults(searchHTML);                                                                         // 12711
                module.inject.id(response[fields.results]);                                                            // 12712
                module.write.cache(searchTerm, {                                                                       // 12713
                  html    : searchHTML,                                                                                // 12714
                  results : response[fields.results]                                                                   // 12715
                });                                                                                                    // 12716
                module.save.results(response[fields.results]);                                                         // 12717
              }                                                                                                        // 12718
            }                                                                                                          // 12719
          }                                                                                                            // 12720
        },                                                                                                             // 12721
                                                                                                                       // 12722
        cancel: {                                                                                                      // 12723
          query: function() {                                                                                          // 12724
            if( module.can.useAPI() ) {                                                                                // 12725
              $module.api('abort');                                                                                    // 12726
            }                                                                                                          // 12727
          }                                                                                                            // 12728
        },                                                                                                             // 12729
                                                                                                                       // 12730
        has: {                                                                                                         // 12731
          minimumCharacters: function() {                                                                              // 12732
            var                                                                                                        // 12733
              searchTerm    = module.get.value(),                                                                      // 12734
              numCharacters = searchTerm.length                                                                        // 12735
            ;                                                                                                          // 12736
            return (numCharacters >= settings.minCharacters);                                                          // 12737
          }                                                                                                            // 12738
        },                                                                                                             // 12739
                                                                                                                       // 12740
        clear: {                                                                                                       // 12741
          cache: function(value) {                                                                                     // 12742
            var                                                                                                        // 12743
              cache = $module.data(metadata.cache)                                                                     // 12744
            ;                                                                                                          // 12745
            if(!value) {                                                                                               // 12746
              module.debug('Clearing cache', value);                                                                   // 12747
              $module.removeData(metadata.cache);                                                                      // 12748
            }                                                                                                          // 12749
            else if(value && cache && cache[value]) {                                                                  // 12750
              module.debug('Removing value from cache', value);                                                        // 12751
              delete cache[value];                                                                                     // 12752
              $module.data(metadata.cache, cache);                                                                     // 12753
            }                                                                                                          // 12754
          }                                                                                                            // 12755
        },                                                                                                             // 12756
                                                                                                                       // 12757
        read: {                                                                                                        // 12758
          cache: function(name) {                                                                                      // 12759
            var                                                                                                        // 12760
              cache = $module.data(metadata.cache)                                                                     // 12761
            ;                                                                                                          // 12762
            if(settings.cache) {                                                                                       // 12763
              module.verbose('Checking cache for generated html for query', name);                                     // 12764
              return (typeof cache == 'object') && (cache[name] !== undefined)                                         // 12765
                ? cache[name]                                                                                          // 12766
                : false                                                                                                // 12767
              ;                                                                                                        // 12768
            }                                                                                                          // 12769
            return false;                                                                                              // 12770
          }                                                                                                            // 12771
        },                                                                                                             // 12772
                                                                                                                       // 12773
        create: {                                                                                                      // 12774
          id: function(resultIndex, categoryIndex) {                                                                   // 12775
            var                                                                                                        // 12776
              resultID      = (resultIndex + 1), // not zero indexed                                                   // 12777
              categoryID    = (categoryIndex + 1),                                                                     // 12778
              firstCharCode,                                                                                           // 12779
              letterID,                                                                                                // 12780
              id                                                                                                       // 12781
            ;                                                                                                          // 12782
            if(categoryIndex !== undefined) {                                                                          // 12783
              // start char code for "A"                                                                               // 12784
              letterID = String.fromCharCode(97 + categoryIndex);                                                      // 12785
              id          = letterID + resultID;                                                                       // 12786
              module.verbose('Creating category result id', id);                                                       // 12787
            }                                                                                                          // 12788
            else {                                                                                                     // 12789
              id = resultID;                                                                                           // 12790
              module.verbose('Creating result id', id);                                                                // 12791
            }                                                                                                          // 12792
            return id;                                                                                                 // 12793
          },                                                                                                           // 12794
          results: function() {                                                                                        // 12795
            if($results.length === 0) {                                                                                // 12796
              $results = $('<div />')                                                                                  // 12797
                .addClass(className.results)                                                                           // 12798
                .appendTo($module)                                                                                     // 12799
              ;                                                                                                        // 12800
            }                                                                                                          // 12801
          }                                                                                                            // 12802
        },                                                                                                             // 12803
                                                                                                                       // 12804
        inject: {                                                                                                      // 12805
          result: function(result, resultIndex, categoryIndex) {                                                       // 12806
            module.verbose('Injecting result into results');                                                           // 12807
            var                                                                                                        // 12808
              $selectedResult = (categoryIndex !== undefined)                                                          // 12809
                ? $results                                                                                             // 12810
                    .children().eq(categoryIndex)                                                                      // 12811
                      .children(selector.result).eq(resultIndex)                                                       // 12812
                : $results                                                                                             // 12813
                    .children(selector.result).eq(resultIndex)                                                         // 12814
            ;                                                                                                          // 12815
            module.verbose('Injecting results metadata', $selectedResult);                                             // 12816
            $selectedResult                                                                                            // 12817
              .data(metadata.result, result)                                                                           // 12818
            ;                                                                                                          // 12819
          },                                                                                                           // 12820
          id: function(results) {                                                                                      // 12821
            module.debug('Injecting unique ids into results');                                                         // 12822
            var                                                                                                        // 12823
              // since results may be object, we must use counters                                                     // 12824
              categoryIndex = 0,                                                                                       // 12825
              resultIndex   = 0                                                                                        // 12826
            ;                                                                                                          // 12827
            if(settings.type === 'category') {                                                                         // 12828
              // iterate through each category result                                                                  // 12829
              $.each(results, function(index, category) {                                                              // 12830
                resultIndex = 0;                                                                                       // 12831
                $.each(category.results, function(index, value) {                                                      // 12832
                  var                                                                                                  // 12833
                    result = category.results[index]                                                                   // 12834
                  ;                                                                                                    // 12835
                  if(result.id === undefined) {                                                                        // 12836
                    result.id = module.create.id(resultIndex, categoryIndex);                                          // 12837
                  }                                                                                                    // 12838
                  module.inject.result(result, resultIndex, categoryIndex);                                            // 12839
                  resultIndex++;                                                                                       // 12840
                });                                                                                                    // 12841
                categoryIndex++;                                                                                       // 12842
              });                                                                                                      // 12843
            }                                                                                                          // 12844
            else {                                                                                                     // 12845
              // top level                                                                                             // 12846
              $.each(results, function(index, value) {                                                                 // 12847
                var                                                                                                    // 12848
                  result = results[index]                                                                              // 12849
                ;                                                                                                      // 12850
                if(result.id === undefined) {                                                                          // 12851
                  result.id = module.create.id(resultIndex);                                                           // 12852
                }                                                                                                      // 12853
                module.inject.result(result, resultIndex);                                                             // 12854
                resultIndex++;                                                                                         // 12855
              });                                                                                                      // 12856
            }                                                                                                          // 12857
            return results;                                                                                            // 12858
          }                                                                                                            // 12859
        },                                                                                                             // 12860
                                                                                                                       // 12861
        save: {                                                                                                        // 12862
          results: function(results) {                                                                                 // 12863
            module.verbose('Saving current search results to metadata', results);                                      // 12864
            $module.data(metadata.results, results);                                                                   // 12865
          }                                                                                                            // 12866
        },                                                                                                             // 12867
                                                                                                                       // 12868
        write: {                                                                                                       // 12869
          cache: function(name, value) {                                                                               // 12870
            var                                                                                                        // 12871
              cache = ($module.data(metadata.cache) !== undefined)                                                     // 12872
                ? $module.data(metadata.cache)                                                                         // 12873
                : {}                                                                                                   // 12874
            ;                                                                                                          // 12875
            if(settings.cache) {                                                                                       // 12876
              module.verbose('Writing generated html to cache', name, value);                                          // 12877
              cache[name] = value;                                                                                     // 12878
              $module                                                                                                  // 12879
                .data(metadata.cache, cache)                                                                           // 12880
              ;                                                                                                        // 12881
            }                                                                                                          // 12882
          }                                                                                                            // 12883
        },                                                                                                             // 12884
                                                                                                                       // 12885
        addResults: function(html) {                                                                                   // 12886
          if( $.isFunction(settings.onResultsAdd) ) {                                                                  // 12887
            if( settings.onResultsAdd.call($results, html) === false ) {                                               // 12888
              module.debug('onResultsAdd callback cancelled default action');                                          // 12889
              return false;                                                                                            // 12890
            }                                                                                                          // 12891
          }                                                                                                            // 12892
          $results                                                                                                     // 12893
            .html(html)                                                                                                // 12894
          ;                                                                                                            // 12895
          if( module.can.show() ) {                                                                                    // 12896
            module.showResults();                                                                                      // 12897
          }                                                                                                            // 12898
        },                                                                                                             // 12899
                                                                                                                       // 12900
        showResults: function() {                                                                                      // 12901
          if(!module.is.visible()) {                                                                                   // 12902
            if( module.can.transition() ) {                                                                            // 12903
              module.debug('Showing results with css animations');                                                     // 12904
              $results                                                                                                 // 12905
                .transition({                                                                                          // 12906
                  animation  : settings.transition + ' in',                                                            // 12907
                  debug      : settings.debug,                                                                         // 12908
                  verbose    : settings.verbose,                                                                       // 12909
                  duration   : settings.duration,                                                                      // 12910
                  queue      : true                                                                                    // 12911
                })                                                                                                     // 12912
              ;                                                                                                        // 12913
            }                                                                                                          // 12914
            else {                                                                                                     // 12915
              module.debug('Showing results with javascript');                                                         // 12916
              $results                                                                                                 // 12917
                .stop()                                                                                                // 12918
                .fadeIn(settings.duration, settings.easing)                                                            // 12919
              ;                                                                                                        // 12920
            }                                                                                                          // 12921
            settings.onResultsOpen.call($results);                                                                     // 12922
          }                                                                                                            // 12923
        },                                                                                                             // 12924
        hideResults: function() {                                                                                      // 12925
          if( module.is.visible() ) {                                                                                  // 12926
            if( module.can.transition() ) {                                                                            // 12927
              module.debug('Hiding results with css animations');                                                      // 12928
              $results                                                                                                 // 12929
                .transition({                                                                                          // 12930
                  animation  : settings.transition + ' out',                                                           // 12931
                  debug      : settings.debug,                                                                         // 12932
                  verbose    : settings.verbose,                                                                       // 12933
                  duration   : settings.duration,                                                                      // 12934
                  queue      : true                                                                                    // 12935
                })                                                                                                     // 12936
              ;                                                                                                        // 12937
            }                                                                                                          // 12938
            else {                                                                                                     // 12939
              module.debug('Hiding results with javascript');                                                          // 12940
              $results                                                                                                 // 12941
                .stop()                                                                                                // 12942
                .fadeOut(settings.duration, settings.easing)                                                           // 12943
              ;                                                                                                        // 12944
            }                                                                                                          // 12945
            settings.onResultsClose.call($results);                                                                    // 12946
          }                                                                                                            // 12947
        },                                                                                                             // 12948
                                                                                                                       // 12949
        generateResults: function(response) {                                                                          // 12950
          module.debug('Generating html from response', response);                                                     // 12951
          var                                                                                                          // 12952
            template       = settings.templates[settings.type],                                                        // 12953
            isProperObject = ($.isPlainObject(response[fields.results]) && !$.isEmptyObject(response[fields.results])),
            isProperArray  = ($.isArray(response[fields.results]) && response[fields.results].length > 0),             // 12955
            html           = ''                                                                                        // 12956
          ;                                                                                                            // 12957
          if(isProperObject || isProperArray ) {                                                                       // 12958
            if(settings.maxResults > 0) {                                                                              // 12959
              if(isProperObject) {                                                                                     // 12960
                if(settings.type == 'standard') {                                                                      // 12961
                  module.error(error.maxResults);                                                                      // 12962
                }                                                                                                      // 12963
              }                                                                                                        // 12964
              else {                                                                                                   // 12965
                response[fields.results] = response[fields.results].slice(0, settings.maxResults);                     // 12966
              }                                                                                                        // 12967
            }                                                                                                          // 12968
            if($.isFunction(template)) {                                                                               // 12969
              html = template(response, fields);                                                                       // 12970
            }                                                                                                          // 12971
            else {                                                                                                     // 12972
              module.error(error.noTemplate, false);                                                                   // 12973
            }                                                                                                          // 12974
          }                                                                                                            // 12975
          else {                                                                                                       // 12976
            html = module.displayMessage(error.noResults, 'empty');                                                    // 12977
          }                                                                                                            // 12978
          settings.onResults.call(element, response);                                                                  // 12979
          return html;                                                                                                 // 12980
        },                                                                                                             // 12981
                                                                                                                       // 12982
        displayMessage: function(text, type) {                                                                         // 12983
          type = type || 'standard';                                                                                   // 12984
          module.debug('Displaying message', text, type);                                                              // 12985
          module.addResults( settings.templates.message(text, type) );                                                 // 12986
          return settings.templates.message(text, type);                                                               // 12987
        },                                                                                                             // 12988
                                                                                                                       // 12989
        setting: function(name, value) {                                                                               // 12990
          if( $.isPlainObject(name) ) {                                                                                // 12991
            $.extend(true, settings, name);                                                                            // 12992
          }                                                                                                            // 12993
          else if(value !== undefined) {                                                                               // 12994
            settings[name] = value;                                                                                    // 12995
          }                                                                                                            // 12996
          else {                                                                                                       // 12997
            return settings[name];                                                                                     // 12998
          }                                                                                                            // 12999
        },                                                                                                             // 13000
        internal: function(name, value) {                                                                              // 13001
          if( $.isPlainObject(name) ) {                                                                                // 13002
            $.extend(true, module, name);                                                                              // 13003
          }                                                                                                            // 13004
          else if(value !== undefined) {                                                                               // 13005
            module[name] = value;                                                                                      // 13006
          }                                                                                                            // 13007
          else {                                                                                                       // 13008
            return module[name];                                                                                       // 13009
          }                                                                                                            // 13010
        },                                                                                                             // 13011
        debug: function() {                                                                                            // 13012
          if(settings.debug) {                                                                                         // 13013
            if(settings.performance) {                                                                                 // 13014
              module.performance.log(arguments);                                                                       // 13015
            }                                                                                                          // 13016
            else {                                                                                                     // 13017
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 13018
              module.debug.apply(console, arguments);                                                                  // 13019
            }                                                                                                          // 13020
          }                                                                                                            // 13021
        },                                                                                                             // 13022
        verbose: function() {                                                                                          // 13023
          if(settings.verbose && settings.debug) {                                                                     // 13024
            if(settings.performance) {                                                                                 // 13025
              module.performance.log(arguments);                                                                       // 13026
            }                                                                                                          // 13027
            else {                                                                                                     // 13028
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 13029
              module.verbose.apply(console, arguments);                                                                // 13030
            }                                                                                                          // 13031
          }                                                                                                            // 13032
        },                                                                                                             // 13033
        error: function() {                                                                                            // 13034
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 13035
          module.error.apply(console, arguments);                                                                      // 13036
        },                                                                                                             // 13037
        performance: {                                                                                                 // 13038
          log: function(message) {                                                                                     // 13039
            var                                                                                                        // 13040
              currentTime,                                                                                             // 13041
              executionTime,                                                                                           // 13042
              previousTime                                                                                             // 13043
            ;                                                                                                          // 13044
            if(settings.performance) {                                                                                 // 13045
              currentTime   = new Date().getTime();                                                                    // 13046
              previousTime  = time || currentTime;                                                                     // 13047
              executionTime = currentTime - previousTime;                                                              // 13048
              time          = currentTime;                                                                             // 13049
              performance.push({                                                                                       // 13050
                'Name'           : message[0],                                                                         // 13051
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 13052
                'Element'        : element,                                                                            // 13053
                'Execution Time' : executionTime                                                                       // 13054
              });                                                                                                      // 13055
            }                                                                                                          // 13056
            clearTimeout(module.performance.timer);                                                                    // 13057
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 13058
          },                                                                                                           // 13059
          display: function() {                                                                                        // 13060
            var                                                                                                        // 13061
              title = settings.name + ':',                                                                             // 13062
              totalTime = 0                                                                                            // 13063
            ;                                                                                                          // 13064
            time = false;                                                                                              // 13065
            clearTimeout(module.performance.timer);                                                                    // 13066
            $.each(performance, function(index, data) {                                                                // 13067
              totalTime += data['Execution Time'];                                                                     // 13068
            });                                                                                                        // 13069
            title += ' ' + totalTime + 'ms';                                                                           // 13070
            if(moduleSelector) {                                                                                       // 13071
              title += ' \'' + moduleSelector + '\'';                                                                  // 13072
            }                                                                                                          // 13073
            if($allModules.length > 1) {                                                                               // 13074
              title += ' ' + '(' + $allModules.length + ')';                                                           // 13075
            }                                                                                                          // 13076
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 13077
              console.groupCollapsed(title);                                                                           // 13078
              if(console.table) {                                                                                      // 13079
                console.table(performance);                                                                            // 13080
              }                                                                                                        // 13081
              else {                                                                                                   // 13082
                $.each(performance, function(index, data) {                                                            // 13083
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 13084
                });                                                                                                    // 13085
              }                                                                                                        // 13086
              console.groupEnd();                                                                                      // 13087
            }                                                                                                          // 13088
            performance = [];                                                                                          // 13089
          }                                                                                                            // 13090
        },                                                                                                             // 13091
        invoke: function(query, passedArguments, context) {                                                            // 13092
          var                                                                                                          // 13093
            object = instance,                                                                                         // 13094
            maxDepth,                                                                                                  // 13095
            found,                                                                                                     // 13096
            response                                                                                                   // 13097
          ;                                                                                                            // 13098
          passedArguments = passedArguments || queryArguments;                                                         // 13099
          context         = element         || context;                                                                // 13100
          if(typeof query == 'string' && object !== undefined) {                                                       // 13101
            query    = query.split(/[\. ]/);                                                                           // 13102
            maxDepth = query.length - 1;                                                                               // 13103
            $.each(query, function(depth, value) {                                                                     // 13104
              var camelCaseValue = (depth != maxDepth)                                                                 // 13105
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 13106
                : query                                                                                                // 13107
              ;                                                                                                        // 13108
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 13109
                object = object[camelCaseValue];                                                                       // 13110
              }                                                                                                        // 13111
              else if( object[camelCaseValue] !== undefined ) {                                                        // 13112
                found = object[camelCaseValue];                                                                        // 13113
                return false;                                                                                          // 13114
              }                                                                                                        // 13115
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 13116
                object = object[value];                                                                                // 13117
              }                                                                                                        // 13118
              else if( object[value] !== undefined ) {                                                                 // 13119
                found = object[value];                                                                                 // 13120
                return false;                                                                                          // 13121
              }                                                                                                        // 13122
              else {                                                                                                   // 13123
                return false;                                                                                          // 13124
              }                                                                                                        // 13125
            });                                                                                                        // 13126
          }                                                                                                            // 13127
          if( $.isFunction( found ) ) {                                                                                // 13128
            response = found.apply(context, passedArguments);                                                          // 13129
          }                                                                                                            // 13130
          else if(found !== undefined) {                                                                               // 13131
            response = found;                                                                                          // 13132
          }                                                                                                            // 13133
          if($.isArray(returnedValue)) {                                                                               // 13134
            returnedValue.push(response);                                                                              // 13135
          }                                                                                                            // 13136
          else if(returnedValue !== undefined) {                                                                       // 13137
            returnedValue = [returnedValue, response];                                                                 // 13138
          }                                                                                                            // 13139
          else if(response !== undefined) {                                                                            // 13140
            returnedValue = response;                                                                                  // 13141
          }                                                                                                            // 13142
          return found;                                                                                                // 13143
        }                                                                                                              // 13144
      };                                                                                                               // 13145
      if(methodInvoked) {                                                                                              // 13146
        if(instance === undefined) {                                                                                   // 13147
          module.initialize();                                                                                         // 13148
        }                                                                                                              // 13149
        module.invoke(query);                                                                                          // 13150
      }                                                                                                                // 13151
      else {                                                                                                           // 13152
        if(instance !== undefined) {                                                                                   // 13153
          instance.invoke('destroy');                                                                                  // 13154
        }                                                                                                              // 13155
        module.initialize();                                                                                           // 13156
      }                                                                                                                // 13157
                                                                                                                       // 13158
    })                                                                                                                 // 13159
  ;                                                                                                                    // 13160
                                                                                                                       // 13161
  return (returnedValue !== undefined)                                                                                 // 13162
    ? returnedValue                                                                                                    // 13163
    : this                                                                                                             // 13164
  ;                                                                                                                    // 13165
};                                                                                                                     // 13166
                                                                                                                       // 13167
$.fn.search.settings = {                                                                                               // 13168
                                                                                                                       // 13169
  name           : 'Search',                                                                                           // 13170
  namespace      : 'search',                                                                                           // 13171
                                                                                                                       // 13172
  debug          : false,                                                                                              // 13173
  verbose        : false,                                                                                              // 13174
  performance    : true,                                                                                               // 13175
                                                                                                                       // 13176
  type           : 'standard',                                                                                         // 13177
  // template to use (specified in settings.templates)                                                                 // 13178
                                                                                                                       // 13179
  minCharacters  : 1,                                                                                                  // 13180
  // minimum characters required to search                                                                             // 13181
                                                                                                                       // 13182
  apiSettings    : false,                                                                                              // 13183
  // API config                                                                                                        // 13184
                                                                                                                       // 13185
  source         : false,                                                                                              // 13186
  // object to search                                                                                                  // 13187
                                                                                                                       // 13188
  searchFields   : [                                                                                                   // 13189
    'title',                                                                                                           // 13190
    'description'                                                                                                      // 13191
  ],                                                                                                                   // 13192
  // fields to search                                                                                                  // 13193
                                                                                                                       // 13194
  displayField   : '',                                                                                                 // 13195
  // field to display in standard results template                                                                     // 13196
                                                                                                                       // 13197
  searchFullText : true,                                                                                               // 13198
  // whether to include fuzzy results in local search                                                                  // 13199
                                                                                                                       // 13200
  automatic      : true,                                                                                               // 13201
  // whether to add events to prompt automatically                                                                     // 13202
                                                                                                                       // 13203
  hideDelay      : 0,                                                                                                  // 13204
  // delay before hiding menu after blur                                                                               // 13205
                                                                                                                       // 13206
  searchDelay    : 200,                                                                                                // 13207
  // delay before searching                                                                                            // 13208
                                                                                                                       // 13209
  maxResults     : 7,                                                                                                  // 13210
  // maximum results returned from local                                                                               // 13211
                                                                                                                       // 13212
  cache          : true,                                                                                               // 13213
  // whether to store lookups in local cache                                                                           // 13214
                                                                                                                       // 13215
  // transition settings                                                                                               // 13216
  transition     : 'scale',                                                                                            // 13217
  duration       : 200,                                                                                                // 13218
  easing         : 'easeOutExpo',                                                                                      // 13219
                                                                                                                       // 13220
  // callbacks                                                                                                         // 13221
  onSelect       : false,                                                                                              // 13222
  onResultsAdd   : false,                                                                                              // 13223
                                                                                                                       // 13224
  onSearchQuery  : function(query){},                                                                                  // 13225
  onResults      : function(response){},                                                                               // 13226
                                                                                                                       // 13227
  onResultsOpen  : function(){},                                                                                       // 13228
  onResultsClose : function(){},                                                                                       // 13229
                                                                                                                       // 13230
  className: {                                                                                                         // 13231
    active  : 'active',                                                                                                // 13232
    empty   : 'empty',                                                                                                 // 13233
    focus   : 'focus',                                                                                                 // 13234
    loading : 'loading',                                                                                               // 13235
    results : 'results',                                                                                               // 13236
    pressed : 'down'                                                                                                   // 13237
  },                                                                                                                   // 13238
                                                                                                                       // 13239
  error : {                                                                                                            // 13240
    source      : 'Cannot search. No source used, and Semantic API module was not included',                           // 13241
    noResults   : 'Your search returned no results',                                                                   // 13242
    logging     : 'Error in debug logging, exiting.',                                                                  // 13243
    noEndpoint  : 'No search endpoint was specified',                                                                  // 13244
    noTemplate  : 'A valid template name was not specified.',                                                          // 13245
    serverError : 'There was an issue querying the server.',                                                           // 13246
    maxResults  : 'Results must be an array to use maxResults setting',                                                // 13247
    method      : 'The method you called is not defined.'                                                              // 13248
  },                                                                                                                   // 13249
                                                                                                                       // 13250
  metadata: {                                                                                                          // 13251
    cache   : 'cache',                                                                                                 // 13252
    results : 'results',                                                                                               // 13253
    result  : 'result'                                                                                                 // 13254
  },                                                                                                                   // 13255
                                                                                                                       // 13256
  regExp: {                                                                                                            // 13257
    escape     : /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,                                                                // 13258
    beginsWith : '(?:\s|^)'                                                                                            // 13259
  },                                                                                                                   // 13260
                                                                                                                       // 13261
  // maps api response attributes to internal representation                                                           // 13262
  fields: {                                                                                                            // 13263
    categories      : 'results',     // array of categories (category view)                                            // 13264
    categoryName    : 'name',        // name of category (category view)                                               // 13265
    categoryResults : 'results',     // array of results (category view)                                               // 13266
    description     : 'description', // result description                                                             // 13267
    image           : 'image',       // result image                                                                   // 13268
    price           : 'price',       // result price                                                                   // 13269
    results         : 'results',     // array of results (standard)                                                    // 13270
    title           : 'title',       // result title                                                                   // 13271
    action          : 'action',      // "view more" object name                                                        // 13272
    actionText      : 'text',        // "view more" text                                                               // 13273
    actionURL       : 'url'          // "view more" url                                                                // 13274
  },                                                                                                                   // 13275
                                                                                                                       // 13276
  selector : {                                                                                                         // 13277
    prompt       : '.prompt',                                                                                          // 13278
    searchButton : '.search.button',                                                                                   // 13279
    results      : '.results',                                                                                         // 13280
    category     : '.category',                                                                                        // 13281
    result       : '.result',                                                                                          // 13282
    title        : '.title, .name'                                                                                     // 13283
  },                                                                                                                   // 13284
                                                                                                                       // 13285
  templates: {                                                                                                         // 13286
    escape: function(string) {                                                                                         // 13287
      var                                                                                                              // 13288
        badChars     = /[&<>"'`]/g,                                                                                    // 13289
        shouldEscape = /[&<>"'`]/,                                                                                     // 13290
        escape       = {                                                                                               // 13291
          "&": "&amp;",                                                                                                // 13292
          "<": "&lt;",                                                                                                 // 13293
          ">": "&gt;",                                                                                                 // 13294
          '"': "&quot;",                                                                                               // 13295
          "'": "&#x27;",                                                                                               // 13296
          "`": "&#x60;"                                                                                                // 13297
        },                                                                                                             // 13298
        escapedChar  = function(chr) {                                                                                 // 13299
          return escape[chr];                                                                                          // 13300
        }                                                                                                              // 13301
      ;                                                                                                                // 13302
      if(shouldEscape.test(string)) {                                                                                  // 13303
        return string.replace(badChars, escapedChar);                                                                  // 13304
      }                                                                                                                // 13305
      return string;                                                                                                   // 13306
    },                                                                                                                 // 13307
    message: function(message, type) {                                                                                 // 13308
      var                                                                                                              // 13309
        html = ''                                                                                                      // 13310
      ;                                                                                                                // 13311
      if(message !== undefined && type !== undefined) {                                                                // 13312
        html +=  ''                                                                                                    // 13313
          + '<div class="message ' + type + '">'                                                                       // 13314
        ;                                                                                                              // 13315
        // message type                                                                                                // 13316
        if(type == 'empty') {                                                                                          // 13317
          html += ''                                                                                                   // 13318
            + '<div class="header">No Results</div class="header">'                                                    // 13319
            + '<div class="description">' + message + '</div class="description">'                                     // 13320
          ;                                                                                                            // 13321
        }                                                                                                              // 13322
        else {                                                                                                         // 13323
          html += ' <div class="description">' + message + '</div>';                                                   // 13324
        }                                                                                                              // 13325
        html += '</div>';                                                                                              // 13326
      }                                                                                                                // 13327
      return html;                                                                                                     // 13328
    },                                                                                                                 // 13329
    category: function(response, fields) {                                                                             // 13330
      var                                                                                                              // 13331
        html = '',                                                                                                     // 13332
        escape = $.fn.search.settings.templates.escape                                                                 // 13333
      ;                                                                                                                // 13334
      if(response[fields.categoryResults] !== undefined) {                                                             // 13335
                                                                                                                       // 13336
        // each category                                                                                               // 13337
        $.each(response[fields.categoryResults], function(index, category) {                                           // 13338
          if(category[fields.results] !== undefined && category.results.length > 0) {                                  // 13339
                                                                                                                       // 13340
            html  += '<div class="category">';                                                                         // 13341
                                                                                                                       // 13342
            if(category[fields.categoryName] !== undefined) {                                                          // 13343
              html += '<div class="name">' + category[fields.categoryName] + '</div>';                                 // 13344
            }                                                                                                          // 13345
                                                                                                                       // 13346
            // each item inside category                                                                               // 13347
            $.each(category.results, function(index, result) {                                                         // 13348
              if(response[fields.url]) {                                                                               // 13349
                html  += '<a class="result" href="' + response[fields.url] + '">';                                     // 13350
              }                                                                                                        // 13351
              else {                                                                                                   // 13352
                html  += '<a class="result">';                                                                         // 13353
              }                                                                                                        // 13354
              if(result[fields.image] !== undefined) {                                                                 // 13355
                html += ''                                                                                             // 13356
                  + '<div class="image">'                                                                              // 13357
                  + ' <img src="' + result[fields.image] + '">'                                                        // 13358
                  + '</div>'                                                                                           // 13359
                ;                                                                                                      // 13360
              }                                                                                                        // 13361
              html += '<div class="content">';                                                                         // 13362
              if(result[fields.price] !== undefined) {                                                                 // 13363
                html += '<div class="price">' + result[fields.price] + '</div>';                                       // 13364
              }                                                                                                        // 13365
              if(result[fields.title] !== undefined) {                                                                 // 13366
                html += '<div class="title">' + result[fields.title] + '</div>';                                       // 13367
              }                                                                                                        // 13368
              if(result[fields.description] !== undefined) {                                                           // 13369
                html += '<div class="description">' + result[fields.description] + '</div>';                           // 13370
              }                                                                                                        // 13371
              html  += ''                                                                                              // 13372
                + '</div>'                                                                                             // 13373
              ;                                                                                                        // 13374
              html += '</a>';                                                                                          // 13375
            });                                                                                                        // 13376
            html  += ''                                                                                                // 13377
              + '</div>'                                                                                               // 13378
            ;                                                                                                          // 13379
          }                                                                                                            // 13380
        });                                                                                                            // 13381
        if(response[fields.action]) {                                                                                  // 13382
          html += ''                                                                                                   // 13383
          + '<a href="' + response[fields.action][fields.actionURL] + '" class="action">'                              // 13384
          +   response[fields.action][fields.actionText]                                                               // 13385
          + '</a>';                                                                                                    // 13386
        }                                                                                                              // 13387
        return html;                                                                                                   // 13388
      }                                                                                                                // 13389
      return false;                                                                                                    // 13390
    },                                                                                                                 // 13391
    standard: function(response, fields) {                                                                             // 13392
      var                                                                                                              // 13393
        html = ''                                                                                                      // 13394
      ;                                                                                                                // 13395
      if(response[fields.results] !== undefined) {                                                                     // 13396
                                                                                                                       // 13397
        // each result                                                                                                 // 13398
        $.each(response[fields.results], function(index, result) {                                                     // 13399
          if(response[fields.url]) {                                                                                   // 13400
            html  += '<a class="result" href="' + response[fields.url] + '">';                                         // 13401
          }                                                                                                            // 13402
          else {                                                                                                       // 13403
            html  += '<a class="result">';                                                                             // 13404
          }                                                                                                            // 13405
          if(result[fields.image] !== undefined) {                                                                     // 13406
            html += ''                                                                                                 // 13407
              + '<div class="image">'                                                                                  // 13408
              + ' <img src="' + result[fields.image] + '">'                                                            // 13409
              + '</div>'                                                                                               // 13410
            ;                                                                                                          // 13411
          }                                                                                                            // 13412
          html += '<div class="content">';                                                                             // 13413
          if(result[fields.price] !== undefined) {                                                                     // 13414
            html += '<div class="price">' + result[fields.price] + '</div>';                                           // 13415
          }                                                                                                            // 13416
          if(result[fields.title] !== undefined) {                                                                     // 13417
            html += '<div class="title">' + result[fields.title] + '</div>';                                           // 13418
          }                                                                                                            // 13419
          if(result[fields.description] !== undefined) {                                                               // 13420
            html += '<div class="description">' + result[fields.description] + '</div>';                               // 13421
          }                                                                                                            // 13422
          html  += ''                                                                                                  // 13423
            + '</div>'                                                                                                 // 13424
          ;                                                                                                            // 13425
          html += '</a>';                                                                                              // 13426
        });                                                                                                            // 13427
                                                                                                                       // 13428
        if(response[fields.action]) {                                                                                  // 13429
          html += ''                                                                                                   // 13430
          + '<a href="' + response[fields.action][fields.actionURL] + '" class="action">'                              // 13431
          +   response[fields.action][fields.actionText]                                                               // 13432
          + '</a>';                                                                                                    // 13433
        }                                                                                                              // 13434
        return html;                                                                                                   // 13435
      }                                                                                                                // 13436
      return false;                                                                                                    // 13437
    }                                                                                                                  // 13438
  }                                                                                                                    // 13439
};                                                                                                                     // 13440
                                                                                                                       // 13441
})( jQuery, window , document );                                                                                       // 13442
                                                                                                                       // 13443
/*!                                                                                                                    // 13444
 * # Semantic UI 2.1.2 - Shape                                                                                         // 13445
 * http://github.com/semantic-org/semantic-ui/                                                                         // 13446
 *                                                                                                                     // 13447
 *                                                                                                                     // 13448
 * Copyright 2015 Contributors                                                                                         // 13449
 * Released under the MIT license                                                                                      // 13450
 * http://opensource.org/licenses/MIT                                                                                  // 13451
 *                                                                                                                     // 13452
 */                                                                                                                    // 13453
                                                                                                                       // 13454
;(function ( $, window, document, undefined ) {                                                                        // 13455
                                                                                                                       // 13456
"use strict";                                                                                                          // 13457
                                                                                                                       // 13458
$.fn.shape = function(parameters) {                                                                                    // 13459
  var                                                                                                                  // 13460
    $allModules     = $(this),                                                                                         // 13461
    $body           = $('body'),                                                                                       // 13462
                                                                                                                       // 13463
    time            = new Date().getTime(),                                                                            // 13464
    performance     = [],                                                                                              // 13465
                                                                                                                       // 13466
    query           = arguments[0],                                                                                    // 13467
    methodInvoked   = (typeof query == 'string'),                                                                      // 13468
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 13469
                                                                                                                       // 13470
    requestAnimationFrame = window.requestAnimationFrame                                                               // 13471
      || window.mozRequestAnimationFrame                                                                               // 13472
      || window.webkitRequestAnimationFrame                                                                            // 13473
      || window.msRequestAnimationFrame                                                                                // 13474
      || function(callback) { setTimeout(callback, 0); },                                                              // 13475
                                                                                                                       // 13476
    returnedValue                                                                                                      // 13477
  ;                                                                                                                    // 13478
                                                                                                                       // 13479
  $allModules                                                                                                          // 13480
    .each(function() {                                                                                                 // 13481
      var                                                                                                              // 13482
        moduleSelector = $allModules.selector || '',                                                                   // 13483
        settings       = ( $.isPlainObject(parameters) )                                                               // 13484
          ? $.extend(true, {}, $.fn.shape.settings, parameters)                                                        // 13485
          : $.extend({}, $.fn.shape.settings),                                                                         // 13486
                                                                                                                       // 13487
        // internal aliases                                                                                            // 13488
        namespace     = settings.namespace,                                                                            // 13489
        selector      = settings.selector,                                                                             // 13490
        error         = settings.error,                                                                                // 13491
        className     = settings.className,                                                                            // 13492
                                                                                                                       // 13493
        // define namespaces for modules                                                                               // 13494
        eventNamespace  = '.' + namespace,                                                                             // 13495
        moduleNamespace = 'module-' + namespace,                                                                       // 13496
                                                                                                                       // 13497
        // selector cache                                                                                              // 13498
        $module       = $(this),                                                                                       // 13499
        $sides        = $module.find(selector.sides),                                                                  // 13500
        $side         = $module.find(selector.side),                                                                   // 13501
                                                                                                                       // 13502
        // private variables                                                                                           // 13503
        nextIndex = false,                                                                                             // 13504
        $activeSide,                                                                                                   // 13505
        $nextSide,                                                                                                     // 13506
                                                                                                                       // 13507
        // standard module                                                                                             // 13508
        element       = this,                                                                                          // 13509
        instance      = $module.data(moduleNamespace),                                                                 // 13510
        module                                                                                                         // 13511
      ;                                                                                                                // 13512
                                                                                                                       // 13513
      module = {                                                                                                       // 13514
                                                                                                                       // 13515
        initialize: function() {                                                                                       // 13516
          module.verbose('Initializing module for', element);                                                          // 13517
          module.set.defaultSide();                                                                                    // 13518
          module.instantiate();                                                                                        // 13519
        },                                                                                                             // 13520
                                                                                                                       // 13521
        instantiate: function() {                                                                                      // 13522
          module.verbose('Storing instance of module', module);                                                        // 13523
          instance = module;                                                                                           // 13524
          $module                                                                                                      // 13525
            .data(moduleNamespace, instance)                                                                           // 13526
          ;                                                                                                            // 13527
        },                                                                                                             // 13528
                                                                                                                       // 13529
        destroy: function() {                                                                                          // 13530
          module.verbose('Destroying previous module for', element);                                                   // 13531
          $module                                                                                                      // 13532
            .removeData(moduleNamespace)                                                                               // 13533
            .off(eventNamespace)                                                                                       // 13534
          ;                                                                                                            // 13535
        },                                                                                                             // 13536
                                                                                                                       // 13537
        refresh: function() {                                                                                          // 13538
          module.verbose('Refreshing selector cache for', element);                                                    // 13539
          $module = $(element);                                                                                        // 13540
          $sides  = $(this).find(selector.shape);                                                                      // 13541
          $side   = $(this).find(selector.side);                                                                       // 13542
        },                                                                                                             // 13543
                                                                                                                       // 13544
        repaint: function() {                                                                                          // 13545
          module.verbose('Forcing repaint event');                                                                     // 13546
          var                                                                                                          // 13547
            shape          = $sides[0] || document.createElement('div'),                                               // 13548
            fakeAssignment = shape.offsetWidth                                                                         // 13549
          ;                                                                                                            // 13550
        },                                                                                                             // 13551
                                                                                                                       // 13552
        animate: function(propertyObject, callback) {                                                                  // 13553
          module.verbose('Animating box with properties', propertyObject);                                             // 13554
          callback = callback || function(event) {                                                                     // 13555
            module.verbose('Executing animation callback');                                                            // 13556
            if(event !== undefined) {                                                                                  // 13557
              event.stopPropagation();                                                                                 // 13558
            }                                                                                                          // 13559
            module.reset();                                                                                            // 13560
            module.set.active();                                                                                       // 13561
          };                                                                                                           // 13562
          settings.beforeChange.call($nextSide[0]);                                                                    // 13563
          if(module.get.transitionEvent()) {                                                                           // 13564
            module.verbose('Starting CSS animation');                                                                  // 13565
            $module                                                                                                    // 13566
              .addClass(className.animating)                                                                           // 13567
            ;                                                                                                          // 13568
            $sides                                                                                                     // 13569
              .css(propertyObject)                                                                                     // 13570
              .one(module.get.transitionEvent(), callback)                                                             // 13571
            ;                                                                                                          // 13572
            module.set.duration(settings.duration);                                                                    // 13573
            requestAnimationFrame(function() {                                                                         // 13574
              $module                                                                                                  // 13575
                .addClass(className.animating)                                                                         // 13576
              ;                                                                                                        // 13577
              $activeSide                                                                                              // 13578
                .addClass(className.hidden)                                                                            // 13579
              ;                                                                                                        // 13580
            });                                                                                                        // 13581
          }                                                                                                            // 13582
          else {                                                                                                       // 13583
            callback();                                                                                                // 13584
          }                                                                                                            // 13585
        },                                                                                                             // 13586
                                                                                                                       // 13587
        queue: function(method) {                                                                                      // 13588
          module.debug('Queueing animation of', method);                                                               // 13589
          $sides                                                                                                       // 13590
            .one(module.get.transitionEvent(), function() {                                                            // 13591
              module.debug('Executing queued animation');                                                              // 13592
              setTimeout(function(){                                                                                   // 13593
                $module.shape(method);                                                                                 // 13594
              }, 0);                                                                                                   // 13595
            })                                                                                                         // 13596
          ;                                                                                                            // 13597
        },                                                                                                             // 13598
                                                                                                                       // 13599
        reset: function() {                                                                                            // 13600
          module.verbose('Animating states reset');                                                                    // 13601
          $module                                                                                                      // 13602
            .removeClass(className.animating)                                                                          // 13603
            .attr('style', '')                                                                                         // 13604
            .removeAttr('style')                                                                                       // 13605
          ;                                                                                                            // 13606
          // removeAttr style does not consistently work in safari                                                     // 13607
          $sides                                                                                                       // 13608
            .attr('style', '')                                                                                         // 13609
            .removeAttr('style')                                                                                       // 13610
          ;                                                                                                            // 13611
          $side                                                                                                        // 13612
            .attr('style', '')                                                                                         // 13613
            .removeAttr('style')                                                                                       // 13614
            .removeClass(className.hidden)                                                                             // 13615
          ;                                                                                                            // 13616
          $nextSide                                                                                                    // 13617
            .removeClass(className.animating)                                                                          // 13618
            .attr('style', '')                                                                                         // 13619
            .removeAttr('style')                                                                                       // 13620
          ;                                                                                                            // 13621
        },                                                                                                             // 13622
                                                                                                                       // 13623
        is: {                                                                                                          // 13624
          complete: function() {                                                                                       // 13625
            return ($side.filter('.' + className.active)[0] == $nextSide[0]);                                          // 13626
          },                                                                                                           // 13627
          animating: function() {                                                                                      // 13628
            return $module.hasClass(className.animating);                                                              // 13629
          }                                                                                                            // 13630
        },                                                                                                             // 13631
                                                                                                                       // 13632
        set: {                                                                                                         // 13633
                                                                                                                       // 13634
          defaultSide: function() {                                                                                    // 13635
            $activeSide = $module.find('.' + settings.className.active);                                               // 13636
            $nextSide   = ( $activeSide.next(selector.side).length > 0 )                                               // 13637
              ? $activeSide.next(selector.side)                                                                        // 13638
              : $module.find(selector.side).first()                                                                    // 13639
            ;                                                                                                          // 13640
            nextIndex = false;                                                                                         // 13641
            module.verbose('Active side set to', $activeSide);                                                         // 13642
            module.verbose('Next side set to', $nextSide);                                                             // 13643
          },                                                                                                           // 13644
                                                                                                                       // 13645
          duration: function(duration) {                                                                               // 13646
            duration = duration || settings.duration;                                                                  // 13647
            duration = (typeof duration == 'number')                                                                   // 13648
              ? duration + 'ms'                                                                                        // 13649
              : duration                                                                                               // 13650
            ;                                                                                                          // 13651
            module.verbose('Setting animation duration', duration);                                                    // 13652
            if(settings.duration || settings.duration === 0) {                                                         // 13653
              $sides.add($side)                                                                                        // 13654
                .css({                                                                                                 // 13655
                  '-webkit-transition-duration': duration,                                                             // 13656
                  '-moz-transition-duration': duration,                                                                // 13657
                  '-ms-transition-duration': duration,                                                                 // 13658
                  '-o-transition-duration': duration,                                                                  // 13659
                  'transition-duration': duration                                                                      // 13660
                })                                                                                                     // 13661
              ;                                                                                                        // 13662
            }                                                                                                          // 13663
          },                                                                                                           // 13664
                                                                                                                       // 13665
          currentStageSize: function() {                                                                               // 13666
            var                                                                                                        // 13667
              $activeSide = $module.find('.' + settings.className.active),                                             // 13668
              width       = $activeSide.outerWidth(true),                                                              // 13669
              height      = $activeSide.outerHeight(true)                                                              // 13670
            ;                                                                                                          // 13671
            $module                                                                                                    // 13672
              .css({                                                                                                   // 13673
                width: width,                                                                                          // 13674
                height: height                                                                                         // 13675
              })                                                                                                       // 13676
            ;                                                                                                          // 13677
          },                                                                                                           // 13678
                                                                                                                       // 13679
          stageSize: function() {                                                                                      // 13680
            var                                                                                                        // 13681
              $clone      = $module.clone().addClass(className.loading),                                               // 13682
              $activeSide = $clone.find('.' + settings.className.active),                                              // 13683
              $nextSide   = (nextIndex)                                                                                // 13684
                ? $clone.find(selector.side).eq(nextIndex)                                                             // 13685
                : ( $activeSide.next(selector.side).length > 0 )                                                       // 13686
                  ? $activeSide.next(selector.side)                                                                    // 13687
                  : $clone.find(selector.side).first(),                                                                // 13688
              newSize = {}                                                                                             // 13689
            ;                                                                                                          // 13690
            module.set.currentStageSize();                                                                             // 13691
            $activeSide.removeClass(className.active);                                                                 // 13692
            $nextSide.addClass(className.active);                                                                      // 13693
            $clone.insertAfter($module);                                                                               // 13694
            newSize = {                                                                                                // 13695
              width  : $nextSide.outerWidth(true),                                                                     // 13696
              height : $nextSide.outerHeight(true)                                                                     // 13697
            };                                                                                                         // 13698
            $clone.remove();                                                                                           // 13699
            $module                                                                                                    // 13700
              .css(newSize)                                                                                            // 13701
            ;                                                                                                          // 13702
            module.verbose('Resizing stage to fit new content', newSize);                                              // 13703
          },                                                                                                           // 13704
                                                                                                                       // 13705
          nextSide: function(selector) {                                                                               // 13706
            nextIndex = selector;                                                                                      // 13707
            $nextSide = $side.filter(selector);                                                                        // 13708
            nextIndex = $side.index($nextSide);                                                                        // 13709
            if($nextSide.length === 0) {                                                                               // 13710
              module.set.defaultSide();                                                                                // 13711
              module.error(error.side);                                                                                // 13712
            }                                                                                                          // 13713
            module.verbose('Next side manually set to', $nextSide);                                                    // 13714
          },                                                                                                           // 13715
                                                                                                                       // 13716
          active: function() {                                                                                         // 13717
            module.verbose('Setting new side to active', $nextSide);                                                   // 13718
            $side                                                                                                      // 13719
              .removeClass(className.active)                                                                           // 13720
            ;                                                                                                          // 13721
            $nextSide                                                                                                  // 13722
              .addClass(className.active)                                                                              // 13723
            ;                                                                                                          // 13724
            settings.onChange.call($nextSide[0]);                                                                      // 13725
            module.set.defaultSide();                                                                                  // 13726
          }                                                                                                            // 13727
        },                                                                                                             // 13728
                                                                                                                       // 13729
        flip: {                                                                                                        // 13730
                                                                                                                       // 13731
          up: function() {                                                                                             // 13732
            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {                             // 13733
              module.debug('Side already visible', $nextSide);                                                         // 13734
              return;                                                                                                  // 13735
            }                                                                                                          // 13736
            if( !module.is.animating()) {                                                                              // 13737
              module.debug('Flipping up', $nextSide);                                                                  // 13738
              module.set.stageSize();                                                                                  // 13739
              module.stage.above();                                                                                    // 13740
              module.animate( module.get.transform.up() );                                                             // 13741
            }                                                                                                          // 13742
            else {                                                                                                     // 13743
              module.queue('flip up');                                                                                 // 13744
            }                                                                                                          // 13745
          },                                                                                                           // 13746
                                                                                                                       // 13747
          down: function() {                                                                                           // 13748
            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {                             // 13749
              module.debug('Side already visible', $nextSide);                                                         // 13750
              return;                                                                                                  // 13751
            }                                                                                                          // 13752
            if( !module.is.animating()) {                                                                              // 13753
              module.debug('Flipping down', $nextSide);                                                                // 13754
              module.set.stageSize();                                                                                  // 13755
              module.stage.below();                                                                                    // 13756
              module.animate( module.get.transform.down() );                                                           // 13757
            }                                                                                                          // 13758
            else {                                                                                                     // 13759
              module.queue('flip down');                                                                               // 13760
            }                                                                                                          // 13761
          },                                                                                                           // 13762
                                                                                                                       // 13763
          left: function() {                                                                                           // 13764
            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {                             // 13765
              module.debug('Side already visible', $nextSide);                                                         // 13766
              return;                                                                                                  // 13767
            }                                                                                                          // 13768
            if( !module.is.animating()) {                                                                              // 13769
              module.debug('Flipping left', $nextSide);                                                                // 13770
              module.set.stageSize();                                                                                  // 13771
              module.stage.left();                                                                                     // 13772
              module.animate(module.get.transform.left() );                                                            // 13773
            }                                                                                                          // 13774
            else {                                                                                                     // 13775
              module.queue('flip left');                                                                               // 13776
            }                                                                                                          // 13777
          },                                                                                                           // 13778
                                                                                                                       // 13779
          right: function() {                                                                                          // 13780
            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {                             // 13781
              module.debug('Side already visible', $nextSide);                                                         // 13782
              return;                                                                                                  // 13783
            }                                                                                                          // 13784
            if( !module.is.animating()) {                                                                              // 13785
              module.debug('Flipping right', $nextSide);                                                               // 13786
              module.set.stageSize();                                                                                  // 13787
              module.stage.right();                                                                                    // 13788
              module.animate(module.get.transform.right() );                                                           // 13789
            }                                                                                                          // 13790
            else {                                                                                                     // 13791
              module.queue('flip right');                                                                              // 13792
            }                                                                                                          // 13793
          },                                                                                                           // 13794
                                                                                                                       // 13795
          over: function() {                                                                                           // 13796
            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {                             // 13797
              module.debug('Side already visible', $nextSide);                                                         // 13798
              return;                                                                                                  // 13799
            }                                                                                                          // 13800
            if( !module.is.animating()) {                                                                              // 13801
              module.debug('Flipping over', $nextSide);                                                                // 13802
              module.set.stageSize();                                                                                  // 13803
              module.stage.behind();                                                                                   // 13804
              module.animate(module.get.transform.over() );                                                            // 13805
            }                                                                                                          // 13806
            else {                                                                                                     // 13807
              module.queue('flip over');                                                                               // 13808
            }                                                                                                          // 13809
          },                                                                                                           // 13810
                                                                                                                       // 13811
          back: function() {                                                                                           // 13812
            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {                             // 13813
              module.debug('Side already visible', $nextSide);                                                         // 13814
              return;                                                                                                  // 13815
            }                                                                                                          // 13816
            if( !module.is.animating()) {                                                                              // 13817
              module.debug('Flipping back', $nextSide);                                                                // 13818
              module.set.stageSize();                                                                                  // 13819
              module.stage.behind();                                                                                   // 13820
              module.animate(module.get.transform.back() );                                                            // 13821
            }                                                                                                          // 13822
            else {                                                                                                     // 13823
              module.queue('flip back');                                                                               // 13824
            }                                                                                                          // 13825
          }                                                                                                            // 13826
                                                                                                                       // 13827
        },                                                                                                             // 13828
                                                                                                                       // 13829
        get: {                                                                                                         // 13830
                                                                                                                       // 13831
          transform: {                                                                                                 // 13832
            up: function() {                                                                                           // 13833
              var                                                                                                      // 13834
                translate = {                                                                                          // 13835
                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),                             // 13836
                  z: -($activeSide.outerHeight(true) / 2)                                                              // 13837
                }                                                                                                      // 13838
              ;                                                                                                        // 13839
              return {                                                                                                 // 13840
                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(-90deg)'        // 13841
              };                                                                                                       // 13842
            },                                                                                                         // 13843
                                                                                                                       // 13844
            down: function() {                                                                                         // 13845
              var                                                                                                      // 13846
                translate = {                                                                                          // 13847
                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),                             // 13848
                  z: -($activeSide.outerHeight(true) / 2)                                                              // 13849
                }                                                                                                      // 13850
              ;                                                                                                        // 13851
              return {                                                                                                 // 13852
                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(90deg)'         // 13853
              };                                                                                                       // 13854
            },                                                                                                         // 13855
                                                                                                                       // 13856
            left: function() {                                                                                         // 13857
              var                                                                                                      // 13858
                translate = {                                                                                          // 13859
                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),                              // 13860
                  z : -($activeSide.outerWidth(true) / 2)                                                              // 13861
                }                                                                                                      // 13862
              ;                                                                                                        // 13863
              return {                                                                                                 // 13864
                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(90deg)'        // 13865
              };                                                                                                       // 13866
            },                                                                                                         // 13867
                                                                                                                       // 13868
            right: function() {                                                                                        // 13869
              var                                                                                                      // 13870
                translate = {                                                                                          // 13871
                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),                              // 13872
                  z : -($activeSide.outerWidth(true) / 2)                                                              // 13873
                }                                                                                                      // 13874
              ;                                                                                                        // 13875
              return {                                                                                                 // 13876
                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(-90deg)'       // 13877
              };                                                                                                       // 13878
            },                                                                                                         // 13879
                                                                                                                       // 13880
            over: function() {                                                                                         // 13881
              var                                                                                                      // 13882
                translate = {                                                                                          // 13883
                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)                               // 13884
                }                                                                                                      // 13885
              ;                                                                                                        // 13886
              return {                                                                                                 // 13887
                transform: 'translateX(' + translate.x + 'px) rotateY(180deg)'                                         // 13888
              };                                                                                                       // 13889
            },                                                                                                         // 13890
                                                                                                                       // 13891
            back: function() {                                                                                         // 13892
              var                                                                                                      // 13893
                translate = {                                                                                          // 13894
                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)                               // 13895
                }                                                                                                      // 13896
              ;                                                                                                        // 13897
              return {                                                                                                 // 13898
                transform: 'translateX(' + translate.x + 'px) rotateY(-180deg)'                                        // 13899
              };                                                                                                       // 13900
            }                                                                                                          // 13901
          },                                                                                                           // 13902
                                                                                                                       // 13903
          transitionEvent: function() {                                                                                // 13904
            var                                                                                                        // 13905
              element     = document.createElement('element'),                                                         // 13906
              transitions = {                                                                                          // 13907
                'transition'       :'transitionend',                                                                   // 13908
                'OTransition'      :'oTransitionEnd',                                                                  // 13909
                'MozTransition'    :'transitionend',                                                                   // 13910
                'WebkitTransition' :'webkitTransitionEnd'                                                              // 13911
              },                                                                                                       // 13912
              transition                                                                                               // 13913
            ;                                                                                                          // 13914
            for(transition in transitions){                                                                            // 13915
              if( element.style[transition] !== undefined ){                                                           // 13916
                return transitions[transition];                                                                        // 13917
              }                                                                                                        // 13918
            }                                                                                                          // 13919
          },                                                                                                           // 13920
                                                                                                                       // 13921
          nextSide: function() {                                                                                       // 13922
            return ( $activeSide.next(selector.side).length > 0 )                                                      // 13923
              ? $activeSide.next(selector.side)                                                                        // 13924
              : $module.find(selector.side).first()                                                                    // 13925
            ;                                                                                                          // 13926
          }                                                                                                            // 13927
                                                                                                                       // 13928
        },                                                                                                             // 13929
                                                                                                                       // 13930
        stage: {                                                                                                       // 13931
                                                                                                                       // 13932
          above: function() {                                                                                          // 13933
            var                                                                                                        // 13934
              box = {                                                                                                  // 13935
                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),                          // 13936
                depth  : {                                                                                             // 13937
                  active : ($nextSide.outerHeight(true) / 2),                                                          // 13938
                  next   : ($activeSide.outerHeight(true) / 2)                                                         // 13939
                }                                                                                                      // 13940
              }                                                                                                        // 13941
            ;                                                                                                          // 13942
            module.verbose('Setting the initial animation position as above', $nextSide, box);                         // 13943
            $sides                                                                                                     // 13944
              .css({                                                                                                   // 13945
                'transform' : 'translateZ(-' + box.depth.active + 'px)'                                                // 13946
              })                                                                                                       // 13947
            ;                                                                                                          // 13948
            $activeSide                                                                                                // 13949
              .css({                                                                                                   // 13950
                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'                                   // 13951
              })                                                                                                       // 13952
            ;                                                                                                          // 13953
            $nextSide                                                                                                  // 13954
              .addClass(className.animating)                                                                           // 13955
              .css({                                                                                                   // 13956
                'top'       : box.origin + 'px',                                                                       // 13957
                'transform' : 'rotateX(90deg) translateZ(' + box.depth.next + 'px)'                                    // 13958
              })                                                                                                       // 13959
            ;                                                                                                          // 13960
          },                                                                                                           // 13961
                                                                                                                       // 13962
          below: function() {                                                                                          // 13963
            var                                                                                                        // 13964
              box = {                                                                                                  // 13965
                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),                          // 13966
                depth  : {                                                                                             // 13967
                  active : ($nextSide.outerHeight(true) / 2),                                                          // 13968
                  next   : ($activeSide.outerHeight(true) / 2)                                                         // 13969
                }                                                                                                      // 13970
              }                                                                                                        // 13971
            ;                                                                                                          // 13972
            module.verbose('Setting the initial animation position as below', $nextSide, box);                         // 13973
            $sides                                                                                                     // 13974
              .css({                                                                                                   // 13975
                'transform' : 'translateZ(-' + box.depth.active + 'px)'                                                // 13976
              })                                                                                                       // 13977
            ;                                                                                                          // 13978
            $activeSide                                                                                                // 13979
              .css({                                                                                                   // 13980
                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'                                   // 13981
              })                                                                                                       // 13982
            ;                                                                                                          // 13983
            $nextSide                                                                                                  // 13984
              .addClass(className.animating)                                                                           // 13985
              .css({                                                                                                   // 13986
                'top'       : box.origin + 'px',                                                                       // 13987
                'transform' : 'rotateX(-90deg) translateZ(' + box.depth.next + 'px)'                                   // 13988
              })                                                                                                       // 13989
            ;                                                                                                          // 13990
          },                                                                                                           // 13991
                                                                                                                       // 13992
          left: function() {                                                                                           // 13993
            var                                                                                                        // 13994
              height = {                                                                                               // 13995
                active : $activeSide.outerWidth(true),                                                                 // 13996
                next   : $nextSide.outerWidth(true)                                                                    // 13997
              },                                                                                                       // 13998
              box = {                                                                                                  // 13999
                origin : ( ( height.active - height.next ) / 2),                                                       // 14000
                depth  : {                                                                                             // 14001
                  active : (height.next / 2),                                                                          // 14002
                  next   : (height.active / 2)                                                                         // 14003
                }                                                                                                      // 14004
              }                                                                                                        // 14005
            ;                                                                                                          // 14006
            module.verbose('Setting the initial animation position as left', $nextSide, box);                          // 14007
            $sides                                                                                                     // 14008
              .css({                                                                                                   // 14009
                'transform' : 'translateZ(-' + box.depth.active + 'px)'                                                // 14010
              })                                                                                                       // 14011
            ;                                                                                                          // 14012
            $activeSide                                                                                                // 14013
              .css({                                                                                                   // 14014
                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'                                   // 14015
              })                                                                                                       // 14016
            ;                                                                                                          // 14017
            $nextSide                                                                                                  // 14018
              .addClass(className.animating)                                                                           // 14019
              .css({                                                                                                   // 14020
                'left'      : box.origin + 'px',                                                                       // 14021
                'transform' : 'rotateY(-90deg) translateZ(' + box.depth.next + 'px)'                                   // 14022
              })                                                                                                       // 14023
            ;                                                                                                          // 14024
          },                                                                                                           // 14025
                                                                                                                       // 14026
          right: function() {                                                                                          // 14027
            var                                                                                                        // 14028
              height = {                                                                                               // 14029
                active : $activeSide.outerWidth(true),                                                                 // 14030
                next   : $nextSide.outerWidth(true)                                                                    // 14031
              },                                                                                                       // 14032
              box = {                                                                                                  // 14033
                origin : ( ( height.active - height.next ) / 2),                                                       // 14034
                depth  : {                                                                                             // 14035
                  active : (height.next / 2),                                                                          // 14036
                  next   : (height.active / 2)                                                                         // 14037
                }                                                                                                      // 14038
              }                                                                                                        // 14039
            ;                                                                                                          // 14040
            module.verbose('Setting the initial animation position as left', $nextSide, box);                          // 14041
            $sides                                                                                                     // 14042
              .css({                                                                                                   // 14043
                'transform' : 'translateZ(-' + box.depth.active + 'px)'                                                // 14044
              })                                                                                                       // 14045
            ;                                                                                                          // 14046
            $activeSide                                                                                                // 14047
              .css({                                                                                                   // 14048
                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'                                   // 14049
              })                                                                                                       // 14050
            ;                                                                                                          // 14051
            $nextSide                                                                                                  // 14052
              .addClass(className.animating)                                                                           // 14053
              .css({                                                                                                   // 14054
                'left'      : box.origin + 'px',                                                                       // 14055
                'transform' : 'rotateY(90deg) translateZ(' + box.depth.next + 'px)'                                    // 14056
              })                                                                                                       // 14057
            ;                                                                                                          // 14058
          },                                                                                                           // 14059
                                                                                                                       // 14060
          behind: function() {                                                                                         // 14061
            var                                                                                                        // 14062
              height = {                                                                                               // 14063
                active : $activeSide.outerWidth(true),                                                                 // 14064
                next   : $nextSide.outerWidth(true)                                                                    // 14065
              },                                                                                                       // 14066
              box = {                                                                                                  // 14067
                origin : ( ( height.active - height.next ) / 2),                                                       // 14068
                depth  : {                                                                                             // 14069
                  active : (height.next / 2),                                                                          // 14070
                  next   : (height.active / 2)                                                                         // 14071
                }                                                                                                      // 14072
              }                                                                                                        // 14073
            ;                                                                                                          // 14074
            module.verbose('Setting the initial animation position as behind', $nextSide, box);                        // 14075
            $activeSide                                                                                                // 14076
              .css({                                                                                                   // 14077
                'transform' : 'rotateY(0deg)'                                                                          // 14078
              })                                                                                                       // 14079
            ;                                                                                                          // 14080
            $nextSide                                                                                                  // 14081
              .addClass(className.animating)                                                                           // 14082
              .css({                                                                                                   // 14083
                'left'      : box.origin + 'px',                                                                       // 14084
                'transform' : 'rotateY(-180deg)'                                                                       // 14085
              })                                                                                                       // 14086
            ;                                                                                                          // 14087
          }                                                                                                            // 14088
        },                                                                                                             // 14089
        setting: function(name, value) {                                                                               // 14090
          module.debug('Changing setting', name, value);                                                               // 14091
          if( $.isPlainObject(name) ) {                                                                                // 14092
            $.extend(true, settings, name);                                                                            // 14093
          }                                                                                                            // 14094
          else if(value !== undefined) {                                                                               // 14095
            settings[name] = value;                                                                                    // 14096
          }                                                                                                            // 14097
          else {                                                                                                       // 14098
            return settings[name];                                                                                     // 14099
          }                                                                                                            // 14100
        },                                                                                                             // 14101
        internal: function(name, value) {                                                                              // 14102
          if( $.isPlainObject(name) ) {                                                                                // 14103
            $.extend(true, module, name);                                                                              // 14104
          }                                                                                                            // 14105
          else if(value !== undefined) {                                                                               // 14106
            module[name] = value;                                                                                      // 14107
          }                                                                                                            // 14108
          else {                                                                                                       // 14109
            return module[name];                                                                                       // 14110
          }                                                                                                            // 14111
        },                                                                                                             // 14112
        debug: function() {                                                                                            // 14113
          if(settings.debug) {                                                                                         // 14114
            if(settings.performance) {                                                                                 // 14115
              module.performance.log(arguments);                                                                       // 14116
            }                                                                                                          // 14117
            else {                                                                                                     // 14118
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 14119
              module.debug.apply(console, arguments);                                                                  // 14120
            }                                                                                                          // 14121
          }                                                                                                            // 14122
        },                                                                                                             // 14123
        verbose: function() {                                                                                          // 14124
          if(settings.verbose && settings.debug) {                                                                     // 14125
            if(settings.performance) {                                                                                 // 14126
              module.performance.log(arguments);                                                                       // 14127
            }                                                                                                          // 14128
            else {                                                                                                     // 14129
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 14130
              module.verbose.apply(console, arguments);                                                                // 14131
            }                                                                                                          // 14132
          }                                                                                                            // 14133
        },                                                                                                             // 14134
        error: function() {                                                                                            // 14135
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 14136
          module.error.apply(console, arguments);                                                                      // 14137
        },                                                                                                             // 14138
        performance: {                                                                                                 // 14139
          log: function(message) {                                                                                     // 14140
            var                                                                                                        // 14141
              currentTime,                                                                                             // 14142
              executionTime,                                                                                           // 14143
              previousTime                                                                                             // 14144
            ;                                                                                                          // 14145
            if(settings.performance) {                                                                                 // 14146
              currentTime   = new Date().getTime();                                                                    // 14147
              previousTime  = time || currentTime;                                                                     // 14148
              executionTime = currentTime - previousTime;                                                              // 14149
              time          = currentTime;                                                                             // 14150
              performance.push({                                                                                       // 14151
                'Name'           : message[0],                                                                         // 14152
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 14153
                'Element'        : element,                                                                            // 14154
                'Execution Time' : executionTime                                                                       // 14155
              });                                                                                                      // 14156
            }                                                                                                          // 14157
            clearTimeout(module.performance.timer);                                                                    // 14158
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 14159
          },                                                                                                           // 14160
          display: function() {                                                                                        // 14161
            var                                                                                                        // 14162
              title = settings.name + ':',                                                                             // 14163
              totalTime = 0                                                                                            // 14164
            ;                                                                                                          // 14165
            time = false;                                                                                              // 14166
            clearTimeout(module.performance.timer);                                                                    // 14167
            $.each(performance, function(index, data) {                                                                // 14168
              totalTime += data['Execution Time'];                                                                     // 14169
            });                                                                                                        // 14170
            title += ' ' + totalTime + 'ms';                                                                           // 14171
            if(moduleSelector) {                                                                                       // 14172
              title += ' \'' + moduleSelector + '\'';                                                                  // 14173
            }                                                                                                          // 14174
            if($allModules.length > 1) {                                                                               // 14175
              title += ' ' + '(' + $allModules.length + ')';                                                           // 14176
            }                                                                                                          // 14177
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 14178
              console.groupCollapsed(title);                                                                           // 14179
              if(console.table) {                                                                                      // 14180
                console.table(performance);                                                                            // 14181
              }                                                                                                        // 14182
              else {                                                                                                   // 14183
                $.each(performance, function(index, data) {                                                            // 14184
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 14185
                });                                                                                                    // 14186
              }                                                                                                        // 14187
              console.groupEnd();                                                                                      // 14188
            }                                                                                                          // 14189
            performance = [];                                                                                          // 14190
          }                                                                                                            // 14191
        },                                                                                                             // 14192
        invoke: function(query, passedArguments, context) {                                                            // 14193
          var                                                                                                          // 14194
            object = instance,                                                                                         // 14195
            maxDepth,                                                                                                  // 14196
            found,                                                                                                     // 14197
            response                                                                                                   // 14198
          ;                                                                                                            // 14199
          passedArguments = passedArguments || queryArguments;                                                         // 14200
          context         = element         || context;                                                                // 14201
          if(typeof query == 'string' && object !== undefined) {                                                       // 14202
            query    = query.split(/[\. ]/);                                                                           // 14203
            maxDepth = query.length - 1;                                                                               // 14204
            $.each(query, function(depth, value) {                                                                     // 14205
              var camelCaseValue = (depth != maxDepth)                                                                 // 14206
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 14207
                : query                                                                                                // 14208
              ;                                                                                                        // 14209
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 14210
                object = object[camelCaseValue];                                                                       // 14211
              }                                                                                                        // 14212
              else if( object[camelCaseValue] !== undefined ) {                                                        // 14213
                found = object[camelCaseValue];                                                                        // 14214
                return false;                                                                                          // 14215
              }                                                                                                        // 14216
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 14217
                object = object[value];                                                                                // 14218
              }                                                                                                        // 14219
              else if( object[value] !== undefined ) {                                                                 // 14220
                found = object[value];                                                                                 // 14221
                return false;                                                                                          // 14222
              }                                                                                                        // 14223
              else {                                                                                                   // 14224
                return false;                                                                                          // 14225
              }                                                                                                        // 14226
            });                                                                                                        // 14227
          }                                                                                                            // 14228
          if ( $.isFunction( found ) ) {                                                                               // 14229
            response = found.apply(context, passedArguments);                                                          // 14230
          }                                                                                                            // 14231
          else if(found !== undefined) {                                                                               // 14232
            response = found;                                                                                          // 14233
          }                                                                                                            // 14234
          if($.isArray(returnedValue)) {                                                                               // 14235
            returnedValue.push(response);                                                                              // 14236
          }                                                                                                            // 14237
          else if(returnedValue !== undefined) {                                                                       // 14238
            returnedValue = [returnedValue, response];                                                                 // 14239
          }                                                                                                            // 14240
          else if(response !== undefined) {                                                                            // 14241
            returnedValue = response;                                                                                  // 14242
          }                                                                                                            // 14243
          return found;                                                                                                // 14244
        }                                                                                                              // 14245
      };                                                                                                               // 14246
                                                                                                                       // 14247
      if(methodInvoked) {                                                                                              // 14248
        if(instance === undefined) {                                                                                   // 14249
          module.initialize();                                                                                         // 14250
        }                                                                                                              // 14251
        module.invoke(query);                                                                                          // 14252
      }                                                                                                                // 14253
      else {                                                                                                           // 14254
        if(instance !== undefined) {                                                                                   // 14255
          instance.invoke('destroy');                                                                                  // 14256
        }                                                                                                              // 14257
        module.initialize();                                                                                           // 14258
      }                                                                                                                // 14259
    })                                                                                                                 // 14260
  ;                                                                                                                    // 14261
                                                                                                                       // 14262
  return (returnedValue !== undefined)                                                                                 // 14263
    ? returnedValue                                                                                                    // 14264
    : this                                                                                                             // 14265
  ;                                                                                                                    // 14266
};                                                                                                                     // 14267
                                                                                                                       // 14268
$.fn.shape.settings = {                                                                                                // 14269
                                                                                                                       // 14270
  // module info                                                                                                       // 14271
  name : 'Shape',                                                                                                      // 14272
                                                                                                                       // 14273
  // debug content outputted to console                                                                                // 14274
  debug      : false,                                                                                                  // 14275
                                                                                                                       // 14276
  // verbose debug output                                                                                              // 14277
  verbose    : false,                                                                                                  // 14278
                                                                                                                       // 14279
  // performance data output                                                                                           // 14280
  performance: true,                                                                                                   // 14281
                                                                                                                       // 14282
  // event namespace                                                                                                   // 14283
  namespace  : 'shape',                                                                                                // 14284
                                                                                                                       // 14285
  // callback occurs on side change                                                                                    // 14286
  beforeChange : function() {},                                                                                        // 14287
  onChange     : function() {},                                                                                        // 14288
                                                                                                                       // 14289
  // allow animation to same side                                                                                      // 14290
  allowRepeats: false,                                                                                                 // 14291
                                                                                                                       // 14292
  // animation duration                                                                                                // 14293
  duration   : false,                                                                                                  // 14294
                                                                                                                       // 14295
  // possible errors                                                                                                   // 14296
  error: {                                                                                                             // 14297
    side   : 'You tried to switch to a side that does not exist.',                                                     // 14298
    method : 'The method you called is not defined'                                                                    // 14299
  },                                                                                                                   // 14300
                                                                                                                       // 14301
  // classnames used                                                                                                   // 14302
  className   : {                                                                                                      // 14303
    animating : 'animating',                                                                                           // 14304
    hidden    : 'hidden',                                                                                              // 14305
    loading   : 'loading',                                                                                             // 14306
    active    : 'active'                                                                                               // 14307
  },                                                                                                                   // 14308
                                                                                                                       // 14309
  // selectors used                                                                                                    // 14310
  selector    : {                                                                                                      // 14311
    sides : '.sides',                                                                                                  // 14312
    side  : '.side'                                                                                                    // 14313
  }                                                                                                                    // 14314
                                                                                                                       // 14315
};                                                                                                                     // 14316
                                                                                                                       // 14317
                                                                                                                       // 14318
})( jQuery, window , document );                                                                                       // 14319
/*!                                                                                                                    // 14320
 * # Semantic UI 2.1.2 - Sidebar                                                                                       // 14321
 * http://github.com/semantic-org/semantic-ui/                                                                         // 14322
 *                                                                                                                     // 14323
 *                                                                                                                     // 14324
 * Copyright 2015 Contributors                                                                                         // 14325
 * Released under the MIT license                                                                                      // 14326
 * http://opensource.org/licenses/MIT                                                                                  // 14327
 *                                                                                                                     // 14328
 */                                                                                                                    // 14329
                                                                                                                       // 14330
;(function ( $, window, document, undefined ) {                                                                        // 14331
                                                                                                                       // 14332
"use strict";                                                                                                          // 14333
                                                                                                                       // 14334
$.fn.sidebar = function(parameters) {                                                                                  // 14335
  var                                                                                                                  // 14336
    $allModules     = $(this),                                                                                         // 14337
    $window         = $(window),                                                                                       // 14338
    $document       = $(document),                                                                                     // 14339
    $html           = $('html'),                                                                                       // 14340
    $head           = $('head'),                                                                                       // 14341
                                                                                                                       // 14342
    moduleSelector  = $allModules.selector || '',                                                                      // 14343
                                                                                                                       // 14344
    time            = new Date().getTime(),                                                                            // 14345
    performance     = [],                                                                                              // 14346
                                                                                                                       // 14347
    query           = arguments[0],                                                                                    // 14348
    methodInvoked   = (typeof query == 'string'),                                                                      // 14349
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 14350
                                                                                                                       // 14351
    requestAnimationFrame = window.requestAnimationFrame                                                               // 14352
      || window.mozRequestAnimationFrame                                                                               // 14353
      || window.webkitRequestAnimationFrame                                                                            // 14354
      || window.msRequestAnimationFrame                                                                                // 14355
      || function(callback) { setTimeout(callback, 0); },                                                              // 14356
                                                                                                                       // 14357
    returnedValue                                                                                                      // 14358
  ;                                                                                                                    // 14359
                                                                                                                       // 14360
  $allModules                                                                                                          // 14361
    .each(function() {                                                                                                 // 14362
      var                                                                                                              // 14363
        settings        = ( $.isPlainObject(parameters) )                                                              // 14364
          ? $.extend(true, {}, $.fn.sidebar.settings, parameters)                                                      // 14365
          : $.extend({}, $.fn.sidebar.settings),                                                                       // 14366
                                                                                                                       // 14367
        selector        = settings.selector,                                                                           // 14368
        className       = settings.className,                                                                          // 14369
        namespace       = settings.namespace,                                                                          // 14370
        regExp          = settings.regExp,                                                                             // 14371
        error           = settings.error,                                                                              // 14372
                                                                                                                       // 14373
        eventNamespace  = '.' + namespace,                                                                             // 14374
        moduleNamespace = 'module-' + namespace,                                                                       // 14375
                                                                                                                       // 14376
        $module         = $(this),                                                                                     // 14377
        $context        = $(settings.context),                                                                         // 14378
                                                                                                                       // 14379
        $sidebars       = $module.children(selector.sidebar),                                                          // 14380
        $fixed          = $context.children(selector.fixed),                                                           // 14381
        $pusher         = $context.children(selector.pusher),                                                          // 14382
        $style,                                                                                                        // 14383
                                                                                                                       // 14384
        element         = this,                                                                                        // 14385
        instance        = $module.data(moduleNamespace),                                                               // 14386
                                                                                                                       // 14387
        elementNamespace,                                                                                              // 14388
        id,                                                                                                            // 14389
        currentScroll,                                                                                                 // 14390
        transitionEvent,                                                                                               // 14391
                                                                                                                       // 14392
        module                                                                                                         // 14393
      ;                                                                                                                // 14394
                                                                                                                       // 14395
      module      = {                                                                                                  // 14396
                                                                                                                       // 14397
        initialize: function() {                                                                                       // 14398
          module.debug('Initializing sidebar', parameters);                                                            // 14399
                                                                                                                       // 14400
          module.create.id();                                                                                          // 14401
                                                                                                                       // 14402
          transitionEvent = module.get.transitionEvent();                                                              // 14403
                                                                                                                       // 14404
          if(module.is.ios()) {                                                                                        // 14405
            module.set.ios();                                                                                          // 14406
          }                                                                                                            // 14407
                                                                                                                       // 14408
          // avoids locking rendering if initialized in onReady                                                        // 14409
          if(settings.delaySetup) {                                                                                    // 14410
            requestAnimationFrame(module.setup.layout);                                                                // 14411
          }                                                                                                            // 14412
          else {                                                                                                       // 14413
            module.setup.layout();                                                                                     // 14414
          }                                                                                                            // 14415
                                                                                                                       // 14416
          requestAnimationFrame(function() {                                                                           // 14417
            module.setup.cache();                                                                                      // 14418
          });                                                                                                          // 14419
                                                                                                                       // 14420
          module.instantiate();                                                                                        // 14421
        },                                                                                                             // 14422
                                                                                                                       // 14423
        instantiate: function() {                                                                                      // 14424
          module.verbose('Storing instance of module', module);                                                        // 14425
          instance = module;                                                                                           // 14426
          $module                                                                                                      // 14427
            .data(moduleNamespace, module)                                                                             // 14428
          ;                                                                                                            // 14429
        },                                                                                                             // 14430
                                                                                                                       // 14431
        create: {                                                                                                      // 14432
          id: function() {                                                                                             // 14433
            id = (Math.random().toString(16) + '000000000').substr(2,8);                                               // 14434
            elementNamespace = '.' + id;                                                                               // 14435
            module.verbose('Creating unique id for element', id);                                                      // 14436
          }                                                                                                            // 14437
        },                                                                                                             // 14438
                                                                                                                       // 14439
        destroy: function() {                                                                                          // 14440
          module.verbose('Destroying previous module for', $module);                                                   // 14441
          $module                                                                                                      // 14442
            .off(eventNamespace)                                                                                       // 14443
            .removeData(moduleNamespace)                                                                               // 14444
          ;                                                                                                            // 14445
          if(module.is.ios()) {                                                                                        // 14446
            module.remove.ios();                                                                                       // 14447
          }                                                                                                            // 14448
          // bound by uuid                                                                                             // 14449
          $context.off(elementNamespace);                                                                              // 14450
          $window.off(elementNamespace);                                                                               // 14451
          $document.off(elementNamespace);                                                                             // 14452
        },                                                                                                             // 14453
                                                                                                                       // 14454
        event: {                                                                                                       // 14455
          clickaway: function(event) {                                                                                 // 14456
            var                                                                                                        // 14457
              clickedInPusher = ($pusher.find(event.target).length > 0 || $pusher.is(event.target)),                   // 14458
              clickedContext  = ($context.is(event.target))                                                            // 14459
            ;                                                                                                          // 14460
            if(clickedInPusher) {                                                                                      // 14461
              module.verbose('User clicked on dimmed page');                                                           // 14462
              module.hide();                                                                                           // 14463
            }                                                                                                          // 14464
            if(clickedContext) {                                                                                       // 14465
              module.verbose('User clicked on dimmable context (scaled out page)');                                    // 14466
              module.hide();                                                                                           // 14467
            }                                                                                                          // 14468
          },                                                                                                           // 14469
          touch: function(event) {                                                                                     // 14470
            //event.stopPropagation();                                                                                 // 14471
          },                                                                                                           // 14472
          containScroll: function(event) {                                                                             // 14473
            if(element.scrollTop <= 0)  {                                                                              // 14474
              element.scrollTop = 1;                                                                                   // 14475
            }                                                                                                          // 14476
            if((element.scrollTop + element.offsetHeight) >= element.scrollHeight) {                                   // 14477
              element.scrollTop = element.scrollHeight - element.offsetHeight - 1;                                     // 14478
            }                                                                                                          // 14479
          },                                                                                                           // 14480
          scroll: function(event) {                                                                                    // 14481
            if( $(event.target).closest(selector.sidebar).length === 0 ) {                                             // 14482
              event.preventDefault();                                                                                  // 14483
            }                                                                                                          // 14484
          }                                                                                                            // 14485
        },                                                                                                             // 14486
                                                                                                                       // 14487
        bind: {                                                                                                        // 14488
          clickaway: function() {                                                                                      // 14489
            module.verbose('Adding clickaway events to context', $context);                                            // 14490
            if(settings.closable) {                                                                                    // 14491
              $context                                                                                                 // 14492
                .on('click'    + elementNamespace, module.event.clickaway)                                             // 14493
                .on('touchend' + elementNamespace, module.event.clickaway)                                             // 14494
              ;                                                                                                        // 14495
            }                                                                                                          // 14496
          },                                                                                                           // 14497
          scrollLock: function() {                                                                                     // 14498
            if(settings.scrollLock) {                                                                                  // 14499
              module.debug('Disabling page scroll');                                                                   // 14500
              $window                                                                                                  // 14501
                .on('DOMMouseScroll' + elementNamespace, module.event.scroll)                                          // 14502
              ;                                                                                                        // 14503
            }                                                                                                          // 14504
            module.verbose('Adding events to contain sidebar scroll');                                                 // 14505
            $document                                                                                                  // 14506
              .on('touchmove' + elementNamespace, module.event.touch)                                                  // 14507
            ;                                                                                                          // 14508
            $module                                                                                                    // 14509
              .on('scroll' + eventNamespace, module.event.containScroll)                                               // 14510
            ;                                                                                                          // 14511
          }                                                                                                            // 14512
        },                                                                                                             // 14513
        unbind: {                                                                                                      // 14514
          clickaway: function() {                                                                                      // 14515
            module.verbose('Removing clickaway events from context', $context);                                        // 14516
            $context.off(elementNamespace);                                                                            // 14517
          },                                                                                                           // 14518
          scrollLock: function() {                                                                                     // 14519
            module.verbose('Removing scroll lock from page');                                                          // 14520
            $document.off(elementNamespace);                                                                           // 14521
            $window.off(elementNamespace);                                                                             // 14522
            $module.off('scroll' + eventNamespace);                                                                    // 14523
          }                                                                                                            // 14524
        },                                                                                                             // 14525
                                                                                                                       // 14526
        add: {                                                                                                         // 14527
          inlineCSS: function() {                                                                                      // 14528
            var                                                                                                        // 14529
              width     = module.cache.width  || $module.outerWidth(),                                                 // 14530
              height    = module.cache.height || $module.outerHeight(),                                                // 14531
              isRTL     = module.is.rtl(),                                                                             // 14532
              direction = module.get.direction(),                                                                      // 14533
              distance  = {                                                                                            // 14534
                left   : width,                                                                                        // 14535
                right  : -width,                                                                                       // 14536
                top    : height,                                                                                       // 14537
                bottom : -height                                                                                       // 14538
              },                                                                                                       // 14539
              style                                                                                                    // 14540
            ;                                                                                                          // 14541
                                                                                                                       // 14542
            if(isRTL){                                                                                                 // 14543
              module.verbose('RTL detected, flipping widths');                                                         // 14544
              distance.left = -width;                                                                                  // 14545
              distance.right = width;                                                                                  // 14546
            }                                                                                                          // 14547
                                                                                                                       // 14548
            style  = '<style>';                                                                                        // 14549
                                                                                                                       // 14550
            if(direction === 'left' || direction === 'right') {                                                        // 14551
              module.debug('Adding CSS rules for animation distance', width);                                          // 14552
              style  += ''                                                                                             // 14553
                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'                                                   // 14554
                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'                                                 // 14555
                + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'                             // 14556
                + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'                             // 14557
                + ' }'                                                                                                 // 14558
              ;                                                                                                        // 14559
            }                                                                                                          // 14560
            else if(direction === 'top' || direction == 'bottom') {                                                    // 14561
              style  += ''                                                                                             // 14562
                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'                                                   // 14563
                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'                                                 // 14564
                + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'                            // 14565
                + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'                            // 14566
                + ' }'                                                                                                 // 14567
              ;                                                                                                        // 14568
            }                                                                                                          // 14569
                                                                                                                       // 14570
            /* IE is only browser not to create context with transforms */                                             // 14571
            /* https://www.w3.org/Bugs/Public/show_bug.cgi?id=16328 */                                                 // 14572
            if( module.is.ie() ) {                                                                                     // 14573
              if(direction === 'left' || direction === 'right') {                                                      // 14574
                module.debug('Adding CSS rules for animation distance', width);                                        // 14575
                style  += ''                                                                                           // 14576
                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'                         // 14577
                  + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'                           // 14578
                  + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'                           // 14579
                  + ' }'                                                                                               // 14580
                ;                                                                                                      // 14581
              }                                                                                                        // 14582
              else if(direction === 'top' || direction == 'bottom') {                                                  // 14583
                style  += ''                                                                                           // 14584
                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'                         // 14585
                  + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'                          // 14586
                  + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'                          // 14587
                  + ' }'                                                                                               // 14588
                ;                                                                                                      // 14589
              }                                                                                                        // 14590
              /* opposite sides visible forces content overlay */                                                      // 14591
              style += ''                                                                                              // 14592
                + ' body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after,'             // 14593
                + ' body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {'            // 14594
                + '   -webkit-transform: translate3d(0px, 0, 0);'                                                      // 14595
                + '           transform: translate3d(0px, 0, 0);'                                                      // 14596
                + ' }'                                                                                                 // 14597
              ;                                                                                                        // 14598
            }                                                                                                          // 14599
            style += '</style>';                                                                                       // 14600
            $style = $(style)                                                                                          // 14601
              .appendTo($head)                                                                                         // 14602
            ;                                                                                                          // 14603
            module.debug('Adding sizing css to head', $style);                                                         // 14604
          }                                                                                                            // 14605
        },                                                                                                             // 14606
                                                                                                                       // 14607
        refresh: function() {                                                                                          // 14608
          module.verbose('Refreshing selector cache');                                                                 // 14609
          $context  = $(settings.context);                                                                             // 14610
          $sidebars = $context.children(selector.sidebar);                                                             // 14611
          $pusher   = $context.children(selector.pusher);                                                              // 14612
          $fixed    = $context.children(selector.fixed);                                                               // 14613
          module.clear.cache();                                                                                        // 14614
        },                                                                                                             // 14615
                                                                                                                       // 14616
        refreshSidebars: function() {                                                                                  // 14617
          module.verbose('Refreshing other sidebars');                                                                 // 14618
          $sidebars = $context.children(selector.sidebar);                                                             // 14619
        },                                                                                                             // 14620
                                                                                                                       // 14621
        repaint: function() {                                                                                          // 14622
          module.verbose('Forcing repaint event');                                                                     // 14623
          element.style.display = 'none';                                                                              // 14624
          var ignored = element.offsetHeight;                                                                          // 14625
          element.scrollTop = element.scrollTop;                                                                       // 14626
          element.style.display = '';                                                                                  // 14627
        },                                                                                                             // 14628
                                                                                                                       // 14629
        setup: {                                                                                                       // 14630
          cache: function() {                                                                                          // 14631
            module.cache = {                                                                                           // 14632
              width  : $module.outerWidth(),                                                                           // 14633
              height : $module.outerHeight(),                                                                          // 14634
              rtl    : ($module.css('direction') == 'rtl')                                                             // 14635
            };                                                                                                         // 14636
          },                                                                                                           // 14637
          layout: function() {                                                                                         // 14638
            if( $context.children(selector.pusher).length === 0 ) {                                                    // 14639
              module.debug('Adding wrapper element for sidebar');                                                      // 14640
              module.error(error.pusher);                                                                              // 14641
              $pusher = $('<div class="pusher" />');                                                                   // 14642
              $context                                                                                                 // 14643
                .children()                                                                                            // 14644
                  .not(selector.omitted)                                                                               // 14645
                  .not($sidebars)                                                                                      // 14646
                  .wrapAll($pusher)                                                                                    // 14647
              ;                                                                                                        // 14648
              module.refresh();                                                                                        // 14649
            }                                                                                                          // 14650
            if($module.nextAll(selector.pusher).length === 0 || $module.nextAll(selector.pusher)[0] !== $pusher[0]) {  // 14651
              module.debug('Moved sidebar to correct parent element');                                                 // 14652
              module.error(error.movedSidebar, element);                                                               // 14653
              $module.detach().prependTo($context);                                                                    // 14654
              module.refresh();                                                                                        // 14655
            }                                                                                                          // 14656
            module.clear.cache();                                                                                      // 14657
            module.set.pushable();                                                                                     // 14658
            module.set.direction();                                                                                    // 14659
          }                                                                                                            // 14660
        },                                                                                                             // 14661
                                                                                                                       // 14662
        attachEvents: function(selector, event) {                                                                      // 14663
          var                                                                                                          // 14664
            $toggle = $(selector)                                                                                      // 14665
          ;                                                                                                            // 14666
          event = $.isFunction(module[event])                                                                          // 14667
            ? module[event]                                                                                            // 14668
            : module.toggle                                                                                            // 14669
          ;                                                                                                            // 14670
          if($toggle.length > 0) {                                                                                     // 14671
            module.debug('Attaching sidebar events to element', selector, event);                                      // 14672
            $toggle                                                                                                    // 14673
              .on('click' + eventNamespace, event)                                                                     // 14674
            ;                                                                                                          // 14675
          }                                                                                                            // 14676
          else {                                                                                                       // 14677
            module.error(error.notFound, selector);                                                                    // 14678
          }                                                                                                            // 14679
        },                                                                                                             // 14680
                                                                                                                       // 14681
        show: function(callback) {                                                                                     // 14682
          callback = $.isFunction(callback)                                                                            // 14683
            ? callback                                                                                                 // 14684
            : function(){}                                                                                             // 14685
          ;                                                                                                            // 14686
          if(module.is.hidden()) {                                                                                     // 14687
            module.refreshSidebars();                                                                                  // 14688
            if(settings.overlay)  {                                                                                    // 14689
              module.error(error.overlay);                                                                             // 14690
              settings.transition = 'overlay';                                                                         // 14691
            }                                                                                                          // 14692
            module.refresh();                                                                                          // 14693
            if(module.othersActive()) {                                                                                // 14694
              module.debug('Other sidebars currently visible');                                                        // 14695
              if(settings.exclusive) {                                                                                 // 14696
                // if not overlay queue animation after hide                                                           // 14697
                if(settings.transition != 'overlay') {                                                                 // 14698
                  module.hideOthers(module.show);                                                                      // 14699
                  return;                                                                                              // 14700
                }                                                                                                      // 14701
                else {                                                                                                 // 14702
                  module.hideOthers();                                                                                 // 14703
                }                                                                                                      // 14704
              }                                                                                                        // 14705
              else {                                                                                                   // 14706
                settings.transition = 'overlay';                                                                       // 14707
              }                                                                                                        // 14708
            }                                                                                                          // 14709
            module.pushPage(function() {                                                                               // 14710
              callback.call(element);                                                                                  // 14711
              settings.onShow.call(element);                                                                           // 14712
            });                                                                                                        // 14713
            settings.onChange.call(element);                                                                           // 14714
            settings.onVisible.call(element);                                                                          // 14715
          }                                                                                                            // 14716
          else {                                                                                                       // 14717
            module.debug('Sidebar is already visible');                                                                // 14718
          }                                                                                                            // 14719
        },                                                                                                             // 14720
                                                                                                                       // 14721
        hide: function(callback) {                                                                                     // 14722
          callback = $.isFunction(callback)                                                                            // 14723
            ? callback                                                                                                 // 14724
            : function(){}                                                                                             // 14725
          ;                                                                                                            // 14726
          if(module.is.visible() || module.is.animating()) {                                                           // 14727
            module.debug('Hiding sidebar', callback);                                                                  // 14728
            module.refreshSidebars();                                                                                  // 14729
            module.pullPage(function() {                                                                               // 14730
              callback.call(element);                                                                                  // 14731
              settings.onHidden.call(element);                                                                         // 14732
            });                                                                                                        // 14733
            settings.onChange.call(element);                                                                           // 14734
            settings.onHide.call(element);                                                                             // 14735
          }                                                                                                            // 14736
        },                                                                                                             // 14737
                                                                                                                       // 14738
        othersAnimating: function() {                                                                                  // 14739
          return ($sidebars.not($module).filter('.' + className.animating).length > 0);                                // 14740
        },                                                                                                             // 14741
        othersVisible: function() {                                                                                    // 14742
          return ($sidebars.not($module).filter('.' + className.visible).length > 0);                                  // 14743
        },                                                                                                             // 14744
        othersActive: function() {                                                                                     // 14745
          return(module.othersVisible() || module.othersAnimating());                                                  // 14746
        },                                                                                                             // 14747
                                                                                                                       // 14748
        hideOthers: function(callback) {                                                                               // 14749
          var                                                                                                          // 14750
            $otherSidebars = $sidebars.not($module).filter('.' + className.visible),                                   // 14751
            sidebarCount   = $otherSidebars.length,                                                                    // 14752
            callbackCount  = 0                                                                                         // 14753
          ;                                                                                                            // 14754
          callback = callback || function(){};                                                                         // 14755
          $otherSidebars                                                                                               // 14756
            .sidebar('hide', function() {                                                                              // 14757
              callbackCount++;                                                                                         // 14758
              if(callbackCount == sidebarCount) {                                                                      // 14759
                callback();                                                                                            // 14760
              }                                                                                                        // 14761
            })                                                                                                         // 14762
          ;                                                                                                            // 14763
        },                                                                                                             // 14764
                                                                                                                       // 14765
        toggle: function() {                                                                                           // 14766
          module.verbose('Determining toggled direction');                                                             // 14767
          if(module.is.hidden()) {                                                                                     // 14768
            module.show();                                                                                             // 14769
          }                                                                                                            // 14770
          else {                                                                                                       // 14771
            module.hide();                                                                                             // 14772
          }                                                                                                            // 14773
        },                                                                                                             // 14774
                                                                                                                       // 14775
        pushPage: function(callback) {                                                                                 // 14776
          var                                                                                                          // 14777
            transition = module.get.transition(),                                                                      // 14778
            $transition = (transition === 'overlay' || module.othersActive())                                          // 14779
              ? $module                                                                                                // 14780
              : $pusher,                                                                                               // 14781
            animate,                                                                                                   // 14782
            dim,                                                                                                       // 14783
            transitionEnd                                                                                              // 14784
          ;                                                                                                            // 14785
          callback = $.isFunction(callback)                                                                            // 14786
            ? callback                                                                                                 // 14787
            : function(){}                                                                                             // 14788
          ;                                                                                                            // 14789
          if(settings.transition == 'scale down') {                                                                    // 14790
            module.scrollToTop();                                                                                      // 14791
          }                                                                                                            // 14792
          module.set.transition(transition);                                                                           // 14793
          module.repaint();                                                                                            // 14794
          animate = function() {                                                                                       // 14795
            module.bind.clickaway();                                                                                   // 14796
            module.add.inlineCSS();                                                                                    // 14797
            module.set.animating();                                                                                    // 14798
            module.set.visible();                                                                                      // 14799
          };                                                                                                           // 14800
          dim = function() {                                                                                           // 14801
            module.set.dimmed();                                                                                       // 14802
          };                                                                                                           // 14803
          transitionEnd = function(event) {                                                                            // 14804
            if( event.target == $transition[0] ) {                                                                     // 14805
              $transition.off(transitionEvent + elementNamespace, transitionEnd);                                      // 14806
              module.remove.animating();                                                                               // 14807
              module.bind.scrollLock();                                                                                // 14808
              callback.call(element);                                                                                  // 14809
            }                                                                                                          // 14810
          };                                                                                                           // 14811
          $transition.off(transitionEvent + elementNamespace);                                                         // 14812
          $transition.on(transitionEvent + elementNamespace, transitionEnd);                                           // 14813
          requestAnimationFrame(animate);                                                                              // 14814
          if(settings.dimPage && !module.othersVisible()) {                                                            // 14815
            requestAnimationFrame(dim);                                                                                // 14816
          }                                                                                                            // 14817
        },                                                                                                             // 14818
                                                                                                                       // 14819
        pullPage: function(callback) {                                                                                 // 14820
          var                                                                                                          // 14821
            transition = module.get.transition(),                                                                      // 14822
            $transition = (transition == 'overlay' || module.othersActive())                                           // 14823
              ? $module                                                                                                // 14824
              : $pusher,                                                                                               // 14825
            animate,                                                                                                   // 14826
            transitionEnd                                                                                              // 14827
          ;                                                                                                            // 14828
          callback = $.isFunction(callback)                                                                            // 14829
            ? callback                                                                                                 // 14830
            : function(){}                                                                                             // 14831
          ;                                                                                                            // 14832
          module.verbose('Removing context push state', module.get.direction());                                       // 14833
                                                                                                                       // 14834
          module.unbind.clickaway();                                                                                   // 14835
          module.unbind.scrollLock();                                                                                  // 14836
                                                                                                                       // 14837
          animate = function() {                                                                                       // 14838
            module.set.transition(transition);                                                                         // 14839
            module.set.animating();                                                                                    // 14840
            module.remove.visible();                                                                                   // 14841
            if(settings.dimPage && !module.othersVisible()) {                                                          // 14842
              $pusher.removeClass(className.dimmed);                                                                   // 14843
            }                                                                                                          // 14844
          };                                                                                                           // 14845
          transitionEnd = function(event) {                                                                            // 14846
            if( event.target == $transition[0] ) {                                                                     // 14847
              $transition.off(transitionEvent + elementNamespace, transitionEnd);                                      // 14848
              module.remove.animating();                                                                               // 14849
              module.remove.transition();                                                                              // 14850
              module.remove.inlineCSS();                                                                               // 14851
              if(transition == 'scale down' || (settings.returnScroll && module.is.mobile()) ) {                       // 14852
                module.scrollBack();                                                                                   // 14853
              }                                                                                                        // 14854
              callback.call(element);                                                                                  // 14855
            }                                                                                                          // 14856
          };                                                                                                           // 14857
          $transition.off(transitionEvent + elementNamespace);                                                         // 14858
          $transition.on(transitionEvent + elementNamespace, transitionEnd);                                           // 14859
          requestAnimationFrame(animate);                                                                              // 14860
        },                                                                                                             // 14861
                                                                                                                       // 14862
        scrollToTop: function() {                                                                                      // 14863
          module.verbose('Scrolling to top of page to avoid animation issues');                                        // 14864
          currentScroll = $(window).scrollTop();                                                                       // 14865
          $module.scrollTop(0);                                                                                        // 14866
          window.scrollTo(0, 0);                                                                                       // 14867
        },                                                                                                             // 14868
                                                                                                                       // 14869
        scrollBack: function() {                                                                                       // 14870
          module.verbose('Scrolling back to original page position');                                                  // 14871
          window.scrollTo(0, currentScroll);                                                                           // 14872
        },                                                                                                             // 14873
                                                                                                                       // 14874
        clear: {                                                                                                       // 14875
          cache: function() {                                                                                          // 14876
            module.verbose('Clearing cached dimensions');                                                              // 14877
            module.cache = {};                                                                                         // 14878
          }                                                                                                            // 14879
        },                                                                                                             // 14880
                                                                                                                       // 14881
        set: {                                                                                                         // 14882
                                                                                                                       // 14883
          // ios only (scroll on html not document). This prevent auto-resize canvas/scroll in ios                     // 14884
          ios: function() {                                                                                            // 14885
            $html.addClass(className.ios);                                                                             // 14886
          },                                                                                                           // 14887
                                                                                                                       // 14888
          // container                                                                                                 // 14889
          pushed: function() {                                                                                         // 14890
            $context.addClass(className.pushed);                                                                       // 14891
          },                                                                                                           // 14892
          pushable: function() {                                                                                       // 14893
            $context.addClass(className.pushable);                                                                     // 14894
          },                                                                                                           // 14895
                                                                                                                       // 14896
          // pusher                                                                                                    // 14897
          dimmed: function() {                                                                                         // 14898
            $pusher.addClass(className.dimmed);                                                                        // 14899
          },                                                                                                           // 14900
                                                                                                                       // 14901
          // sidebar                                                                                                   // 14902
          active: function() {                                                                                         // 14903
            $module.addClass(className.active);                                                                        // 14904
          },                                                                                                           // 14905
          animating: function() {                                                                                      // 14906
            $module.addClass(className.animating);                                                                     // 14907
          },                                                                                                           // 14908
          transition: function(transition) {                                                                           // 14909
            transition = transition || module.get.transition();                                                        // 14910
            $module.addClass(transition);                                                                              // 14911
          },                                                                                                           // 14912
          direction: function(direction) {                                                                             // 14913
            direction = direction || module.get.direction();                                                           // 14914
            $module.addClass(className[direction]);                                                                    // 14915
          },                                                                                                           // 14916
          visible: function() {                                                                                        // 14917
            $module.addClass(className.visible);                                                                       // 14918
          },                                                                                                           // 14919
          overlay: function() {                                                                                        // 14920
            $module.addClass(className.overlay);                                                                       // 14921
          }                                                                                                            // 14922
        },                                                                                                             // 14923
        remove: {                                                                                                      // 14924
                                                                                                                       // 14925
          inlineCSS: function() {                                                                                      // 14926
            module.debug('Removing inline css styles', $style);                                                        // 14927
            if($style && $style.length > 0) {                                                                          // 14928
              $style.remove();                                                                                         // 14929
            }                                                                                                          // 14930
          },                                                                                                           // 14931
                                                                                                                       // 14932
          // ios scroll on html not document                                                                           // 14933
          ios: function() {                                                                                            // 14934
            $html.removeClass(className.ios);                                                                          // 14935
          },                                                                                                           // 14936
                                                                                                                       // 14937
          // context                                                                                                   // 14938
          pushed: function() {                                                                                         // 14939
            $context.removeClass(className.pushed);                                                                    // 14940
          },                                                                                                           // 14941
          pushable: function() {                                                                                       // 14942
            $context.removeClass(className.pushable);                                                                  // 14943
          },                                                                                                           // 14944
                                                                                                                       // 14945
          // sidebar                                                                                                   // 14946
          active: function() {                                                                                         // 14947
            $module.removeClass(className.active);                                                                     // 14948
          },                                                                                                           // 14949
          animating: function() {                                                                                      // 14950
            $module.removeClass(className.animating);                                                                  // 14951
          },                                                                                                           // 14952
          transition: function(transition) {                                                                           // 14953
            transition = transition || module.get.transition();                                                        // 14954
            $module.removeClass(transition);                                                                           // 14955
          },                                                                                                           // 14956
          direction: function(direction) {                                                                             // 14957
            direction = direction || module.get.direction();                                                           // 14958
            $module.removeClass(className[direction]);                                                                 // 14959
          },                                                                                                           // 14960
          visible: function() {                                                                                        // 14961
            $module.removeClass(className.visible);                                                                    // 14962
          },                                                                                                           // 14963
          overlay: function() {                                                                                        // 14964
            $module.removeClass(className.overlay);                                                                    // 14965
          }                                                                                                            // 14966
        },                                                                                                             // 14967
                                                                                                                       // 14968
        get: {                                                                                                         // 14969
          direction: function() {                                                                                      // 14970
            if($module.hasClass(className.top)) {                                                                      // 14971
              return className.top;                                                                                    // 14972
            }                                                                                                          // 14973
            else if($module.hasClass(className.right)) {                                                               // 14974
              return className.right;                                                                                  // 14975
            }                                                                                                          // 14976
            else if($module.hasClass(className.bottom)) {                                                              // 14977
              return className.bottom;                                                                                 // 14978
            }                                                                                                          // 14979
            return className.left;                                                                                     // 14980
          },                                                                                                           // 14981
          transition: function() {                                                                                     // 14982
            var                                                                                                        // 14983
              direction = module.get.direction(),                                                                      // 14984
              transition                                                                                               // 14985
            ;                                                                                                          // 14986
            transition = ( module.is.mobile() )                                                                        // 14987
              ? (settings.mobileTransition == 'auto')                                                                  // 14988
                ? settings.defaultTransition.mobile[direction]                                                         // 14989
                : settings.mobileTransition                                                                            // 14990
              : (settings.transition == 'auto')                                                                        // 14991
                ? settings.defaultTransition.computer[direction]                                                       // 14992
                : settings.transition                                                                                  // 14993
            ;                                                                                                          // 14994
            module.verbose('Determined transition', transition);                                                       // 14995
            return transition;                                                                                         // 14996
          },                                                                                                           // 14997
          transitionEvent: function() {                                                                                // 14998
            var                                                                                                        // 14999
              element     = document.createElement('element'),                                                         // 15000
              transitions = {                                                                                          // 15001
                'transition'       :'transitionend',                                                                   // 15002
                'OTransition'      :'oTransitionEnd',                                                                  // 15003
                'MozTransition'    :'transitionend',                                                                   // 15004
                'WebkitTransition' :'webkitTransitionEnd'                                                              // 15005
              },                                                                                                       // 15006
              transition                                                                                               // 15007
            ;                                                                                                          // 15008
            for(transition in transitions){                                                                            // 15009
              if( element.style[transition] !== undefined ){                                                           // 15010
                return transitions[transition];                                                                        // 15011
              }                                                                                                        // 15012
            }                                                                                                          // 15013
          }                                                                                                            // 15014
        },                                                                                                             // 15015
                                                                                                                       // 15016
        is: {                                                                                                          // 15017
                                                                                                                       // 15018
          ie: function() {                                                                                             // 15019
            var                                                                                                        // 15020
              isIE11 = (!(window.ActiveXObject) && 'ActiveXObject' in window),                                         // 15021
              isIE   = ('ActiveXObject' in window)                                                                     // 15022
            ;                                                                                                          // 15023
            return (isIE11 || isIE);                                                                                   // 15024
          },                                                                                                           // 15025
                                                                                                                       // 15026
          ios: function() {                                                                                            // 15027
            var                                                                                                        // 15028
              userAgent      = navigator.userAgent,                                                                    // 15029
              isIOS          = userAgent.match(regExp.ios),                                                            // 15030
              isMobileChrome = userAgent.match(regExp.mobileChrome)                                                    // 15031
            ;                                                                                                          // 15032
            if(isIOS && !isMobileChrome) {                                                                             // 15033
              module.verbose('Browser was found to be iOS', userAgent);                                                // 15034
              return true;                                                                                             // 15035
            }                                                                                                          // 15036
            else {                                                                                                     // 15037
              return false;                                                                                            // 15038
            }                                                                                                          // 15039
          },                                                                                                           // 15040
          mobile: function() {                                                                                         // 15041
            var                                                                                                        // 15042
              userAgent    = navigator.userAgent,                                                                      // 15043
              isMobile     = userAgent.match(regExp.mobile)                                                            // 15044
            ;                                                                                                          // 15045
            if(isMobile) {                                                                                             // 15046
              module.verbose('Browser was found to be mobile', userAgent);                                             // 15047
              return true;                                                                                             // 15048
            }                                                                                                          // 15049
            else {                                                                                                     // 15050
              module.verbose('Browser is not mobile, using regular transition', userAgent);                            // 15051
              return false;                                                                                            // 15052
            }                                                                                                          // 15053
          },                                                                                                           // 15054
          hidden: function() {                                                                                         // 15055
            return !module.is.visible();                                                                               // 15056
          },                                                                                                           // 15057
          visible: function() {                                                                                        // 15058
            return $module.hasClass(className.visible);                                                                // 15059
          },                                                                                                           // 15060
          // alias                                                                                                     // 15061
          open: function() {                                                                                           // 15062
            return module.is.visible();                                                                                // 15063
          },                                                                                                           // 15064
          closed: function() {                                                                                         // 15065
            return module.is.hidden();                                                                                 // 15066
          },                                                                                                           // 15067
          vertical: function() {                                                                                       // 15068
            return $module.hasClass(className.top);                                                                    // 15069
          },                                                                                                           // 15070
          animating: function() {                                                                                      // 15071
            return $context.hasClass(className.animating);                                                             // 15072
          },                                                                                                           // 15073
          rtl: function () {                                                                                           // 15074
            if(module.cache.rtl === undefined) {                                                                       // 15075
              module.cache.rtl = ($module.css('direction') == 'rtl');                                                  // 15076
            }                                                                                                          // 15077
            return module.cache.rtl;                                                                                   // 15078
          }                                                                                                            // 15079
        },                                                                                                             // 15080
                                                                                                                       // 15081
        setting: function(name, value) {                                                                               // 15082
          module.debug('Changing setting', name, value);                                                               // 15083
          if( $.isPlainObject(name) ) {                                                                                // 15084
            $.extend(true, settings, name);                                                                            // 15085
          }                                                                                                            // 15086
          else if(value !== undefined) {                                                                               // 15087
            settings[name] = value;                                                                                    // 15088
          }                                                                                                            // 15089
          else {                                                                                                       // 15090
            return settings[name];                                                                                     // 15091
          }                                                                                                            // 15092
        },                                                                                                             // 15093
        internal: function(name, value) {                                                                              // 15094
          if( $.isPlainObject(name) ) {                                                                                // 15095
            $.extend(true, module, name);                                                                              // 15096
          }                                                                                                            // 15097
          else if(value !== undefined) {                                                                               // 15098
            module[name] = value;                                                                                      // 15099
          }                                                                                                            // 15100
          else {                                                                                                       // 15101
            return module[name];                                                                                       // 15102
          }                                                                                                            // 15103
        },                                                                                                             // 15104
        debug: function() {                                                                                            // 15105
          if(settings.debug) {                                                                                         // 15106
            if(settings.performance) {                                                                                 // 15107
              module.performance.log(arguments);                                                                       // 15108
            }                                                                                                          // 15109
            else {                                                                                                     // 15110
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 15111
              module.debug.apply(console, arguments);                                                                  // 15112
            }                                                                                                          // 15113
          }                                                                                                            // 15114
        },                                                                                                             // 15115
        verbose: function() {                                                                                          // 15116
          if(settings.verbose && settings.debug) {                                                                     // 15117
            if(settings.performance) {                                                                                 // 15118
              module.performance.log(arguments);                                                                       // 15119
            }                                                                                                          // 15120
            else {                                                                                                     // 15121
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 15122
              module.verbose.apply(console, arguments);                                                                // 15123
            }                                                                                                          // 15124
          }                                                                                                            // 15125
        },                                                                                                             // 15126
        error: function() {                                                                                            // 15127
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 15128
          module.error.apply(console, arguments);                                                                      // 15129
        },                                                                                                             // 15130
        performance: {                                                                                                 // 15131
          log: function(message) {                                                                                     // 15132
            var                                                                                                        // 15133
              currentTime,                                                                                             // 15134
              executionTime,                                                                                           // 15135
              previousTime                                                                                             // 15136
            ;                                                                                                          // 15137
            if(settings.performance) {                                                                                 // 15138
              currentTime   = new Date().getTime();                                                                    // 15139
              previousTime  = time || currentTime;                                                                     // 15140
              executionTime = currentTime - previousTime;                                                              // 15141
              time          = currentTime;                                                                             // 15142
              performance.push({                                                                                       // 15143
                'Name'           : message[0],                                                                         // 15144
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 15145
                'Element'        : element,                                                                            // 15146
                'Execution Time' : executionTime                                                                       // 15147
              });                                                                                                      // 15148
            }                                                                                                          // 15149
            clearTimeout(module.performance.timer);                                                                    // 15150
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 15151
          },                                                                                                           // 15152
          display: function() {                                                                                        // 15153
            var                                                                                                        // 15154
              title = settings.name + ':',                                                                             // 15155
              totalTime = 0                                                                                            // 15156
            ;                                                                                                          // 15157
            time = false;                                                                                              // 15158
            clearTimeout(module.performance.timer);                                                                    // 15159
            $.each(performance, function(index, data) {                                                                // 15160
              totalTime += data['Execution Time'];                                                                     // 15161
            });                                                                                                        // 15162
            title += ' ' + totalTime + 'ms';                                                                           // 15163
            if(moduleSelector) {                                                                                       // 15164
              title += ' \'' + moduleSelector + '\'';                                                                  // 15165
            }                                                                                                          // 15166
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 15167
              console.groupCollapsed(title);                                                                           // 15168
              if(console.table) {                                                                                      // 15169
                console.table(performance);                                                                            // 15170
              }                                                                                                        // 15171
              else {                                                                                                   // 15172
                $.each(performance, function(index, data) {                                                            // 15173
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 15174
                });                                                                                                    // 15175
              }                                                                                                        // 15176
              console.groupEnd();                                                                                      // 15177
            }                                                                                                          // 15178
            performance = [];                                                                                          // 15179
          }                                                                                                            // 15180
        },                                                                                                             // 15181
        invoke: function(query, passedArguments, context) {                                                            // 15182
          var                                                                                                          // 15183
            object = instance,                                                                                         // 15184
            maxDepth,                                                                                                  // 15185
            found,                                                                                                     // 15186
            response                                                                                                   // 15187
          ;                                                                                                            // 15188
          passedArguments = passedArguments || queryArguments;                                                         // 15189
          context         = element         || context;                                                                // 15190
          if(typeof query == 'string' && object !== undefined) {                                                       // 15191
            query    = query.split(/[\. ]/);                                                                           // 15192
            maxDepth = query.length - 1;                                                                               // 15193
            $.each(query, function(depth, value) {                                                                     // 15194
              var camelCaseValue = (depth != maxDepth)                                                                 // 15195
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 15196
                : query                                                                                                // 15197
              ;                                                                                                        // 15198
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 15199
                object = object[camelCaseValue];                                                                       // 15200
              }                                                                                                        // 15201
              else if( object[camelCaseValue] !== undefined ) {                                                        // 15202
                found = object[camelCaseValue];                                                                        // 15203
                return false;                                                                                          // 15204
              }                                                                                                        // 15205
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 15206
                object = object[value];                                                                                // 15207
              }                                                                                                        // 15208
              else if( object[value] !== undefined ) {                                                                 // 15209
                found = object[value];                                                                                 // 15210
                return false;                                                                                          // 15211
              }                                                                                                        // 15212
              else {                                                                                                   // 15213
                module.error(error.method, query);                                                                     // 15214
                return false;                                                                                          // 15215
              }                                                                                                        // 15216
            });                                                                                                        // 15217
          }                                                                                                            // 15218
          if ( $.isFunction( found ) ) {                                                                               // 15219
            response = found.apply(context, passedArguments);                                                          // 15220
          }                                                                                                            // 15221
          else if(found !== undefined) {                                                                               // 15222
            response = found;                                                                                          // 15223
          }                                                                                                            // 15224
          if($.isArray(returnedValue)) {                                                                               // 15225
            returnedValue.push(response);                                                                              // 15226
          }                                                                                                            // 15227
          else if(returnedValue !== undefined) {                                                                       // 15228
            returnedValue = [returnedValue, response];                                                                 // 15229
          }                                                                                                            // 15230
          else if(response !== undefined) {                                                                            // 15231
            returnedValue = response;                                                                                  // 15232
          }                                                                                                            // 15233
          return found;                                                                                                // 15234
        }                                                                                                              // 15235
      }                                                                                                                // 15236
    ;                                                                                                                  // 15237
                                                                                                                       // 15238
    if(methodInvoked) {                                                                                                // 15239
      if(instance === undefined) {                                                                                     // 15240
        module.initialize();                                                                                           // 15241
      }                                                                                                                // 15242
      module.invoke(query);                                                                                            // 15243
    }                                                                                                                  // 15244
    else {                                                                                                             // 15245
      if(instance !== undefined) {                                                                                     // 15246
        module.invoke('destroy');                                                                                      // 15247
      }                                                                                                                // 15248
      module.initialize();                                                                                             // 15249
    }                                                                                                                  // 15250
  });                                                                                                                  // 15251
                                                                                                                       // 15252
  return (returnedValue !== undefined)                                                                                 // 15253
    ? returnedValue                                                                                                    // 15254
    : this                                                                                                             // 15255
  ;                                                                                                                    // 15256
};                                                                                                                     // 15257
                                                                                                                       // 15258
$.fn.sidebar.settings = {                                                                                              // 15259
                                                                                                                       // 15260
  name              : 'Sidebar',                                                                                       // 15261
  namespace         : 'sidebar',                                                                                       // 15262
                                                                                                                       // 15263
  debug             : false,                                                                                           // 15264
  verbose           : false,                                                                                           // 15265
  performance       : true,                                                                                            // 15266
                                                                                                                       // 15267
  transition        : 'auto',                                                                                          // 15268
  mobileTransition  : 'auto',                                                                                          // 15269
                                                                                                                       // 15270
  defaultTransition : {                                                                                                // 15271
    computer: {                                                                                                        // 15272
      left   : 'uncover',                                                                                              // 15273
      right  : 'uncover',                                                                                              // 15274
      top    : 'overlay',                                                                                              // 15275
      bottom : 'overlay'                                                                                               // 15276
    },                                                                                                                 // 15277
    mobile: {                                                                                                          // 15278
      left   : 'uncover',                                                                                              // 15279
      right  : 'uncover',                                                                                              // 15280
      top    : 'overlay',                                                                                              // 15281
      bottom : 'overlay'                                                                                               // 15282
    }                                                                                                                  // 15283
  },                                                                                                                   // 15284
                                                                                                                       // 15285
  context           : 'body',                                                                                          // 15286
  exclusive         : false,                                                                                           // 15287
  closable          : true,                                                                                            // 15288
  dimPage           : true,                                                                                            // 15289
  scrollLock        : false,                                                                                           // 15290
  returnScroll      : false,                                                                                           // 15291
  delaySetup        : false,                                                                                           // 15292
                                                                                                                       // 15293
  duration          : 500,                                                                                             // 15294
                                                                                                                       // 15295
  onChange          : function(){},                                                                                    // 15296
  onShow            : function(){},                                                                                    // 15297
  onHide            : function(){},                                                                                    // 15298
                                                                                                                       // 15299
  onHidden          : function(){},                                                                                    // 15300
  onVisible         : function(){},                                                                                    // 15301
                                                                                                                       // 15302
  className         : {                                                                                                // 15303
    active    : 'active',                                                                                              // 15304
    animating : 'animating',                                                                                           // 15305
    dimmed    : 'dimmed',                                                                                              // 15306
    ios       : 'ios',                                                                                                 // 15307
    pushable  : 'pushable',                                                                                            // 15308
    pushed    : 'pushed',                                                                                              // 15309
    right     : 'right',                                                                                               // 15310
    top       : 'top',                                                                                                 // 15311
    left      : 'left',                                                                                                // 15312
    bottom    : 'bottom',                                                                                              // 15313
    visible   : 'visible'                                                                                              // 15314
  },                                                                                                                   // 15315
                                                                                                                       // 15316
  selector: {                                                                                                          // 15317
    fixed   : '.fixed',                                                                                                // 15318
    omitted : 'script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed',                                        // 15319
    pusher  : '.pusher',                                                                                               // 15320
    sidebar : '.ui.sidebar'                                                                                            // 15321
  },                                                                                                                   // 15322
                                                                                                                       // 15323
  regExp: {                                                                                                            // 15324
    ios          : /(iPad|iPhone|iPod)/g,                                                                              // 15325
    mobileChrome : /(CriOS)/g,                                                                                         // 15326
    mobile       : /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g
  },                                                                                                                   // 15328
                                                                                                                       // 15329
  error   : {                                                                                                          // 15330
    method       : 'The method you called is not defined.',                                                            // 15331
    pusher       : 'Had to add pusher element. For optimal performance make sure body content is inside a pusher element',
    movedSidebar : 'Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag',
    overlay      : 'The overlay setting is no longer supported, use animation: overlay',                               // 15334
    notFound     : 'There were no elements that matched the specified selector'                                        // 15335
  }                                                                                                                    // 15336
                                                                                                                       // 15337
};                                                                                                                     // 15338
                                                                                                                       // 15339
                                                                                                                       // 15340
})( jQuery, window , document );                                                                                       // 15341
                                                                                                                       // 15342
/*!                                                                                                                    // 15343
 * # Semantic UI 2.1.2 - Sticky                                                                                        // 15344
 * http://github.com/semantic-org/semantic-ui/                                                                         // 15345
 *                                                                                                                     // 15346
 *                                                                                                                     // 15347
 * Copyright 2015 Contributors                                                                                         // 15348
 * Released under the MIT license                                                                                      // 15349
 * http://opensource.org/licenses/MIT                                                                                  // 15350
 *                                                                                                                     // 15351
 */                                                                                                                    // 15352
                                                                                                                       // 15353
;(function ( $, window, document, undefined ) {                                                                        // 15354
                                                                                                                       // 15355
"use strict";                                                                                                          // 15356
                                                                                                                       // 15357
$.fn.sticky = function(parameters) {                                                                                   // 15358
  var                                                                                                                  // 15359
    $allModules    = $(this),                                                                                          // 15360
    moduleSelector = $allModules.selector || '',                                                                       // 15361
                                                                                                                       // 15362
    time           = new Date().getTime(),                                                                             // 15363
    performance    = [],                                                                                               // 15364
                                                                                                                       // 15365
    query          = arguments[0],                                                                                     // 15366
    methodInvoked  = (typeof query == 'string'),                                                                       // 15367
    queryArguments = [].slice.call(arguments, 1),                                                                      // 15368
    returnedValue                                                                                                      // 15369
  ;                                                                                                                    // 15370
                                                                                                                       // 15371
  $allModules                                                                                                          // 15372
    .each(function() {                                                                                                 // 15373
      var                                                                                                              // 15374
        settings              = ( $.isPlainObject(parameters) )                                                        // 15375
          ? $.extend(true, {}, $.fn.sticky.settings, parameters)                                                       // 15376
          : $.extend({}, $.fn.sticky.settings),                                                                        // 15377
                                                                                                                       // 15378
        className             = settings.className,                                                                    // 15379
        namespace             = settings.namespace,                                                                    // 15380
        error                 = settings.error,                                                                        // 15381
                                                                                                                       // 15382
        eventNamespace        = '.' + namespace,                                                                       // 15383
        moduleNamespace       = 'module-' + namespace,                                                                 // 15384
                                                                                                                       // 15385
        $module               = $(this),                                                                               // 15386
        $window               = $(window),                                                                             // 15387
        $scroll               = $(settings.scrollContext),                                                             // 15388
        $container,                                                                                                    // 15389
        $context,                                                                                                      // 15390
                                                                                                                       // 15391
        selector              = $module.selector || '',                                                                // 15392
        instance              = $module.data(moduleNamespace),                                                         // 15393
                                                                                                                       // 15394
        requestAnimationFrame = window.requestAnimationFrame                                                           // 15395
          || window.mozRequestAnimationFrame                                                                           // 15396
          || window.webkitRequestAnimationFrame                                                                        // 15397
          || window.msRequestAnimationFrame                                                                            // 15398
          || function(callback) { setTimeout(callback, 0); },                                                          // 15399
                                                                                                                       // 15400
        element         = this,                                                                                        // 15401
        observer,                                                                                                      // 15402
        module                                                                                                         // 15403
      ;                                                                                                                // 15404
                                                                                                                       // 15405
      module      = {                                                                                                  // 15406
                                                                                                                       // 15407
        initialize: function() {                                                                                       // 15408
                                                                                                                       // 15409
          module.determineContainer();                                                                                 // 15410
          module.determineContext();                                                                                   // 15411
          module.verbose('Initializing sticky', settings, $container);                                                 // 15412
                                                                                                                       // 15413
          module.save.positions();                                                                                     // 15414
          module.checkErrors();                                                                                        // 15415
          module.bind.events();                                                                                        // 15416
                                                                                                                       // 15417
          if(settings.observeChanges) {                                                                                // 15418
            module.observeChanges();                                                                                   // 15419
          }                                                                                                            // 15420
          module.instantiate();                                                                                        // 15421
        },                                                                                                             // 15422
                                                                                                                       // 15423
        instantiate: function() {                                                                                      // 15424
          module.verbose('Storing instance of module', module);                                                        // 15425
          instance = module;                                                                                           // 15426
          $module                                                                                                      // 15427
            .data(moduleNamespace, module)                                                                             // 15428
          ;                                                                                                            // 15429
        },                                                                                                             // 15430
                                                                                                                       // 15431
        destroy: function() {                                                                                          // 15432
          module.verbose('Destroying previous instance');                                                              // 15433
          module.reset();                                                                                              // 15434
          if(observer) {                                                                                               // 15435
            observer.disconnect();                                                                                     // 15436
          }                                                                                                            // 15437
          $window                                                                                                      // 15438
            .off('load' + eventNamespace, module.event.load)                                                           // 15439
            .off('resize' + eventNamespace, module.event.resize)                                                       // 15440
          ;                                                                                                            // 15441
          $scroll                                                                                                      // 15442
            .off('scrollchange' + eventNamespace, module.event.scrollchange)                                           // 15443
          ;                                                                                                            // 15444
          $module.removeData(moduleNamespace);                                                                         // 15445
        },                                                                                                             // 15446
                                                                                                                       // 15447
        observeChanges: function() {                                                                                   // 15448
          var                                                                                                          // 15449
            context = $context[0]                                                                                      // 15450
          ;                                                                                                            // 15451
          if('MutationObserver' in window) {                                                                           // 15452
            observer = new MutationObserver(function(mutations) {                                                      // 15453
              clearTimeout(module.timer);                                                                              // 15454
              module.timer = setTimeout(function() {                                                                   // 15455
                module.verbose('DOM tree modified, updating sticky menu', mutations);                                  // 15456
                module.refresh();                                                                                      // 15457
              }, 100);                                                                                                 // 15458
            });                                                                                                        // 15459
            observer.observe(element, {                                                                                // 15460
              childList : true,                                                                                        // 15461
              subtree   : true                                                                                         // 15462
            });                                                                                                        // 15463
            observer.observe(context, {                                                                                // 15464
              childList : true,                                                                                        // 15465
              subtree   : true                                                                                         // 15466
            });                                                                                                        // 15467
            module.debug('Setting up mutation observer', observer);                                                    // 15468
          }                                                                                                            // 15469
        },                                                                                                             // 15470
                                                                                                                       // 15471
        determineContainer: function() {                                                                               // 15472
          $container = $module.offsetParent();                                                                         // 15473
        },                                                                                                             // 15474
                                                                                                                       // 15475
        determineContext: function() {                                                                                 // 15476
          if(settings.context) {                                                                                       // 15477
            $context = $(settings.context);                                                                            // 15478
          }                                                                                                            // 15479
          else {                                                                                                       // 15480
            $context = $container;                                                                                     // 15481
          }                                                                                                            // 15482
          if($context.length === 0) {                                                                                  // 15483
            module.error(error.invalidContext, settings.context, $module);                                             // 15484
            return;                                                                                                    // 15485
          }                                                                                                            // 15486
        },                                                                                                             // 15487
                                                                                                                       // 15488
        checkErrors: function() {                                                                                      // 15489
          if( module.is.hidden() ) {                                                                                   // 15490
            module.error(error.visible, $module);                                                                      // 15491
          }                                                                                                            // 15492
          if(module.cache.element.height > module.cache.context.height) {                                              // 15493
            module.reset();                                                                                            // 15494
            module.error(error.elementSize, $module);                                                                  // 15495
            return;                                                                                                    // 15496
          }                                                                                                            // 15497
        },                                                                                                             // 15498
                                                                                                                       // 15499
        bind: {                                                                                                        // 15500
          events: function() {                                                                                         // 15501
            $window                                                                                                    // 15502
              .on('load' + eventNamespace, module.event.load)                                                          // 15503
              .on('resize' + eventNamespace, module.event.resize)                                                      // 15504
            ;                                                                                                          // 15505
            // pub/sub pattern                                                                                         // 15506
            $scroll                                                                                                    // 15507
              .off('scroll' + eventNamespace)                                                                          // 15508
              .on('scroll' + eventNamespace, module.event.scroll)                                                      // 15509
              .on('scrollchange' + eventNamespace, module.event.scrollchange)                                          // 15510
            ;                                                                                                          // 15511
          }                                                                                                            // 15512
        },                                                                                                             // 15513
                                                                                                                       // 15514
        event: {                                                                                                       // 15515
          load: function() {                                                                                           // 15516
            module.verbose('Page contents finished loading');                                                          // 15517
            requestAnimationFrame(module.refresh);                                                                     // 15518
          },                                                                                                           // 15519
          resize: function() {                                                                                         // 15520
            module.verbose('Window resized');                                                                          // 15521
            requestAnimationFrame(module.refresh);                                                                     // 15522
          },                                                                                                           // 15523
          scroll: function() {                                                                                         // 15524
            requestAnimationFrame(function() {                                                                         // 15525
              $scroll.triggerHandler('scrollchange' + eventNamespace, $scroll.scrollTop() );                           // 15526
            });                                                                                                        // 15527
          },                                                                                                           // 15528
          scrollchange: function(event, scrollPosition) {                                                              // 15529
            module.stick(scrollPosition);                                                                              // 15530
            settings.onScroll.call(element);                                                                           // 15531
          }                                                                                                            // 15532
        },                                                                                                             // 15533
                                                                                                                       // 15534
        refresh: function(hardRefresh) {                                                                               // 15535
          module.reset();                                                                                              // 15536
          if(!settings.context) {                                                                                      // 15537
            module.determineContext();                                                                                 // 15538
          }                                                                                                            // 15539
          if(hardRefresh) {                                                                                            // 15540
            module.determineContainer();                                                                               // 15541
          }                                                                                                            // 15542
          module.save.positions();                                                                                     // 15543
          module.stick();                                                                                              // 15544
          settings.onReposition.call(element);                                                                         // 15545
        },                                                                                                             // 15546
                                                                                                                       // 15547
        supports: {                                                                                                    // 15548
          sticky: function() {                                                                                         // 15549
            var                                                                                                        // 15550
              $element = $('<div/>'),                                                                                  // 15551
              element = $element[0]                                                                                    // 15552
            ;                                                                                                          // 15553
            $element.addClass(className.supported);                                                                    // 15554
            return($element.css('position').match('sticky'));                                                          // 15555
          }                                                                                                            // 15556
        },                                                                                                             // 15557
                                                                                                                       // 15558
        save: {                                                                                                        // 15559
          lastScroll: function(scroll) {                                                                               // 15560
            module.lastScroll = scroll;                                                                                // 15561
          },                                                                                                           // 15562
          elementScroll: function(scroll) {                                                                            // 15563
            module.elementScroll = scroll;                                                                             // 15564
          },                                                                                                           // 15565
          positions: function() {                                                                                      // 15566
            var                                                                                                        // 15567
              window = {                                                                                               // 15568
                height: $window.height()                                                                               // 15569
              },                                                                                                       // 15570
              element = {                                                                                              // 15571
                margin: {                                                                                              // 15572
                  top    : parseInt($module.css('margin-top'), 10),                                                    // 15573
                  bottom : parseInt($module.css('margin-bottom'), 10),                                                 // 15574
                },                                                                                                     // 15575
                offset : $module.offset(),                                                                             // 15576
                width  : $module.outerWidth(),                                                                         // 15577
                height : $module.outerHeight()                                                                         // 15578
              },                                                                                                       // 15579
              context = {                                                                                              // 15580
                offset        : $context.offset(),                                                                     // 15581
                height        : $context.outerHeight()                                                                 // 15582
              },                                                                                                       // 15583
              container = {                                                                                            // 15584
                height: $container.outerHeight()                                                                       // 15585
              }                                                                                                        // 15586
            ;                                                                                                          // 15587
            module.cache = {                                                                                           // 15588
              fits : ( element.height < window.height ),                                                               // 15589
              window: {                                                                                                // 15590
                height: window.height                                                                                  // 15591
              },                                                                                                       // 15592
              element: {                                                                                               // 15593
                margin : element.margin,                                                                               // 15594
                top    : element.offset.top - element.margin.top,                                                      // 15595
                left   : element.offset.left,                                                                          // 15596
                width  : element.width,                                                                                // 15597
                height : element.height,                                                                               // 15598
                bottom : element.offset.top + element.height                                                           // 15599
              },                                                                                                       // 15600
              context: {                                                                                               // 15601
                top           : context.offset.top,                                                                    // 15602
                height        : context.height,                                                                        // 15603
                bottom        : context.offset.top + context.height                                                    // 15604
              }                                                                                                        // 15605
            };                                                                                                         // 15606
            module.set.containerSize();                                                                                // 15607
            module.set.size();                                                                                         // 15608
            module.stick();                                                                                            // 15609
            module.debug('Caching element positions', module.cache);                                                   // 15610
          }                                                                                                            // 15611
        },                                                                                                             // 15612
                                                                                                                       // 15613
        get: {                                                                                                         // 15614
          direction: function(scroll) {                                                                                // 15615
            var                                                                                                        // 15616
              direction = 'down'                                                                                       // 15617
            ;                                                                                                          // 15618
            scroll = scroll || $scroll.scrollTop();                                                                    // 15619
            if(module.lastScroll !== undefined) {                                                                      // 15620
              if(module.lastScroll < scroll) {                                                                         // 15621
                direction = 'down';                                                                                    // 15622
              }                                                                                                        // 15623
              else if(module.lastScroll > scroll) {                                                                    // 15624
                direction = 'up';                                                                                      // 15625
              }                                                                                                        // 15626
            }                                                                                                          // 15627
            return direction;                                                                                          // 15628
          },                                                                                                           // 15629
          scrollChange: function(scroll) {                                                                             // 15630
            scroll = scroll || $scroll.scrollTop();                                                                    // 15631
            return (module.lastScroll)                                                                                 // 15632
              ? (scroll - module.lastScroll)                                                                           // 15633
              : 0                                                                                                      // 15634
            ;                                                                                                          // 15635
          },                                                                                                           // 15636
          currentElementScroll: function() {                                                                           // 15637
            if(module.elementScroll) {                                                                                 // 15638
              return module.elementScroll;                                                                             // 15639
            }                                                                                                          // 15640
            return ( module.is.top() )                                                                                 // 15641
              ? Math.abs(parseInt($module.css('top'), 10))    || 0                                                     // 15642
              : Math.abs(parseInt($module.css('bottom'), 10)) || 0                                                     // 15643
            ;                                                                                                          // 15644
          },                                                                                                           // 15645
                                                                                                                       // 15646
          elementScroll: function(scroll) {                                                                            // 15647
            scroll = scroll || $scroll.scrollTop();                                                                    // 15648
            var                                                                                                        // 15649
              element        = module.cache.element,                                                                   // 15650
              window         = module.cache.window,                                                                    // 15651
              delta          = module.get.scrollChange(scroll),                                                        // 15652
              maxScroll      = (element.height - window.height + settings.offset),                                     // 15653
              elementScroll  = module.get.currentElementScroll(),                                                      // 15654
              possibleScroll = (elementScroll + delta)                                                                 // 15655
            ;                                                                                                          // 15656
            if(module.cache.fits || possibleScroll < 0) {                                                              // 15657
              elementScroll = 0;                                                                                       // 15658
            }                                                                                                          // 15659
            else if(possibleScroll > maxScroll ) {                                                                     // 15660
              elementScroll = maxScroll;                                                                               // 15661
            }                                                                                                          // 15662
            else {                                                                                                     // 15663
              elementScroll = possibleScroll;                                                                          // 15664
            }                                                                                                          // 15665
            return elementScroll;                                                                                      // 15666
          }                                                                                                            // 15667
        },                                                                                                             // 15668
                                                                                                                       // 15669
        remove: {                                                                                                      // 15670
          lastScroll: function() {                                                                                     // 15671
            delete module.lastScroll;                                                                                  // 15672
          },                                                                                                           // 15673
          elementScroll: function(scroll) {                                                                            // 15674
            delete module.elementScroll;                                                                               // 15675
          },                                                                                                           // 15676
          offset: function() {                                                                                         // 15677
            $module.css('margin-top', '');                                                                             // 15678
          }                                                                                                            // 15679
        },                                                                                                             // 15680
                                                                                                                       // 15681
        set: {                                                                                                         // 15682
          offset: function() {                                                                                         // 15683
            module.verbose('Setting offset on element', settings.offset);                                              // 15684
            $module                                                                                                    // 15685
              .css('margin-top', settings.offset)                                                                      // 15686
            ;                                                                                                          // 15687
          },                                                                                                           // 15688
          containerSize: function() {                                                                                  // 15689
            var                                                                                                        // 15690
              tagName = $container.get(0).tagName                                                                      // 15691
            ;                                                                                                          // 15692
            if(tagName === 'HTML' || tagName == 'body') {                                                              // 15693
              // this can trigger for too many reasons                                                                 // 15694
              //module.error(error.container, tagName, $module);                                                       // 15695
              module.determineContainer();                                                                             // 15696
            }                                                                                                          // 15697
            else {                                                                                                     // 15698
              if( Math.abs($container.outerHeight() - module.cache.context.height) > settings.jitter) {                // 15699
                module.debug('Context has padding, specifying exact height for container', module.cache.context.height);
                $container.css({                                                                                       // 15701
                  height: module.cache.context.height                                                                  // 15702
                });                                                                                                    // 15703
              }                                                                                                        // 15704
            }                                                                                                          // 15705
          },                                                                                                           // 15706
          minimumSize: function() {                                                                                    // 15707
            var                                                                                                        // 15708
              element   = module.cache.element                                                                         // 15709
            ;                                                                                                          // 15710
            $container                                                                                                 // 15711
              .css('min-height', element.height)                                                                       // 15712
            ;                                                                                                          // 15713
          },                                                                                                           // 15714
          scroll: function(scroll) {                                                                                   // 15715
            module.debug('Setting scroll on element', scroll);                                                         // 15716
            if(module.elementScroll == scroll) {                                                                       // 15717
              return;                                                                                                  // 15718
            }                                                                                                          // 15719
            if( module.is.top() ) {                                                                                    // 15720
              $module                                                                                                  // 15721
                .css('bottom', '')                                                                                     // 15722
                .css('top', -scroll)                                                                                   // 15723
              ;                                                                                                        // 15724
            }                                                                                                          // 15725
            if( module.is.bottom() ) {                                                                                 // 15726
              $module                                                                                                  // 15727
                .css('top', '')                                                                                        // 15728
                .css('bottom', scroll)                                                                                 // 15729
              ;                                                                                                        // 15730
            }                                                                                                          // 15731
          },                                                                                                           // 15732
          size: function() {                                                                                           // 15733
            if(module.cache.element.height !== 0 && module.cache.element.width !== 0) {                                // 15734
              element.style.setProperty('width',  module.cache.element.width  + 'px', 'important');                    // 15735
              element.style.setProperty('height', module.cache.element.height + 'px', 'important');                    // 15736
            }                                                                                                          // 15737
          }                                                                                                            // 15738
        },                                                                                                             // 15739
                                                                                                                       // 15740
        is: {                                                                                                          // 15741
          top: function() {                                                                                            // 15742
            return $module.hasClass(className.top);                                                                    // 15743
          },                                                                                                           // 15744
          bottom: function() {                                                                                         // 15745
            return $module.hasClass(className.bottom);                                                                 // 15746
          },                                                                                                           // 15747
          initialPosition: function() {                                                                                // 15748
            return (!module.is.fixed() && !module.is.bound());                                                         // 15749
          },                                                                                                           // 15750
          hidden: function() {                                                                                         // 15751
            return (!$module.is(':visible'));                                                                          // 15752
          },                                                                                                           // 15753
          bound: function() {                                                                                          // 15754
            return $module.hasClass(className.bound);                                                                  // 15755
          },                                                                                                           // 15756
          fixed: function() {                                                                                          // 15757
            return $module.hasClass(className.fixed);                                                                  // 15758
          }                                                                                                            // 15759
        },                                                                                                             // 15760
                                                                                                                       // 15761
        stick: function(scroll) {                                                                                      // 15762
          var                                                                                                          // 15763
            cachedPosition = scroll || $scroll.scrollTop(),                                                            // 15764
            cache          = module.cache,                                                                             // 15765
            fits           = cache.fits,                                                                               // 15766
            element        = cache.element,                                                                            // 15767
            window         = cache.window,                                                                             // 15768
            context        = cache.context,                                                                            // 15769
            offset         = (module.is.bottom() && settings.pushing)                                                  // 15770
              ? settings.bottomOffset                                                                                  // 15771
              : settings.offset,                                                                                       // 15772
            scroll         = {                                                                                         // 15773
              top    : cachedPosition + offset,                                                                        // 15774
              bottom : cachedPosition + offset + window.height                                                         // 15775
            },                                                                                                         // 15776
            direction      = module.get.direction(scroll.top),                                                         // 15777
            elementScroll  = (fits)                                                                                    // 15778
              ? 0                                                                                                      // 15779
              : module.get.elementScroll(scroll.top),                                                                  // 15780
                                                                                                                       // 15781
            // shorthand                                                                                               // 15782
            doesntFit      = !fits,                                                                                    // 15783
            elementVisible = (element.height !== 0)                                                                    // 15784
          ;                                                                                                            // 15785
                                                                                                                       // 15786
          if(elementVisible) {                                                                                         // 15787
                                                                                                                       // 15788
            if( module.is.initialPosition() ) {                                                                        // 15789
              if(scroll.top >= context.bottom) {                                                                       // 15790
                module.debug('Initial element position is bottom of container');                                       // 15791
                module.bindBottom();                                                                                   // 15792
              }                                                                                                        // 15793
              else if(scroll.top > element.top) {                                                                      // 15794
                if( (element.height + scroll.top - elementScroll) >= context.bottom ) {                                // 15795
                  module.debug('Initial element position is bottom of container');                                     // 15796
                  module.bindBottom();                                                                                 // 15797
                }                                                                                                      // 15798
                else {                                                                                                 // 15799
                  module.debug('Initial element position is fixed');                                                   // 15800
                  module.fixTop();                                                                                     // 15801
                }                                                                                                      // 15802
              }                                                                                                        // 15803
                                                                                                                       // 15804
            }                                                                                                          // 15805
            else if( module.is.fixed() ) {                                                                             // 15806
                                                                                                                       // 15807
              // currently fixed top                                                                                   // 15808
              if( module.is.top() ) {                                                                                  // 15809
                if( scroll.top <= element.top ) {                                                                      // 15810
                  module.debug('Fixed element reached top of container');                                              // 15811
                  module.setInitialPosition();                                                                         // 15812
                }                                                                                                      // 15813
                else if( (element.height + scroll.top - elementScroll) >= context.bottom ) {                           // 15814
                  module.debug('Fixed element reached bottom of container');                                           // 15815
                  module.bindBottom();                                                                                 // 15816
                }                                                                                                      // 15817
                // scroll element if larger than screen                                                                // 15818
                else if(doesntFit) {                                                                                   // 15819
                  module.set.scroll(elementScroll);                                                                    // 15820
                  module.save.lastScroll(scroll.top);                                                                  // 15821
                  module.save.elementScroll(elementScroll);                                                            // 15822
                }                                                                                                      // 15823
              }                                                                                                        // 15824
                                                                                                                       // 15825
              // currently fixed bottom                                                                                // 15826
              else if(module.is.bottom() ) {                                                                           // 15827
                                                                                                                       // 15828
                // top edge                                                                                            // 15829
                if( (scroll.bottom - element.height) <= element.top) {                                                 // 15830
                  module.debug('Bottom fixed rail has reached top of container');                                      // 15831
                  module.setInitialPosition();                                                                         // 15832
                }                                                                                                      // 15833
                // bottom edge                                                                                         // 15834
                else if(scroll.bottom >= context.bottom) {                                                             // 15835
                  module.debug('Bottom fixed rail has reached bottom of container');                                   // 15836
                  module.bindBottom();                                                                                 // 15837
                }                                                                                                      // 15838
                // scroll element if larger than screen                                                                // 15839
                else if(doesntFit) {                                                                                   // 15840
                  module.set.scroll(elementScroll);                                                                    // 15841
                  module.save.lastScroll(scroll.top);                                                                  // 15842
                  module.save.elementScroll(elementScroll);                                                            // 15843
                }                                                                                                      // 15844
                                                                                                                       // 15845
              }                                                                                                        // 15846
            }                                                                                                          // 15847
            else if( module.is.bottom() ) {                                                                            // 15848
              if(settings.pushing) {                                                                                   // 15849
                if(module.is.bound() && scroll.bottom <= context.bottom ) {                                            // 15850
                  module.debug('Fixing bottom attached element to bottom of browser.');                                // 15851
                  module.fixBottom();                                                                                  // 15852
                }                                                                                                      // 15853
              }                                                                                                        // 15854
              else {                                                                                                   // 15855
                if(module.is.bound() && (scroll.top <= context.bottom - element.height) ) {                            // 15856
                  module.debug('Fixing bottom attached element to top of browser.');                                   // 15857
                  module.fixTop();                                                                                     // 15858
                }                                                                                                      // 15859
              }                                                                                                        // 15860
            }                                                                                                          // 15861
          }                                                                                                            // 15862
        },                                                                                                             // 15863
                                                                                                                       // 15864
        bindTop: function() {                                                                                          // 15865
          module.debug('Binding element to top of parent container');                                                  // 15866
          module.remove.offset();                                                                                      // 15867
          $module                                                                                                      // 15868
            .css({                                                                                                     // 15869
              left         : '',                                                                                       // 15870
              top          : '',                                                                                       // 15871
              marginBottom : ''                                                                                        // 15872
            })                                                                                                         // 15873
            .removeClass(className.fixed)                                                                              // 15874
            .removeClass(className.bottom)                                                                             // 15875
            .addClass(className.bound)                                                                                 // 15876
            .addClass(className.top)                                                                                   // 15877
          ;                                                                                                            // 15878
          settings.onTop.call(element);                                                                                // 15879
          settings.onUnstick.call(element);                                                                            // 15880
        },                                                                                                             // 15881
        bindBottom: function() {                                                                                       // 15882
          module.debug('Binding element to bottom of parent container');                                               // 15883
          module.remove.offset();                                                                                      // 15884
          $module                                                                                                      // 15885
            .css({                                                                                                     // 15886
              left         : '',                                                                                       // 15887
              top          : ''                                                                                        // 15888
            })                                                                                                         // 15889
            .removeClass(className.fixed)                                                                              // 15890
            .removeClass(className.top)                                                                                // 15891
            .addClass(className.bound)                                                                                 // 15892
            .addClass(className.bottom)                                                                                // 15893
          ;                                                                                                            // 15894
          settings.onBottom.call(element);                                                                             // 15895
          settings.onUnstick.call(element);                                                                            // 15896
        },                                                                                                             // 15897
                                                                                                                       // 15898
        setInitialPosition: function() {                                                                               // 15899
          module.debug('Returning to initial position');                                                               // 15900
          module.unfix();                                                                                              // 15901
          module.unbind();                                                                                             // 15902
        },                                                                                                             // 15903
                                                                                                                       // 15904
                                                                                                                       // 15905
        fixTop: function() {                                                                                           // 15906
          module.debug('Fixing element to top of page');                                                               // 15907
          module.set.minimumSize();                                                                                    // 15908
          module.set.offset();                                                                                         // 15909
          $module                                                                                                      // 15910
            .css({                                                                                                     // 15911
              left         : module.cache.element.left,                                                                // 15912
              bottom       : '',                                                                                       // 15913
              marginBottom : ''                                                                                        // 15914
            })                                                                                                         // 15915
            .removeClass(className.bound)                                                                              // 15916
            .removeClass(className.bottom)                                                                             // 15917
            .addClass(className.fixed)                                                                                 // 15918
            .addClass(className.top)                                                                                   // 15919
          ;                                                                                                            // 15920
          settings.onStick.call(element);                                                                              // 15921
        },                                                                                                             // 15922
                                                                                                                       // 15923
        fixBottom: function() {                                                                                        // 15924
          module.debug('Sticking element to bottom of page');                                                          // 15925
          module.set.minimumSize();                                                                                    // 15926
          module.set.offset();                                                                                         // 15927
          $module                                                                                                      // 15928
            .css({                                                                                                     // 15929
              left         : module.cache.element.left,                                                                // 15930
              bottom       : '',                                                                                       // 15931
              marginBottom : ''                                                                                        // 15932
            })                                                                                                         // 15933
            .removeClass(className.bound)                                                                              // 15934
            .removeClass(className.top)                                                                                // 15935
            .addClass(className.fixed)                                                                                 // 15936
            .addClass(className.bottom)                                                                                // 15937
          ;                                                                                                            // 15938
          settings.onStick.call(element);                                                                              // 15939
        },                                                                                                             // 15940
                                                                                                                       // 15941
        unbind: function() {                                                                                           // 15942
          if( module.is.bound() ) {                                                                                    // 15943
            module.debug('Removing container bound position on element');                                              // 15944
            module.remove.offset();                                                                                    // 15945
            $module                                                                                                    // 15946
              .removeClass(className.bound)                                                                            // 15947
              .removeClass(className.top)                                                                              // 15948
              .removeClass(className.bottom)                                                                           // 15949
            ;                                                                                                          // 15950
          }                                                                                                            // 15951
        },                                                                                                             // 15952
                                                                                                                       // 15953
        unfix: function() {                                                                                            // 15954
          if( module.is.fixed() ) {                                                                                    // 15955
            module.debug('Removing fixed position on element');                                                        // 15956
            module.remove.offset();                                                                                    // 15957
            $module                                                                                                    // 15958
              .removeClass(className.fixed)                                                                            // 15959
              .removeClass(className.top)                                                                              // 15960
              .removeClass(className.bottom)                                                                           // 15961
            ;                                                                                                          // 15962
            settings.onUnstick.call(element);                                                                          // 15963
          }                                                                                                            // 15964
        },                                                                                                             // 15965
                                                                                                                       // 15966
        reset: function() {                                                                                            // 15967
          module.debug('Reseting elements position');                                                                  // 15968
          module.unbind();                                                                                             // 15969
          module.unfix();                                                                                              // 15970
          module.resetCSS();                                                                                           // 15971
          module.remove.offset();                                                                                      // 15972
          module.remove.lastScroll();                                                                                  // 15973
        },                                                                                                             // 15974
                                                                                                                       // 15975
        resetCSS: function() {                                                                                         // 15976
          $module                                                                                                      // 15977
            .css({                                                                                                     // 15978
              width  : '',                                                                                             // 15979
              height : ''                                                                                              // 15980
            })                                                                                                         // 15981
          ;                                                                                                            // 15982
          $container                                                                                                   // 15983
            .css({                                                                                                     // 15984
              height: ''                                                                                               // 15985
            })                                                                                                         // 15986
          ;                                                                                                            // 15987
        },                                                                                                             // 15988
                                                                                                                       // 15989
        setting: function(name, value) {                                                                               // 15990
          if( $.isPlainObject(name) ) {                                                                                // 15991
            $.extend(true, settings, name);                                                                            // 15992
          }                                                                                                            // 15993
          else if(value !== undefined) {                                                                               // 15994
            settings[name] = value;                                                                                    // 15995
          }                                                                                                            // 15996
          else {                                                                                                       // 15997
            return settings[name];                                                                                     // 15998
          }                                                                                                            // 15999
        },                                                                                                             // 16000
        internal: function(name, value) {                                                                              // 16001
          if( $.isPlainObject(name) ) {                                                                                // 16002
            $.extend(true, module, name);                                                                              // 16003
          }                                                                                                            // 16004
          else if(value !== undefined) {                                                                               // 16005
            module[name] = value;                                                                                      // 16006
          }                                                                                                            // 16007
          else {                                                                                                       // 16008
            return module[name];                                                                                       // 16009
          }                                                                                                            // 16010
        },                                                                                                             // 16011
        debug: function() {                                                                                            // 16012
          if(settings.debug) {                                                                                         // 16013
            if(settings.performance) {                                                                                 // 16014
              module.performance.log(arguments);                                                                       // 16015
            }                                                                                                          // 16016
            else {                                                                                                     // 16017
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 16018
              module.debug.apply(console, arguments);                                                                  // 16019
            }                                                                                                          // 16020
          }                                                                                                            // 16021
        },                                                                                                             // 16022
        verbose: function() {                                                                                          // 16023
          if(settings.verbose && settings.debug) {                                                                     // 16024
            if(settings.performance) {                                                                                 // 16025
              module.performance.log(arguments);                                                                       // 16026
            }                                                                                                          // 16027
            else {                                                                                                     // 16028
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 16029
              module.verbose.apply(console, arguments);                                                                // 16030
            }                                                                                                          // 16031
          }                                                                                                            // 16032
        },                                                                                                             // 16033
        error: function() {                                                                                            // 16034
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 16035
          module.error.apply(console, arguments);                                                                      // 16036
        },                                                                                                             // 16037
        performance: {                                                                                                 // 16038
          log: function(message) {                                                                                     // 16039
            var                                                                                                        // 16040
              currentTime,                                                                                             // 16041
              executionTime,                                                                                           // 16042
              previousTime                                                                                             // 16043
            ;                                                                                                          // 16044
            if(settings.performance) {                                                                                 // 16045
              currentTime   = new Date().getTime();                                                                    // 16046
              previousTime  = time || currentTime;                                                                     // 16047
              executionTime = currentTime - previousTime;                                                              // 16048
              time          = currentTime;                                                                             // 16049
              performance.push({                                                                                       // 16050
                'Name'           : message[0],                                                                         // 16051
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 16052
                'Element'        : element,                                                                            // 16053
                'Execution Time' : executionTime                                                                       // 16054
              });                                                                                                      // 16055
            }                                                                                                          // 16056
            clearTimeout(module.performance.timer);                                                                    // 16057
            module.performance.timer = setTimeout(module.performance.display, 0);                                      // 16058
          },                                                                                                           // 16059
          display: function() {                                                                                        // 16060
            var                                                                                                        // 16061
              title = settings.name + ':',                                                                             // 16062
              totalTime = 0                                                                                            // 16063
            ;                                                                                                          // 16064
            time = false;                                                                                              // 16065
            clearTimeout(module.performance.timer);                                                                    // 16066
            $.each(performance, function(index, data) {                                                                // 16067
              totalTime += data['Execution Time'];                                                                     // 16068
            });                                                                                                        // 16069
            title += ' ' + totalTime + 'ms';                                                                           // 16070
            if(moduleSelector) {                                                                                       // 16071
              title += ' \'' + moduleSelector + '\'';                                                                  // 16072
            }                                                                                                          // 16073
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 16074
              console.groupCollapsed(title);                                                                           // 16075
              if(console.table) {                                                                                      // 16076
                console.table(performance);                                                                            // 16077
              }                                                                                                        // 16078
              else {                                                                                                   // 16079
                $.each(performance, function(index, data) {                                                            // 16080
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 16081
                });                                                                                                    // 16082
              }                                                                                                        // 16083
              console.groupEnd();                                                                                      // 16084
            }                                                                                                          // 16085
            performance = [];                                                                                          // 16086
          }                                                                                                            // 16087
        },                                                                                                             // 16088
        invoke: function(query, passedArguments, context) {                                                            // 16089
          var                                                                                                          // 16090
            object = instance,                                                                                         // 16091
            maxDepth,                                                                                                  // 16092
            found,                                                                                                     // 16093
            response                                                                                                   // 16094
          ;                                                                                                            // 16095
          passedArguments = passedArguments || queryArguments;                                                         // 16096
          context         = element         || context;                                                                // 16097
          if(typeof query == 'string' && object !== undefined) {                                                       // 16098
            query    = query.split(/[\. ]/);                                                                           // 16099
            maxDepth = query.length - 1;                                                                               // 16100
            $.each(query, function(depth, value) {                                                                     // 16101
              var camelCaseValue = (depth != maxDepth)                                                                 // 16102
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 16103
                : query                                                                                                // 16104
              ;                                                                                                        // 16105
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 16106
                object = object[camelCaseValue];                                                                       // 16107
              }                                                                                                        // 16108
              else if( object[camelCaseValue] !== undefined ) {                                                        // 16109
                found = object[camelCaseValue];                                                                        // 16110
                return false;                                                                                          // 16111
              }                                                                                                        // 16112
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 16113
                object = object[value];                                                                                // 16114
              }                                                                                                        // 16115
              else if( object[value] !== undefined ) {                                                                 // 16116
                found = object[value];                                                                                 // 16117
                return false;                                                                                          // 16118
              }                                                                                                        // 16119
              else {                                                                                                   // 16120
                return false;                                                                                          // 16121
              }                                                                                                        // 16122
            });                                                                                                        // 16123
          }                                                                                                            // 16124
          if ( $.isFunction( found ) ) {                                                                               // 16125
            response = found.apply(context, passedArguments);                                                          // 16126
          }                                                                                                            // 16127
          else if(found !== undefined) {                                                                               // 16128
            response = found;                                                                                          // 16129
          }                                                                                                            // 16130
          if($.isArray(returnedValue)) {                                                                               // 16131
            returnedValue.push(response);                                                                              // 16132
          }                                                                                                            // 16133
          else if(returnedValue !== undefined) {                                                                       // 16134
            returnedValue = [returnedValue, response];                                                                 // 16135
          }                                                                                                            // 16136
          else if(response !== undefined) {                                                                            // 16137
            returnedValue = response;                                                                                  // 16138
          }                                                                                                            // 16139
          return found;                                                                                                // 16140
        }                                                                                                              // 16141
      };                                                                                                               // 16142
                                                                                                                       // 16143
      if(methodInvoked) {                                                                                              // 16144
        if(instance === undefined) {                                                                                   // 16145
          module.initialize();                                                                                         // 16146
        }                                                                                                              // 16147
        module.invoke(query);                                                                                          // 16148
      }                                                                                                                // 16149
      else {                                                                                                           // 16150
        if(instance !== undefined) {                                                                                   // 16151
          instance.invoke('destroy');                                                                                  // 16152
        }                                                                                                              // 16153
        module.initialize();                                                                                           // 16154
      }                                                                                                                // 16155
    })                                                                                                                 // 16156
  ;                                                                                                                    // 16157
                                                                                                                       // 16158
  return (returnedValue !== undefined)                                                                                 // 16159
    ? returnedValue                                                                                                    // 16160
    : this                                                                                                             // 16161
  ;                                                                                                                    // 16162
};                                                                                                                     // 16163
                                                                                                                       // 16164
$.fn.sticky.settings = {                                                                                               // 16165
                                                                                                                       // 16166
  name           : 'Sticky',                                                                                           // 16167
  namespace      : 'sticky',                                                                                           // 16168
                                                                                                                       // 16169
  debug          : false,                                                                                              // 16170
  verbose        : true,                                                                                               // 16171
  performance    : true,                                                                                               // 16172
                                                                                                                       // 16173
  // whether to stick in the opposite direction on scroll up                                                           // 16174
  pushing        : false,                                                                                              // 16175
                                                                                                                       // 16176
  context        : false,                                                                                              // 16177
                                                                                                                       // 16178
  // Context to watch scroll events                                                                                    // 16179
  scrollContext  : window,                                                                                             // 16180
                                                                                                                       // 16181
  // Offset to adjust scroll                                                                                           // 16182
  offset         : 0,                                                                                                  // 16183
                                                                                                                       // 16184
  // Offset to adjust scroll when attached to bottom of screen                                                         // 16185
  bottomOffset   : 0,                                                                                                  // 16186
                                                                                                                       // 16187
  jitter         : 5, // will only set container height if difference between context and container is larger than this number
                                                                                                                       // 16189
  // Whether to automatically observe changes with Mutation Observers                                                  // 16190
  observeChanges : false,                                                                                              // 16191
                                                                                                                       // 16192
  // Called when position is recalculated                                                                              // 16193
  onReposition   : function(){},                                                                                       // 16194
                                                                                                                       // 16195
  // Called on each scroll                                                                                             // 16196
  onScroll       : function(){},                                                                                       // 16197
                                                                                                                       // 16198
  // Called when element is stuck to viewport                                                                          // 16199
  onStick        : function(){},                                                                                       // 16200
                                                                                                                       // 16201
  // Called when element is unstuck from viewport                                                                      // 16202
  onUnstick      : function(){},                                                                                       // 16203
                                                                                                                       // 16204
  // Called when element reaches top of context                                                                        // 16205
  onTop          : function(){},                                                                                       // 16206
                                                                                                                       // 16207
  // Called when element reaches bottom of context                                                                     // 16208
  onBottom       : function(){},                                                                                       // 16209
                                                                                                                       // 16210
  error         : {                                                                                                    // 16211
    container      : 'Sticky element must be inside a relative container',                                             // 16212
    visible        : 'Element is hidden, you must call refresh after element becomes visible',                         // 16213
    method         : 'The method you called is not defined.',                                                          // 16214
    invalidContext : 'Context specified does not exist',                                                               // 16215
    elementSize    : 'Sticky element is larger than its container, cannot create sticky.'                              // 16216
  },                                                                                                                   // 16217
                                                                                                                       // 16218
  className : {                                                                                                        // 16219
    bound     : 'bound',                                                                                               // 16220
    fixed     : 'fixed',                                                                                               // 16221
    supported : 'native',                                                                                              // 16222
    top       : 'top',                                                                                                 // 16223
    bottom    : 'bottom'                                                                                               // 16224
  }                                                                                                                    // 16225
                                                                                                                       // 16226
};                                                                                                                     // 16227
                                                                                                                       // 16228
})( jQuery, window , document );                                                                                       // 16229
                                                                                                                       // 16230
/*!                                                                                                                    // 16231
 * # Semantic UI 2.1.2 - Tab                                                                                           // 16232
 * http://github.com/semantic-org/semantic-ui/                                                                         // 16233
 *                                                                                                                     // 16234
 *                                                                                                                     // 16235
 * Copyright 2015 Contributors                                                                                         // 16236
 * Released under the MIT license                                                                                      // 16237
 * http://opensource.org/licenses/MIT                                                                                  // 16238
 *                                                                                                                     // 16239
 */                                                                                                                    // 16240
                                                                                                                       // 16241
;(function ($, window, document, undefined) {                                                                          // 16242
                                                                                                                       // 16243
"use strict";                                                                                                          // 16244
                                                                                                                       // 16245
$.fn.tab = function(parameters) {                                                                                      // 16246
                                                                                                                       // 16247
  var                                                                                                                  // 16248
    // use window context if none specified                                                                            // 16249
    $allModules     = $.isFunction(this)                                                                               // 16250
        ? $(window)                                                                                                    // 16251
        : $(this),                                                                                                     // 16252
                                                                                                                       // 16253
    moduleSelector  = $allModules.selector || '',                                                                      // 16254
    time            = new Date().getTime(),                                                                            // 16255
    performance     = [],                                                                                              // 16256
                                                                                                                       // 16257
    query           = arguments[0],                                                                                    // 16258
    methodInvoked   = (typeof query == 'string'),                                                                      // 16259
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 16260
                                                                                                                       // 16261
    initializedHistory = false,                                                                                        // 16262
    returnedValue                                                                                                      // 16263
  ;                                                                                                                    // 16264
                                                                                                                       // 16265
  $allModules                                                                                                          // 16266
    .each(function() {                                                                                                 // 16267
      var                                                                                                              // 16268
                                                                                                                       // 16269
        settings        = ( $.isPlainObject(parameters) )                                                              // 16270
          ? $.extend(true, {}, $.fn.tab.settings, parameters)                                                          // 16271
          : $.extend({}, $.fn.tab.settings),                                                                           // 16272
                                                                                                                       // 16273
        className       = settings.className,                                                                          // 16274
        metadata        = settings.metadata,                                                                           // 16275
        selector        = settings.selector,                                                                           // 16276
        error           = settings.error,                                                                              // 16277
                                                                                                                       // 16278
        eventNamespace  = '.' + settings.namespace,                                                                    // 16279
        moduleNamespace = 'module-' + settings.namespace,                                                              // 16280
                                                                                                                       // 16281
        $module         = $(this),                                                                                     // 16282
        $context,                                                                                                      // 16283
        $tabs,                                                                                                         // 16284
                                                                                                                       // 16285
        cache           = {},                                                                                          // 16286
        firstLoad       = true,                                                                                        // 16287
        recursionDepth  = 0,                                                                                           // 16288
        element         = this,                                                                                        // 16289
        instance        = $module.data(moduleNamespace),                                                               // 16290
                                                                                                                       // 16291
        activeTabPath,                                                                                                 // 16292
        parameterArray,                                                                                                // 16293
        module,                                                                                                        // 16294
                                                                                                                       // 16295
        historyEvent                                                                                                   // 16296
                                                                                                                       // 16297
      ;                                                                                                                // 16298
                                                                                                                       // 16299
      module = {                                                                                                       // 16300
                                                                                                                       // 16301
        initialize: function() {                                                                                       // 16302
          module.debug('Initializing tab menu item', $module);                                                         // 16303
          module.fix.callbacks();                                                                                      // 16304
          module.determineTabs();                                                                                      // 16305
                                                                                                                       // 16306
          module.debug('Determining tabs', settings.context, $tabs);                                                   // 16307
          // set up automatic routing                                                                                  // 16308
          if(settings.auto) {                                                                                          // 16309
            module.set.auto();                                                                                         // 16310
          }                                                                                                            // 16311
          module.bind.events();                                                                                        // 16312
                                                                                                                       // 16313
          if(settings.history && !initializedHistory) {                                                                // 16314
            module.initializeHistory();                                                                                // 16315
            initializedHistory = true;                                                                                 // 16316
          }                                                                                                            // 16317
                                                                                                                       // 16318
          module.instantiate();                                                                                        // 16319
        },                                                                                                             // 16320
                                                                                                                       // 16321
        instantiate: function () {                                                                                     // 16322
          module.verbose('Storing instance of module', module);                                                        // 16323
          instance = module;                                                                                           // 16324
          $module                                                                                                      // 16325
            .data(moduleNamespace, module)                                                                             // 16326
          ;                                                                                                            // 16327
        },                                                                                                             // 16328
                                                                                                                       // 16329
        destroy: function() {                                                                                          // 16330
          module.debug('Destroying tabs', $module);                                                                    // 16331
          $module                                                                                                      // 16332
            .removeData(moduleNamespace)                                                                               // 16333
            .off(eventNamespace)                                                                                       // 16334
          ;                                                                                                            // 16335
        },                                                                                                             // 16336
                                                                                                                       // 16337
        bind: {                                                                                                        // 16338
          events: function() {                                                                                         // 16339
            // if using $.tab dont add events                                                                          // 16340
            if( !$.isWindow( element ) ) {                                                                             // 16341
              module.debug('Attaching tab activation events to element', $module);                                     // 16342
              $module                                                                                                  // 16343
                .on('click' + eventNamespace, module.event.click)                                                      // 16344
              ;                                                                                                        // 16345
            }                                                                                                          // 16346
          }                                                                                                            // 16347
        },                                                                                                             // 16348
                                                                                                                       // 16349
        determineTabs: function() {                                                                                    // 16350
          var                                                                                                          // 16351
            $reference                                                                                                 // 16352
          ;                                                                                                            // 16353
                                                                                                                       // 16354
          // determine tab context                                                                                     // 16355
          if(settings.context === 'parent') {                                                                          // 16356
            if($module.closest(selector.ui).length > 0) {                                                              // 16357
              $reference = $module.closest(selector.ui);                                                               // 16358
              module.verbose('Using closest UI element as parent', $reference);                                        // 16359
            }                                                                                                          // 16360
            else {                                                                                                     // 16361
              $reference = $module;                                                                                    // 16362
            }                                                                                                          // 16363
            $context = $reference.parent();                                                                            // 16364
            module.verbose('Determined parent element for creating context', $context);                                // 16365
          }                                                                                                            // 16366
          else if(settings.context) {                                                                                  // 16367
            $context = $(settings.context);                                                                            // 16368
            module.verbose('Using selector for tab context', settings.context, $context);                              // 16369
          }                                                                                                            // 16370
          else {                                                                                                       // 16371
            $context = $('body');                                                                                      // 16372
          }                                                                                                            // 16373
          // find tabs                                                                                                 // 16374
          if(settings.childrenOnly) {                                                                                  // 16375
            $tabs = $context.children(selector.tabs);                                                                  // 16376
            module.debug('Searching tab context children for tabs', $context, $tabs);                                  // 16377
          }                                                                                                            // 16378
          else {                                                                                                       // 16379
            $tabs = $context.find(selector.tabs);                                                                      // 16380
            module.debug('Searching tab context for tabs', $context, $tabs);                                           // 16381
          }                                                                                                            // 16382
        },                                                                                                             // 16383
                                                                                                                       // 16384
        fix: {                                                                                                         // 16385
          callbacks: function() {                                                                                      // 16386
            if( $.isPlainObject(parameters) && (parameters.onTabLoad || parameters.onTabInit) ) {                      // 16387
              if(parameters.onTabLoad) {                                                                               // 16388
                parameters.onLoad = parameters.onTabLoad;                                                              // 16389
                delete parameters.onTabLoad;                                                                           // 16390
                module.error(error.legacyLoad, parameters.onLoad);                                                     // 16391
              }                                                                                                        // 16392
              if(parameters.onTabInit) {                                                                               // 16393
                parameters.onFirstLoad = parameters.onTabInit;                                                         // 16394
                delete parameters.onTabInit;                                                                           // 16395
                module.error(error.legacyInit, parameters.onFirstLoad);                                                // 16396
              }                                                                                                        // 16397
              settings = $.extend(true, {}, $.fn.tab.settings, parameters);                                            // 16398
            }                                                                                                          // 16399
          }                                                                                                            // 16400
        },                                                                                                             // 16401
                                                                                                                       // 16402
        initializeHistory: function() {                                                                                // 16403
          module.debug('Initializing page state');                                                                     // 16404
          if( $.address === undefined ) {                                                                              // 16405
            module.error(error.state);                                                                                 // 16406
            return false;                                                                                              // 16407
          }                                                                                                            // 16408
          else {                                                                                                       // 16409
            if(settings.historyType == 'state') {                                                                      // 16410
              module.debug('Using HTML5 to manage state');                                                             // 16411
              if(settings.path !== false) {                                                                            // 16412
                $.address                                                                                              // 16413
                  .history(true)                                                                                       // 16414
                  .state(settings.path)                                                                                // 16415
                ;                                                                                                      // 16416
              }                                                                                                        // 16417
              else {                                                                                                   // 16418
                module.error(error.path);                                                                              // 16419
                return false;                                                                                          // 16420
              }                                                                                                        // 16421
            }                                                                                                          // 16422
            $.address                                                                                                  // 16423
              .bind('change', module.event.history.change)                                                             // 16424
            ;                                                                                                          // 16425
          }                                                                                                            // 16426
        },                                                                                                             // 16427
                                                                                                                       // 16428
        event: {                                                                                                       // 16429
          click: function(event) {                                                                                     // 16430
            var                                                                                                        // 16431
              tabPath = $(this).data(metadata.tab)                                                                     // 16432
            ;                                                                                                          // 16433
            if(tabPath !== undefined) {                                                                                // 16434
              if(settings.history) {                                                                                   // 16435
                module.verbose('Updating page state', event);                                                          // 16436
                $.address.value(tabPath);                                                                              // 16437
              }                                                                                                        // 16438
              else {                                                                                                   // 16439
                module.verbose('Changing tab', event);                                                                 // 16440
                module.changeTab(tabPath);                                                                             // 16441
              }                                                                                                        // 16442
              event.preventDefault();                                                                                  // 16443
            }                                                                                                          // 16444
            else {                                                                                                     // 16445
              module.debug('No tab specified');                                                                        // 16446
            }                                                                                                          // 16447
          },                                                                                                           // 16448
          history: {                                                                                                   // 16449
            change: function(event) {                                                                                  // 16450
              var                                                                                                      // 16451
                tabPath   = event.pathNames.join('/') || module.get.initialPath(),                                     // 16452
                pageTitle = settings.templates.determineTitle(tabPath) || false                                        // 16453
              ;                                                                                                        // 16454
              module.performance.display();                                                                            // 16455
              module.debug('History change event', tabPath, event);                                                    // 16456
              historyEvent = event;                                                                                    // 16457
              if(tabPath !== undefined) {                                                                              // 16458
                module.changeTab(tabPath);                                                                             // 16459
              }                                                                                                        // 16460
              if(pageTitle) {                                                                                          // 16461
                $.address.title(pageTitle);                                                                            // 16462
              }                                                                                                        // 16463
            }                                                                                                          // 16464
          }                                                                                                            // 16465
        },                                                                                                             // 16466
                                                                                                                       // 16467
        refresh: function() {                                                                                          // 16468
          if(activeTabPath) {                                                                                          // 16469
            module.debug('Refreshing tab', activeTabPath);                                                             // 16470
            module.changeTab(activeTabPath);                                                                           // 16471
          }                                                                                                            // 16472
        },                                                                                                             // 16473
                                                                                                                       // 16474
        cache: {                                                                                                       // 16475
                                                                                                                       // 16476
          read: function(cacheKey) {                                                                                   // 16477
            return (cacheKey !== undefined)                                                                            // 16478
              ? cache[cacheKey]                                                                                        // 16479
              : false                                                                                                  // 16480
            ;                                                                                                          // 16481
          },                                                                                                           // 16482
          add: function(cacheKey, content) {                                                                           // 16483
            cacheKey = cacheKey || activeTabPath;                                                                      // 16484
            module.debug('Adding cached content for', cacheKey);                                                       // 16485
            cache[cacheKey] = content;                                                                                 // 16486
          },                                                                                                           // 16487
          remove: function(cacheKey) {                                                                                 // 16488
            cacheKey = cacheKey || activeTabPath;                                                                      // 16489
            module.debug('Removing cached content for', cacheKey);                                                     // 16490
            delete cache[cacheKey];                                                                                    // 16491
          }                                                                                                            // 16492
        },                                                                                                             // 16493
                                                                                                                       // 16494
        set: {                                                                                                         // 16495
          auto: function() {                                                                                           // 16496
            var                                                                                                        // 16497
              url = (typeof settings.path == 'string')                                                                 // 16498
                ? settings.path.replace(/\/$/, '') + '/{$tab}'                                                         // 16499
                : '/{$tab}'                                                                                            // 16500
            ;                                                                                                          // 16501
            module.verbose('Setting up automatic tab retrieval from server', url);                                     // 16502
            if($.isPlainObject(settings.apiSettings)) {                                                                // 16503
              settings.apiSettings.url = url;                                                                          // 16504
            }                                                                                                          // 16505
            else {                                                                                                     // 16506
              settings.apiSettings = {                                                                                 // 16507
                url: url                                                                                               // 16508
              };                                                                                                       // 16509
            }                                                                                                          // 16510
          },                                                                                                           // 16511
          loading: function(tabPath) {                                                                                 // 16512
            var                                                                                                        // 16513
              $tab      = module.get.tabElement(tabPath),                                                              // 16514
              isLoading = $tab.hasClass(className.loading)                                                             // 16515
            ;                                                                                                          // 16516
            if(!isLoading) {                                                                                           // 16517
              module.verbose('Setting loading state for', $tab);                                                       // 16518
              $tab                                                                                                     // 16519
                .addClass(className.loading)                                                                           // 16520
                .siblings($tabs)                                                                                       // 16521
                  .removeClass(className.active + ' ' + className.loading)                                             // 16522
              ;                                                                                                        // 16523
              if($tab.length > 0) {                                                                                    // 16524
                settings.onRequest.call($tab[0], tabPath);                                                             // 16525
              }                                                                                                        // 16526
            }                                                                                                          // 16527
          },                                                                                                           // 16528
          state: function(state) {                                                                                     // 16529
            $.address.value(state);                                                                                    // 16530
          }                                                                                                            // 16531
        },                                                                                                             // 16532
                                                                                                                       // 16533
        changeTab: function(tabPath) {                                                                                 // 16534
          var                                                                                                          // 16535
            pushStateAvailable = (window.history && window.history.pushState),                                         // 16536
            shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),                        // 16537
            remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),                            // 16538
            // only add default path if not remote content                                                             // 16539
            pathArray = (remoteContent && !shouldIgnoreLoad)                                                           // 16540
              ? module.utilities.pathToArray(tabPath)                                                                  // 16541
              : module.get.defaultPathArray(tabPath)                                                                   // 16542
          ;                                                                                                            // 16543
          tabPath = module.utilities.arrayToPath(pathArray);                                                           // 16544
          $.each(pathArray, function(index, tab) {                                                                     // 16545
            var                                                                                                        // 16546
              currentPathArray   = pathArray.slice(0, index + 1),                                                      // 16547
              currentPath        = module.utilities.arrayToPath(currentPathArray),                                     // 16548
                                                                                                                       // 16549
              isTab              = module.is.tab(currentPath),                                                         // 16550
              isLastIndex        = (index + 1 == pathArray.length),                                                    // 16551
                                                                                                                       // 16552
              $tab               = module.get.tabElement(currentPath),                                                 // 16553
              $anchor,                                                                                                 // 16554
              nextPathArray,                                                                                           // 16555
              nextPath,                                                                                                // 16556
              isLastTab                                                                                                // 16557
            ;                                                                                                          // 16558
            module.verbose('Looking for tab', tab);                                                                    // 16559
            if(isTab) {                                                                                                // 16560
              module.verbose('Tab was found', tab);                                                                    // 16561
              // scope up                                                                                              // 16562
              activeTabPath  = currentPath;                                                                            // 16563
              parameterArray = module.utilities.filterArray(pathArray, currentPathArray);                              // 16564
                                                                                                                       // 16565
              if(isLastIndex) {                                                                                        // 16566
                isLastTab = true;                                                                                      // 16567
              }                                                                                                        // 16568
              else {                                                                                                   // 16569
                nextPathArray = pathArray.slice(0, index + 2);                                                         // 16570
                nextPath      = module.utilities.arrayToPath(nextPathArray);                                           // 16571
                isLastTab     = ( !module.is.tab(nextPath) );                                                          // 16572
                if(isLastTab) {                                                                                        // 16573
                  module.verbose('Tab parameters found', nextPathArray);                                               // 16574
                }                                                                                                      // 16575
              }                                                                                                        // 16576
              if(isLastTab && remoteContent) {                                                                         // 16577
                if(!shouldIgnoreLoad) {                                                                                // 16578
                  module.activate.navigation(currentPath);                                                             // 16579
                  module.fetch.content(currentPath, tabPath);                                                          // 16580
                }                                                                                                      // 16581
                else {                                                                                                 // 16582
                  module.debug('Ignoring remote content on first tab load', currentPath);                              // 16583
                  firstLoad = false;                                                                                   // 16584
                  module.cache.add(tabPath, $tab.html());                                                              // 16585
                  module.activate.all(currentPath);                                                                    // 16586
                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);                       // 16587
                  settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);                            // 16588
                }                                                                                                      // 16589
                return false;                                                                                          // 16590
              }                                                                                                        // 16591
              else {                                                                                                   // 16592
                module.debug('Opened local tab', currentPath);                                                         // 16593
                module.activate.all(currentPath);                                                                      // 16594
                if( !module.cache.read(currentPath) ) {                                                                // 16595
                  module.cache.add(currentPath, true);                                                                 // 16596
                  module.debug('First time tab loaded calling tab init');                                              // 16597
                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);                       // 16598
                }                                                                                                      // 16599
                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);                              // 16600
              }                                                                                                        // 16601
                                                                                                                       // 16602
            }                                                                                                          // 16603
            else if(tabPath.search('/') == -1 && tabPath !== '') {                                                     // 16604
              // look for in page anchor                                                                               // 16605
              $anchor     = $('#' + tabPath + ', a[name="' + tabPath + '"]');                                          // 16606
              currentPath = $anchor.closest('[data-tab]').data(metadata.tab);                                          // 16607
              $tab        = module.get.tabElement(currentPath);                                                        // 16608
              // if anchor exists use parent tab                                                                       // 16609
              if($anchor && $anchor.length > 0 && currentPath) {                                                       // 16610
                module.debug('Anchor link used, opening parent tab', $tab, $anchor);                                   // 16611
                if( !$tab.hasClass(className.active) ) {                                                               // 16612
                  setTimeout(function() {                                                                              // 16613
                    module.scrollTo($anchor);                                                                          // 16614
                  }, 0);                                                                                               // 16615
                }                                                                                                      // 16616
                module.activate.all(currentPath);                                                                      // 16617
                if( !module.cache.read(currentPath) ) {                                                                // 16618
                  module.cache.add(currentPath, true);                                                                 // 16619
                  module.debug('First time tab loaded calling tab init');                                              // 16620
                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);                       // 16621
                }                                                                                                      // 16622
                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);                              // 16623
                return false;                                                                                          // 16624
              }                                                                                                        // 16625
            }                                                                                                          // 16626
            else {                                                                                                     // 16627
              module.error(error.missingTab, $module, $context, currentPath);                                          // 16628
              return false;                                                                                            // 16629
            }                                                                                                          // 16630
          });                                                                                                          // 16631
        },                                                                                                             // 16632
                                                                                                                       // 16633
        scrollTo: function($element) {                                                                                 // 16634
          var                                                                                                          // 16635
            scrollOffset = ($element && $element.length > 0)                                                           // 16636
              ? $element.offset().top                                                                                  // 16637
              : false                                                                                                  // 16638
          ;                                                                                                            // 16639
          if(scrollOffset !== false) {                                                                                 // 16640
            module.debug('Forcing scroll to an in-page link in a hidden tab', scrollOffset, $element);                 // 16641
            $(document).scrollTop(scrollOffset);                                                                       // 16642
          }                                                                                                            // 16643
        },                                                                                                             // 16644
                                                                                                                       // 16645
        update: {                                                                                                      // 16646
          content: function(tabPath, html, evaluateScripts) {                                                          // 16647
            var                                                                                                        // 16648
              $tab = module.get.tabElement(tabPath),                                                                   // 16649
              tab  = $tab[0]                                                                                           // 16650
            ;                                                                                                          // 16651
            evaluateScripts = (evaluateScripts !== undefined)                                                          // 16652
              ? evaluateScripts                                                                                        // 16653
              : settings.evaluateScripts                                                                               // 16654
            ;                                                                                                          // 16655
            if(evaluateScripts) {                                                                                      // 16656
              module.debug('Updating HTML and evaluating inline scripts', tabPath, html);                              // 16657
              $tab.html(html);                                                                                         // 16658
            }                                                                                                          // 16659
            else {                                                                                                     // 16660
              module.debug('Updating HTML', tabPath, html);                                                            // 16661
              tab.innerHTML = html;                                                                                    // 16662
            }                                                                                                          // 16663
          }                                                                                                            // 16664
        },                                                                                                             // 16665
                                                                                                                       // 16666
        fetch: {                                                                                                       // 16667
                                                                                                                       // 16668
          content: function(tabPath, fullTabPath) {                                                                    // 16669
            var                                                                                                        // 16670
              $tab        = module.get.tabElement(tabPath),                                                            // 16671
              apiSettings = {                                                                                          // 16672
                dataType         : 'html',                                                                             // 16673
                encodeParameters : false,                                                                              // 16674
                on               : 'now',                                                                              // 16675
                cache            : settings.alwaysRefresh,                                                             // 16676
                headers          : {                                                                                   // 16677
                  'X-Remote': true                                                                                     // 16678
                },                                                                                                     // 16679
                onSuccess : function(response) {                                                                       // 16680
                  module.cache.add(fullTabPath, response);                                                             // 16681
                  module.update.content(tabPath, response);                                                            // 16682
                  if(tabPath == activeTabPath) {                                                                       // 16683
                    module.debug('Content loaded', tabPath);                                                           // 16684
                    module.activate.tab(tabPath);                                                                      // 16685
                  }                                                                                                    // 16686
                  else {                                                                                               // 16687
                    module.debug('Content loaded in background', tabPath);                                             // 16688
                  }                                                                                                    // 16689
                  settings.onFirstLoad.call($tab[0], tabPath, parameterArray, historyEvent);                           // 16690
                  settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);                                // 16691
                },                                                                                                     // 16692
                urlData: {                                                                                             // 16693
                  tab: fullTabPath                                                                                     // 16694
                }                                                                                                      // 16695
              },                                                                                                       // 16696
              request         = $tab.api('get request') || false,                                                      // 16697
              existingRequest = ( request && request.state() === 'pending' ),                                          // 16698
              requestSettings,                                                                                         // 16699
              cachedContent                                                                                            // 16700
            ;                                                                                                          // 16701
                                                                                                                       // 16702
            fullTabPath   = fullTabPath || tabPath;                                                                    // 16703
            cachedContent = module.cache.read(fullTabPath);                                                            // 16704
                                                                                                                       // 16705
                                                                                                                       // 16706
            if(settings.cache && cachedContent) {                                                                      // 16707
              module.activate.tab(tabPath);                                                                            // 16708
              module.debug('Adding cached content', fullTabPath);                                                      // 16709
              if(settings.evaluateScripts == 'once') {                                                                 // 16710
                module.update.content(tabPath, cachedContent, false);                                                  // 16711
              }                                                                                                        // 16712
              else {                                                                                                   // 16713
                module.update.content(tabPath, cachedContent);                                                         // 16714
              }                                                                                                        // 16715
              settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);                                    // 16716
            }                                                                                                          // 16717
            else if(existingRequest) {                                                                                 // 16718
              module.set.loading(tabPath);                                                                             // 16719
              module.debug('Content is already loading', fullTabPath);                                                 // 16720
            }                                                                                                          // 16721
            else if($.api !== undefined) {                                                                             // 16722
              requestSettings = $.extend(true, {}, settings.apiSettings, apiSettings);                                 // 16723
              module.debug('Retrieving remote content', fullTabPath, requestSettings);                                 // 16724
              module.set.loading(tabPath);                                                                             // 16725
              $tab.api(requestSettings);                                                                               // 16726
            }                                                                                                          // 16727
            else {                                                                                                     // 16728
              module.error(error.api);                                                                                 // 16729
            }                                                                                                          // 16730
          }                                                                                                            // 16731
        },                                                                                                             // 16732
                                                                                                                       // 16733
        activate: {                                                                                                    // 16734
          all: function(tabPath) {                                                                                     // 16735
            module.activate.tab(tabPath);                                                                              // 16736
            module.activate.navigation(tabPath);                                                                       // 16737
          },                                                                                                           // 16738
          tab: function(tabPath) {                                                                                     // 16739
            var                                                                                                        // 16740
              $tab     = module.get.tabElement(tabPath),                                                               // 16741
              isActive = $tab.hasClass(className.active)                                                               // 16742
            ;                                                                                                          // 16743
            module.verbose('Showing tab content for', $tab);                                                           // 16744
            if(!isActive) {                                                                                            // 16745
              $tab                                                                                                     // 16746
                .addClass(className.active)                                                                            // 16747
                .siblings($tabs)                                                                                       // 16748
                  .removeClass(className.active + ' ' + className.loading)                                             // 16749
              ;                                                                                                        // 16750
              if($tab.length > 0) {                                                                                    // 16751
                settings.onVisible.call($tab[0], tabPath);                                                             // 16752
              }                                                                                                        // 16753
            }                                                                                                          // 16754
          },                                                                                                           // 16755
          navigation: function(tabPath) {                                                                              // 16756
            var                                                                                                        // 16757
              $navigation = module.get.navElement(tabPath),                                                            // 16758
              isActive    = $navigation.hasClass(className.active)                                                     // 16759
            ;                                                                                                          // 16760
            module.verbose('Activating tab navigation for', $navigation, tabPath);                                     // 16761
            if(!isActive) {                                                                                            // 16762
              $navigation                                                                                              // 16763
                .addClass(className.active)                                                                            // 16764
                .siblings($allModules)                                                                                 // 16765
                  .removeClass(className.active + ' ' + className.loading)                                             // 16766
              ;                                                                                                        // 16767
            }                                                                                                          // 16768
          }                                                                                                            // 16769
        },                                                                                                             // 16770
                                                                                                                       // 16771
        deactivate: {                                                                                                  // 16772
          all: function() {                                                                                            // 16773
            module.deactivate.navigation();                                                                            // 16774
            module.deactivate.tabs();                                                                                  // 16775
          },                                                                                                           // 16776
          navigation: function() {                                                                                     // 16777
            $allModules                                                                                                // 16778
              .removeClass(className.active)                                                                           // 16779
            ;                                                                                                          // 16780
          },                                                                                                           // 16781
          tabs: function() {                                                                                           // 16782
            $tabs                                                                                                      // 16783
              .removeClass(className.active + ' ' + className.loading)                                                 // 16784
            ;                                                                                                          // 16785
          }                                                                                                            // 16786
        },                                                                                                             // 16787
                                                                                                                       // 16788
        is: {                                                                                                          // 16789
          tab: function(tabName) {                                                                                     // 16790
            return (tabName !== undefined)                                                                             // 16791
              ? ( module.get.tabElement(tabName).length > 0 )                                                          // 16792
              : false                                                                                                  // 16793
            ;                                                                                                          // 16794
          }                                                                                                            // 16795
        },                                                                                                             // 16796
                                                                                                                       // 16797
        get: {                                                                                                         // 16798
          initialPath: function() {                                                                                    // 16799
            return $allModules.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);                             // 16800
          },                                                                                                           // 16801
          path: function() {                                                                                           // 16802
            return $.address.value();                                                                                  // 16803
          },                                                                                                           // 16804
          // adds default tabs to tab path                                                                             // 16805
          defaultPathArray: function(tabPath) {                                                                        // 16806
            return module.utilities.pathToArray( module.get.defaultPath(tabPath) );                                    // 16807
          },                                                                                                           // 16808
          defaultPath: function(tabPath) {                                                                             // 16809
            var                                                                                                        // 16810
              $defaultNav = $allModules.filter('[data-' + metadata.tab + '^="' + tabPath + '/"]').eq(0),               // 16811
              defaultTab  = $defaultNav.data(metadata.tab) || false                                                    // 16812
            ;                                                                                                          // 16813
            if( defaultTab ) {                                                                                         // 16814
              module.debug('Found default tab', defaultTab);                                                           // 16815
              if(recursionDepth < settings.maxDepth) {                                                                 // 16816
                recursionDepth++;                                                                                      // 16817
                return module.get.defaultPath(defaultTab);                                                             // 16818
              }                                                                                                        // 16819
              module.error(error.recursion);                                                                           // 16820
            }                                                                                                          // 16821
            else {                                                                                                     // 16822
              module.debug('No default tabs found for', tabPath, $tabs);                                               // 16823
            }                                                                                                          // 16824
            recursionDepth = 0;                                                                                        // 16825
            return tabPath;                                                                                            // 16826
          },                                                                                                           // 16827
          navElement: function(tabPath) {                                                                              // 16828
            tabPath = tabPath || activeTabPath;                                                                        // 16829
            return $allModules.filter('[data-' + metadata.tab + '="' + tabPath + '"]');                                // 16830
          },                                                                                                           // 16831
          tabElement: function(tabPath) {                                                                              // 16832
            var                                                                                                        // 16833
              $fullPathTab,                                                                                            // 16834
              $simplePathTab,                                                                                          // 16835
              tabPathArray,                                                                                            // 16836
              lastTab                                                                                                  // 16837
            ;                                                                                                          // 16838
            tabPath        = tabPath || activeTabPath;                                                                 // 16839
            tabPathArray   = module.utilities.pathToArray(tabPath);                                                    // 16840
            lastTab        = module.utilities.last(tabPathArray);                                                      // 16841
            $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '="' + tabPath + '"]');                            // 16842
            $simplePathTab = $tabs.filter('[data-' + metadata.tab + '="' + lastTab + '"]');                            // 16843
            return ($fullPathTab.length > 0)                                                                           // 16844
              ? $fullPathTab                                                                                           // 16845
              : $simplePathTab                                                                                         // 16846
            ;                                                                                                          // 16847
          },                                                                                                           // 16848
          tab: function() {                                                                                            // 16849
            return activeTabPath;                                                                                      // 16850
          }                                                                                                            // 16851
        },                                                                                                             // 16852
                                                                                                                       // 16853
        utilities: {                                                                                                   // 16854
          filterArray: function(keepArray, removeArray) {                                                              // 16855
            return $.grep(keepArray, function(keepValue) {                                                             // 16856
              return ( $.inArray(keepValue, removeArray) == -1);                                                       // 16857
            });                                                                                                        // 16858
          },                                                                                                           // 16859
          last: function(array) {                                                                                      // 16860
            return $.isArray(array)                                                                                    // 16861
              ? array[ array.length - 1]                                                                               // 16862
              : false                                                                                                  // 16863
            ;                                                                                                          // 16864
          },                                                                                                           // 16865
          pathToArray: function(pathName) {                                                                            // 16866
            if(pathName === undefined) {                                                                               // 16867
              pathName = activeTabPath;                                                                                // 16868
            }                                                                                                          // 16869
            return typeof pathName == 'string'                                                                         // 16870
              ? pathName.split('/')                                                                                    // 16871
              : [pathName]                                                                                             // 16872
            ;                                                                                                          // 16873
          },                                                                                                           // 16874
          arrayToPath: function(pathArray) {                                                                           // 16875
            return $.isArray(pathArray)                                                                                // 16876
              ? pathArray.join('/')                                                                                    // 16877
              : false                                                                                                  // 16878
            ;                                                                                                          // 16879
          }                                                                                                            // 16880
        },                                                                                                             // 16881
                                                                                                                       // 16882
        setting: function(name, value) {                                                                               // 16883
          module.debug('Changing setting', name, value);                                                               // 16884
          if( $.isPlainObject(name) ) {                                                                                // 16885
            $.extend(true, settings, name);                                                                            // 16886
          }                                                                                                            // 16887
          else if(value !== undefined) {                                                                               // 16888
            settings[name] = value;                                                                                    // 16889
          }                                                                                                            // 16890
          else {                                                                                                       // 16891
            return settings[name];                                                                                     // 16892
          }                                                                                                            // 16893
        },                                                                                                             // 16894
        internal: function(name, value) {                                                                              // 16895
          if( $.isPlainObject(name) ) {                                                                                // 16896
            $.extend(true, module, name);                                                                              // 16897
          }                                                                                                            // 16898
          else if(value !== undefined) {                                                                               // 16899
            module[name] = value;                                                                                      // 16900
          }                                                                                                            // 16901
          else {                                                                                                       // 16902
            return module[name];                                                                                       // 16903
          }                                                                                                            // 16904
        },                                                                                                             // 16905
        debug: function() {                                                                                            // 16906
          if(settings.debug) {                                                                                         // 16907
            if(settings.performance) {                                                                                 // 16908
              module.performance.log(arguments);                                                                       // 16909
            }                                                                                                          // 16910
            else {                                                                                                     // 16911
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 16912
              module.debug.apply(console, arguments);                                                                  // 16913
            }                                                                                                          // 16914
          }                                                                                                            // 16915
        },                                                                                                             // 16916
        verbose: function() {                                                                                          // 16917
          if(settings.verbose && settings.debug) {                                                                     // 16918
            if(settings.performance) {                                                                                 // 16919
              module.performance.log(arguments);                                                                       // 16920
            }                                                                                                          // 16921
            else {                                                                                                     // 16922
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 16923
              module.verbose.apply(console, arguments);                                                                // 16924
            }                                                                                                          // 16925
          }                                                                                                            // 16926
        },                                                                                                             // 16927
        error: function() {                                                                                            // 16928
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 16929
          module.error.apply(console, arguments);                                                                      // 16930
        },                                                                                                             // 16931
        performance: {                                                                                                 // 16932
          log: function(message) {                                                                                     // 16933
            var                                                                                                        // 16934
              currentTime,                                                                                             // 16935
              executionTime,                                                                                           // 16936
              previousTime                                                                                             // 16937
            ;                                                                                                          // 16938
            if(settings.performance) {                                                                                 // 16939
              currentTime   = new Date().getTime();                                                                    // 16940
              previousTime  = time || currentTime;                                                                     // 16941
              executionTime = currentTime - previousTime;                                                              // 16942
              time          = currentTime;                                                                             // 16943
              performance.push({                                                                                       // 16944
                'Name'           : message[0],                                                                         // 16945
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 16946
                'Element'        : element,                                                                            // 16947
                'Execution Time' : executionTime                                                                       // 16948
              });                                                                                                      // 16949
            }                                                                                                          // 16950
            clearTimeout(module.performance.timer);                                                                    // 16951
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 16952
          },                                                                                                           // 16953
          display: function() {                                                                                        // 16954
            var                                                                                                        // 16955
              title = settings.name + ':',                                                                             // 16956
              totalTime = 0                                                                                            // 16957
            ;                                                                                                          // 16958
            time = false;                                                                                              // 16959
            clearTimeout(module.performance.timer);                                                                    // 16960
            $.each(performance, function(index, data) {                                                                // 16961
              totalTime += data['Execution Time'];                                                                     // 16962
            });                                                                                                        // 16963
            title += ' ' + totalTime + 'ms';                                                                           // 16964
            if(moduleSelector) {                                                                                       // 16965
              title += ' \'' + moduleSelector + '\'';                                                                  // 16966
            }                                                                                                          // 16967
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 16968
              console.groupCollapsed(title);                                                                           // 16969
              if(console.table) {                                                                                      // 16970
                console.table(performance);                                                                            // 16971
              }                                                                                                        // 16972
              else {                                                                                                   // 16973
                $.each(performance, function(index, data) {                                                            // 16974
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 16975
                });                                                                                                    // 16976
              }                                                                                                        // 16977
              console.groupEnd();                                                                                      // 16978
            }                                                                                                          // 16979
            performance = [];                                                                                          // 16980
          }                                                                                                            // 16981
        },                                                                                                             // 16982
        invoke: function(query, passedArguments, context) {                                                            // 16983
          var                                                                                                          // 16984
            object = instance,                                                                                         // 16985
            maxDepth,                                                                                                  // 16986
            found,                                                                                                     // 16987
            response                                                                                                   // 16988
          ;                                                                                                            // 16989
          passedArguments = passedArguments || queryArguments;                                                         // 16990
          context         = element         || context;                                                                // 16991
          if(typeof query == 'string' && object !== undefined) {                                                       // 16992
            query    = query.split(/[\. ]/);                                                                           // 16993
            maxDepth = query.length - 1;                                                                               // 16994
            $.each(query, function(depth, value) {                                                                     // 16995
              var camelCaseValue = (depth != maxDepth)                                                                 // 16996
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 16997
                : query                                                                                                // 16998
              ;                                                                                                        // 16999
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 17000
                object = object[camelCaseValue];                                                                       // 17001
              }                                                                                                        // 17002
              else if( object[camelCaseValue] !== undefined ) {                                                        // 17003
                found = object[camelCaseValue];                                                                        // 17004
                return false;                                                                                          // 17005
              }                                                                                                        // 17006
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 17007
                object = object[value];                                                                                // 17008
              }                                                                                                        // 17009
              else if( object[value] !== undefined ) {                                                                 // 17010
                found = object[value];                                                                                 // 17011
                return false;                                                                                          // 17012
              }                                                                                                        // 17013
              else {                                                                                                   // 17014
                module.error(error.method, query);                                                                     // 17015
                return false;                                                                                          // 17016
              }                                                                                                        // 17017
            });                                                                                                        // 17018
          }                                                                                                            // 17019
          if ( $.isFunction( found ) ) {                                                                               // 17020
            response = found.apply(context, passedArguments);                                                          // 17021
          }                                                                                                            // 17022
          else if(found !== undefined) {                                                                               // 17023
            response = found;                                                                                          // 17024
          }                                                                                                            // 17025
          if($.isArray(returnedValue)) {                                                                               // 17026
            returnedValue.push(response);                                                                              // 17027
          }                                                                                                            // 17028
          else if(returnedValue !== undefined) {                                                                       // 17029
            returnedValue = [returnedValue, response];                                                                 // 17030
          }                                                                                                            // 17031
          else if(response !== undefined) {                                                                            // 17032
            returnedValue = response;                                                                                  // 17033
          }                                                                                                            // 17034
          return found;                                                                                                // 17035
        }                                                                                                              // 17036
      };                                                                                                               // 17037
      if(methodInvoked) {                                                                                              // 17038
        if(instance === undefined) {                                                                                   // 17039
          module.initialize();                                                                                         // 17040
        }                                                                                                              // 17041
        module.invoke(query);                                                                                          // 17042
      }                                                                                                                // 17043
      else {                                                                                                           // 17044
        if(instance !== undefined) {                                                                                   // 17045
          instance.invoke('destroy');                                                                                  // 17046
        }                                                                                                              // 17047
        module.initialize();                                                                                           // 17048
      }                                                                                                                // 17049
    })                                                                                                                 // 17050
  ;                                                                                                                    // 17051
  return (returnedValue !== undefined)                                                                                 // 17052
    ? returnedValue                                                                                                    // 17053
    : this                                                                                                             // 17054
  ;                                                                                                                    // 17055
                                                                                                                       // 17056
};                                                                                                                     // 17057
                                                                                                                       // 17058
// shortcut for tabbed content with no defined navigation                                                              // 17059
$.tab = function() {                                                                                                   // 17060
  $(window).tab.apply(this, arguments);                                                                                // 17061
};                                                                                                                     // 17062
                                                                                                                       // 17063
$.fn.tab.settings = {                                                                                                  // 17064
                                                                                                                       // 17065
  name            : 'Tab',                                                                                             // 17066
  namespace       : 'tab',                                                                                             // 17067
                                                                                                                       // 17068
  debug           : false,                                                                                             // 17069
  verbose         : false,                                                                                             // 17070
  performance     : true,                                                                                              // 17071
                                                                                                                       // 17072
  auto            : false,  // uses pjax style endpoints fetching content from same url with remote-content headers    // 17073
  history         : false,  // use browser history                                                                     // 17074
  historyType     : 'hash', // #/ or html5 state                                                                       // 17075
  path            : false,  // base path of url                                                                        // 17076
                                                                                                                       // 17077
  context         : false,  // specify a context that tabs must appear inside                                          // 17078
  childrenOnly    : false,  // use only tabs that are children of context                                              // 17079
  maxDepth        : 25,     // max depth a tab can be nested                                                           // 17080
                                                                                                                       // 17081
  alwaysRefresh   : false,  // load tab content new every tab click                                                    // 17082
  cache           : true,   // cache the content requests to pull locally                                              // 17083
  ignoreFirstLoad : false,  // don't load remote content on first load                                                 // 17084
                                                                                                                       // 17085
  apiSettings     : false,  // settings for api call                                                                   // 17086
  evaluateScripts : 'once', // whether inline scripts should be parsed (true/false/once). Once will not re-evaluate on cached content
                                                                                                                       // 17088
  onFirstLoad : function(tabPath, parameterArray, historyEvent) {}, // called first time loaded                        // 17089
  onLoad      : function(tabPath, parameterArray, historyEvent) {}, // called on every load                            // 17090
  onVisible   : function(tabPath, parameterArray, historyEvent) {}, // called every time tab visible                   // 17091
  onRequest   : function(tabPath, parameterArray, historyEvent) {}, // called ever time a tab beings loading remote content
                                                                                                                       // 17093
  templates    : {                                                                                                     // 17094
    determineTitle: function(tabArray) {} // returns page title for path                                               // 17095
  },                                                                                                                   // 17096
                                                                                                                       // 17097
  error: {                                                                                                             // 17098
    api        : 'You attempted to load content without API module',                                                   // 17099
    method     : 'The method you called is not defined',                                                               // 17100
    missingTab : 'Activated tab cannot be found. Tabs are case-sensitive.',                                            // 17101
    noContent  : 'The tab you specified is missing a content url.',                                                    // 17102
    path       : 'History enabled, but no path was specified',                                                         // 17103
    recursion  : 'Max recursive depth reached',                                                                        // 17104
    legacyInit : 'onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.',                         // 17105
    legacyLoad : 'onTabLoad has been renamed to onLoad in 2.0. Please adjust your code',                               // 17106
    state      : 'History requires Asual\'s Address library <https://github.com/asual/jquery-address>'                 // 17107
  },                                                                                                                   // 17108
                                                                                                                       // 17109
  metadata : {                                                                                                         // 17110
    tab    : 'tab',                                                                                                    // 17111
    loaded : 'loaded',                                                                                                 // 17112
    promise: 'promise'                                                                                                 // 17113
  },                                                                                                                   // 17114
                                                                                                                       // 17115
  className   : {                                                                                                      // 17116
    loading : 'loading',                                                                                               // 17117
    active  : 'active'                                                                                                 // 17118
  },                                                                                                                   // 17119
                                                                                                                       // 17120
  selector    : {                                                                                                      // 17121
    tabs : '.ui.tab',                                                                                                  // 17122
    ui   : '.ui'                                                                                                       // 17123
  }                                                                                                                    // 17124
                                                                                                                       // 17125
};                                                                                                                     // 17126
                                                                                                                       // 17127
})( jQuery, window , document );                                                                                       // 17128
/*!                                                                                                                    // 17129
 * # Semantic UI 2.1.2 - Transition                                                                                    // 17130
 * http://github.com/semantic-org/semantic-ui/                                                                         // 17131
 *                                                                                                                     // 17132
 *                                                                                                                     // 17133
 * Copyright 2015 Contributors                                                                                         // 17134
 * Released under the MIT license                                                                                      // 17135
 * http://opensource.org/licenses/MIT                                                                                  // 17136
 *                                                                                                                     // 17137
 */                                                                                                                    // 17138
                                                                                                                       // 17139
;(function ( $, window, document, undefined ) {                                                                        // 17140
                                                                                                                       // 17141
"use strict";                                                                                                          // 17142
                                                                                                                       // 17143
$.fn.transition = function() {                                                                                         // 17144
  var                                                                                                                  // 17145
    $allModules     = $(this),                                                                                         // 17146
    moduleSelector  = $allModules.selector || '',                                                                      // 17147
                                                                                                                       // 17148
    time            = new Date().getTime(),                                                                            // 17149
    performance     = [],                                                                                              // 17150
                                                                                                                       // 17151
    moduleArguments = arguments,                                                                                       // 17152
    query           = moduleArguments[0],                                                                              // 17153
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 17154
    methodInvoked   = (typeof query === 'string'),                                                                     // 17155
                                                                                                                       // 17156
    requestAnimationFrame = window.requestAnimationFrame                                                               // 17157
      || window.mozRequestAnimationFrame                                                                               // 17158
      || window.webkitRequestAnimationFrame                                                                            // 17159
      || window.msRequestAnimationFrame                                                                                // 17160
      || function(callback) { setTimeout(callback, 0); },                                                              // 17161
                                                                                                                       // 17162
    returnedValue                                                                                                      // 17163
  ;                                                                                                                    // 17164
  $allModules                                                                                                          // 17165
    .each(function(index) {                                                                                            // 17166
      var                                                                                                              // 17167
        $module  = $(this),                                                                                            // 17168
        element  = this,                                                                                               // 17169
                                                                                                                       // 17170
        // set at run time                                                                                             // 17171
        settings,                                                                                                      // 17172
        instance,                                                                                                      // 17173
                                                                                                                       // 17174
        error,                                                                                                         // 17175
        className,                                                                                                     // 17176
        metadata,                                                                                                      // 17177
        animationEnd,                                                                                                  // 17178
        animationName,                                                                                                 // 17179
                                                                                                                       // 17180
        namespace,                                                                                                     // 17181
        moduleNamespace,                                                                                               // 17182
        eventNamespace,                                                                                                // 17183
        module                                                                                                         // 17184
      ;                                                                                                                // 17185
                                                                                                                       // 17186
      module = {                                                                                                       // 17187
                                                                                                                       // 17188
        initialize: function() {                                                                                       // 17189
                                                                                                                       // 17190
          // get full settings                                                                                         // 17191
          settings        = module.get.settings.apply(element, moduleArguments);                                       // 17192
                                                                                                                       // 17193
          // shorthand                                                                                                 // 17194
          className       = settings.className;                                                                        // 17195
          error           = settings.error;                                                                            // 17196
          metadata        = settings.metadata;                                                                         // 17197
                                                                                                                       // 17198
          // define namespace                                                                                          // 17199
          eventNamespace  = '.' + settings.namespace;                                                                  // 17200
          moduleNamespace = 'module-' + settings.namespace;                                                            // 17201
          instance        = $module.data(moduleNamespace) || module;                                                   // 17202
                                                                                                                       // 17203
          // get vendor specific events                                                                                // 17204
          animationEnd    = module.get.animationEndEvent();                                                            // 17205
                                                                                                                       // 17206
          if(methodInvoked) {                                                                                          // 17207
            methodInvoked = module.invoke(query);                                                                      // 17208
          }                                                                                                            // 17209
                                                                                                                       // 17210
          // method not invoked, lets run an animation                                                                 // 17211
          if(methodInvoked === false) {                                                                                // 17212
            module.verbose('Converted arguments into settings object', settings);                                      // 17213
            if(settings.interval) {                                                                                    // 17214
              module.delay(settings.animate);                                                                          // 17215
            }                                                                                                          // 17216
            else  {                                                                                                    // 17217
              module.animate();                                                                                        // 17218
            }                                                                                                          // 17219
            module.instantiate();                                                                                      // 17220
          }                                                                                                            // 17221
        },                                                                                                             // 17222
                                                                                                                       // 17223
        instantiate: function() {                                                                                      // 17224
          module.verbose('Storing instance of module', module);                                                        // 17225
          instance = module;                                                                                           // 17226
          $module                                                                                                      // 17227
            .data(moduleNamespace, instance)                                                                           // 17228
          ;                                                                                                            // 17229
        },                                                                                                             // 17230
                                                                                                                       // 17231
        destroy: function() {                                                                                          // 17232
          module.verbose('Destroying previous module for', element);                                                   // 17233
          $module                                                                                                      // 17234
            .removeData(moduleNamespace)                                                                               // 17235
          ;                                                                                                            // 17236
        },                                                                                                             // 17237
                                                                                                                       // 17238
        refresh: function() {                                                                                          // 17239
          module.verbose('Refreshing display type on next animation');                                                 // 17240
          delete module.displayType;                                                                                   // 17241
        },                                                                                                             // 17242
                                                                                                                       // 17243
        forceRepaint: function() {                                                                                     // 17244
          module.verbose('Forcing element repaint');                                                                   // 17245
          var                                                                                                          // 17246
            $parentElement = $module.parent(),                                                                         // 17247
            $nextElement = $module.next()                                                                              // 17248
          ;                                                                                                            // 17249
          if($nextElement.length === 0) {                                                                              // 17250
            $module.detach().appendTo($parentElement);                                                                 // 17251
          }                                                                                                            // 17252
          else {                                                                                                       // 17253
            $module.detach().insertBefore($nextElement);                                                               // 17254
          }                                                                                                            // 17255
        },                                                                                                             // 17256
                                                                                                                       // 17257
        repaint: function() {                                                                                          // 17258
          module.verbose('Repainting element');                                                                        // 17259
          var                                                                                                          // 17260
            fakeAssignment = element.offsetWidth                                                                       // 17261
          ;                                                                                                            // 17262
        },                                                                                                             // 17263
                                                                                                                       // 17264
        delay: function(interval) {                                                                                    // 17265
          var                                                                                                          // 17266
            direction = module.get.animationDirection(),                                                               // 17267
            shouldReverse,                                                                                             // 17268
            delay                                                                                                      // 17269
          ;                                                                                                            // 17270
          if(!direction) {                                                                                             // 17271
            direction = module.can.transition()                                                                        // 17272
              ? module.get.direction()                                                                                 // 17273
              : 'static'                                                                                               // 17274
            ;                                                                                                          // 17275
          }                                                                                                            // 17276
          interval = (interval !== undefined)                                                                          // 17277
            ? interval                                                                                                 // 17278
            : settings.interval                                                                                        // 17279
          ;                                                                                                            // 17280
          shouldReverse = (settings.reverse == 'auto' && direction == className.outward);                              // 17281
          delay = (shouldReverse || settings.reverse == true)                                                          // 17282
            ? ($allModules.length - index) * settings.interval                                                         // 17283
            : index * settings.interval                                                                                // 17284
          ;                                                                                                            // 17285
          module.debug('Delaying animation by', delay);                                                                // 17286
          setTimeout(module.animate, delay);                                                                           // 17287
        },                                                                                                             // 17288
                                                                                                                       // 17289
        animate: function(overrideSettings) {                                                                          // 17290
          settings = overrideSettings || settings;                                                                     // 17291
          if(!module.is.supported()) {                                                                                 // 17292
            module.error(error.support);                                                                               // 17293
            return false;                                                                                              // 17294
          }                                                                                                            // 17295
          module.debug('Preparing animation', settings.animation);                                                     // 17296
          if(module.is.animating()) {                                                                                  // 17297
            if(settings.queue) {                                                                                       // 17298
              if(!settings.allowRepeats && module.has.direction() && module.is.occurring() && module.queuing !== true) {
                module.debug('Animation is currently occurring, preventing queueing same animation', settings.animation);
              }                                                                                                        // 17301
              else {                                                                                                   // 17302
                module.queue(settings.animation);                                                                      // 17303
              }                                                                                                        // 17304
              return false;                                                                                            // 17305
            }                                                                                                          // 17306
            else if(!settings.allowRepeats && module.is.occurring()) {                                                 // 17307
              module.debug('Animation is already occurring, will not execute repeated animation', settings.animation); // 17308
              return false;                                                                                            // 17309
            }                                                                                                          // 17310
            else {                                                                                                     // 17311
              module.debug('New animation started, completing previous early', settings.animation);                    // 17312
              instance.complete();                                                                                     // 17313
            }                                                                                                          // 17314
          }                                                                                                            // 17315
          if( module.can.animate() ) {                                                                                 // 17316
            module.set.animating(settings.animation);                                                                  // 17317
          }                                                                                                            // 17318
          else {                                                                                                       // 17319
            module.error(error.noAnimation, settings.animation, element);                                              // 17320
          }                                                                                                            // 17321
        },                                                                                                             // 17322
                                                                                                                       // 17323
        reset: function() {                                                                                            // 17324
          module.debug('Resetting animation to beginning conditions');                                                 // 17325
          module.remove.animationCallbacks();                                                                          // 17326
          module.restore.conditions();                                                                                 // 17327
          module.remove.animating();                                                                                   // 17328
        },                                                                                                             // 17329
                                                                                                                       // 17330
        queue: function(animation) {                                                                                   // 17331
          module.debug('Queueing animation of', animation);                                                            // 17332
          module.queuing = true;                                                                                       // 17333
          $module                                                                                                      // 17334
            .one(animationEnd + '.queue' + eventNamespace, function() {                                                // 17335
              module.queuing = false;                                                                                  // 17336
              module.repaint();                                                                                        // 17337
              module.animate.apply(this, settings);                                                                    // 17338
            })                                                                                                         // 17339
          ;                                                                                                            // 17340
        },                                                                                                             // 17341
                                                                                                                       // 17342
        complete: function (event) {                                                                                   // 17343
          module.debug('Animation complete', settings.animation);                                                      // 17344
          module.remove.completeCallback();                                                                            // 17345
          module.remove.failSafe();                                                                                    // 17346
          if(!module.is.looping()) {                                                                                   // 17347
            if( module.is.outward() ) {                                                                                // 17348
              module.verbose('Animation is outward, hiding element');                                                  // 17349
              module.restore.conditions();                                                                             // 17350
              module.hide();                                                                                           // 17351
            }                                                                                                          // 17352
            else if( module.is.inward() ) {                                                                            // 17353
              module.verbose('Animation is outward, showing element');                                                 // 17354
              module.restore.conditions();                                                                             // 17355
              module.show();                                                                                           // 17356
            }                                                                                                          // 17357
            else {                                                                                                     // 17358
              module.restore.conditions();                                                                             // 17359
            }                                                                                                          // 17360
          }                                                                                                            // 17361
        },                                                                                                             // 17362
                                                                                                                       // 17363
        force: {                                                                                                       // 17364
          visible: function() {                                                                                        // 17365
            var                                                                                                        // 17366
              style          = $module.attr('style'),                                                                  // 17367
              userStyle      = module.get.userStyle(),                                                                 // 17368
              displayType    = module.get.displayType(),                                                               // 17369
              overrideStyle  = userStyle + 'display: ' + displayType + ' !important;',                                 // 17370
              currentDisplay = $module.css('display'),                                                                 // 17371
              emptyStyle     = (style === undefined || style === '')                                                   // 17372
            ;                                                                                                          // 17373
            if(currentDisplay !== displayType) {                                                                       // 17374
              module.verbose('Overriding default display to show element', displayType);                               // 17375
              $module                                                                                                  // 17376
                .attr('style', overrideStyle)                                                                          // 17377
              ;                                                                                                        // 17378
            }                                                                                                          // 17379
            else if(emptyStyle) {                                                                                      // 17380
              $module.removeAttr('style');                                                                             // 17381
            }                                                                                                          // 17382
          },                                                                                                           // 17383
          hidden: function() {                                                                                         // 17384
            var                                                                                                        // 17385
              style          = $module.attr('style'),                                                                  // 17386
              currentDisplay = $module.css('display'),                                                                 // 17387
              emptyStyle     = (style === undefined || style === '')                                                   // 17388
            ;                                                                                                          // 17389
            if(currentDisplay !== 'none' && !module.is.hidden()) {                                                     // 17390
              module.verbose('Overriding default display to hide element');                                            // 17391
              $module                                                                                                  // 17392
                .css('display', 'none')                                                                                // 17393
              ;                                                                                                        // 17394
            }                                                                                                          // 17395
            else if(emptyStyle) {                                                                                      // 17396
              $module                                                                                                  // 17397
                .removeAttr('style')                                                                                   // 17398
              ;                                                                                                        // 17399
            }                                                                                                          // 17400
          }                                                                                                            // 17401
        },                                                                                                             // 17402
                                                                                                                       // 17403
        has: {                                                                                                         // 17404
          direction: function(animation) {                                                                             // 17405
            var                                                                                                        // 17406
              hasDirection = false                                                                                     // 17407
            ;                                                                                                          // 17408
            animation = animation || settings.animation;                                                               // 17409
            if(typeof animation === 'string') {                                                                        // 17410
              animation = animation.split(' ');                                                                        // 17411
              $.each(animation, function(index, word){                                                                 // 17412
                if(word === className.inward || word === className.outward) {                                          // 17413
                  hasDirection = true;                                                                                 // 17414
                }                                                                                                      // 17415
              });                                                                                                      // 17416
            }                                                                                                          // 17417
            return hasDirection;                                                                                       // 17418
          },                                                                                                           // 17419
          inlineDisplay: function() {                                                                                  // 17420
            var                                                                                                        // 17421
              style = $module.attr('style') || ''                                                                      // 17422
            ;                                                                                                          // 17423
            return $.isArray(style.match(/display.*?;/, ''));                                                          // 17424
          }                                                                                                            // 17425
        },                                                                                                             // 17426
                                                                                                                       // 17427
        set: {                                                                                                         // 17428
          animating: function(animation) {                                                                             // 17429
            var                                                                                                        // 17430
              animationClass,                                                                                          // 17431
              direction                                                                                                // 17432
            ;                                                                                                          // 17433
            // remove previous callbacks                                                                               // 17434
            module.remove.completeCallback();                                                                          // 17435
                                                                                                                       // 17436
            // determine exact animation                                                                               // 17437
            animation      = animation || settings.animation;                                                          // 17438
            animationClass = module.get.animationClass(animation);                                                     // 17439
                                                                                                                       // 17440
            // save animation class in cache to restore class names                                                    // 17441
            module.save.animation(animationClass);                                                                     // 17442
                                                                                                                       // 17443
            // override display if necessary so animation appears visibly                                              // 17444
            module.force.visible();                                                                                    // 17445
                                                                                                                       // 17446
            module.remove.hidden();                                                                                    // 17447
            module.remove.direction();                                                                                 // 17448
                                                                                                                       // 17449
            module.start.animation(animationClass);                                                                    // 17450
                                                                                                                       // 17451
          },                                                                                                           // 17452
          duration: function(animationName, duration) {                                                                // 17453
            duration = duration || settings.duration;                                                                  // 17454
            duration = (typeof duration == 'number')                                                                   // 17455
              ? duration + 'ms'                                                                                        // 17456
              : duration                                                                                               // 17457
            ;                                                                                                          // 17458
            if(duration || duration === 0) {                                                                           // 17459
              module.verbose('Setting animation duration', duration);                                                  // 17460
              $module                                                                                                  // 17461
                .css({                                                                                                 // 17462
                  'animation-duration':  duration                                                                      // 17463
                })                                                                                                     // 17464
              ;                                                                                                        // 17465
            }                                                                                                          // 17466
          },                                                                                                           // 17467
          direction: function(direction) {                                                                             // 17468
            direction = direction || module.get.direction();                                                           // 17469
            if(direction == className.inward) {                                                                        // 17470
              module.set.inward();                                                                                     // 17471
            }                                                                                                          // 17472
            else {                                                                                                     // 17473
              module.set.outward();                                                                                    // 17474
            }                                                                                                          // 17475
          },                                                                                                           // 17476
          looping: function() {                                                                                        // 17477
            module.debug('Transition set to loop');                                                                    // 17478
            $module                                                                                                    // 17479
              .addClass(className.looping)                                                                             // 17480
            ;                                                                                                          // 17481
          },                                                                                                           // 17482
          hidden: function() {                                                                                         // 17483
            $module                                                                                                    // 17484
              .addClass(className.transition)                                                                          // 17485
              .addClass(className.hidden)                                                                              // 17486
            ;                                                                                                          // 17487
          },                                                                                                           // 17488
          inward: function() {                                                                                         // 17489
            module.debug('Setting direction to inward');                                                               // 17490
            $module                                                                                                    // 17491
              .removeClass(className.outward)                                                                          // 17492
              .addClass(className.inward)                                                                              // 17493
            ;                                                                                                          // 17494
          },                                                                                                           // 17495
          outward: function() {                                                                                        // 17496
            module.debug('Setting direction to outward');                                                              // 17497
            $module                                                                                                    // 17498
              .removeClass(className.inward)                                                                           // 17499
              .addClass(className.outward)                                                                             // 17500
            ;                                                                                                          // 17501
          },                                                                                                           // 17502
          visible: function() {                                                                                        // 17503
            $module                                                                                                    // 17504
              .addClass(className.transition)                                                                          // 17505
              .addClass(className.visible)                                                                             // 17506
            ;                                                                                                          // 17507
          }                                                                                                            // 17508
        },                                                                                                             // 17509
                                                                                                                       // 17510
        start: {                                                                                                       // 17511
          animation: function(animationClass) {                                                                        // 17512
            animationClass = animationClass || module.get.animationClass();                                            // 17513
            module.debug('Starting tween', animationClass);                                                            // 17514
            $module                                                                                                    // 17515
              .addClass(animationClass)                                                                                // 17516
              .one(animationEnd + '.complete' + eventNamespace, module.complete)                                       // 17517
            ;                                                                                                          // 17518
            if(settings.useFailSafe) {                                                                                 // 17519
              module.add.failSafe();                                                                                   // 17520
            }                                                                                                          // 17521
            module.set.duration(settings.duration);                                                                    // 17522
            settings.onStart.call(element);                                                                            // 17523
          }                                                                                                            // 17524
        },                                                                                                             // 17525
                                                                                                                       // 17526
        save: {                                                                                                        // 17527
          animation: function(animation) {                                                                             // 17528
            if(!module.cache) {                                                                                        // 17529
              module.cache = {};                                                                                       // 17530
            }                                                                                                          // 17531
            module.cache.animation = animation;                                                                        // 17532
          },                                                                                                           // 17533
          displayType: function(displayType) {                                                                         // 17534
            if(displayType !== 'none') {                                                                               // 17535
              $module.data(metadata.displayType, displayType);                                                         // 17536
            }                                                                                                          // 17537
          },                                                                                                           // 17538
          transitionExists: function(animation, exists) {                                                              // 17539
            $.fn.transition.exists[animation] = exists;                                                                // 17540
            module.verbose('Saving existence of transition', animation, exists);                                       // 17541
          }                                                                                                            // 17542
        },                                                                                                             // 17543
                                                                                                                       // 17544
        restore: {                                                                                                     // 17545
          conditions: function() {                                                                                     // 17546
            var                                                                                                        // 17547
              animation = module.get.currentAnimation()                                                                // 17548
            ;                                                                                                          // 17549
            if(animation) {                                                                                            // 17550
              $module                                                                                                  // 17551
                .removeClass(animation)                                                                                // 17552
              ;                                                                                                        // 17553
              module.verbose('Removing animation class', module.cache);                                                // 17554
            }                                                                                                          // 17555
            module.remove.duration();                                                                                  // 17556
          }                                                                                                            // 17557
        },                                                                                                             // 17558
                                                                                                                       // 17559
        add: {                                                                                                         // 17560
          failSafe: function() {                                                                                       // 17561
            var                                                                                                        // 17562
              duration = module.get.duration()                                                                         // 17563
            ;                                                                                                          // 17564
            module.timer = setTimeout(function() {                                                                     // 17565
              $module.triggerHandler(animationEnd);                                                                    // 17566
            }, duration + settings.failSafeDelay);                                                                     // 17567
            module.verbose('Adding fail safe timer', module.timer);                                                    // 17568
          }                                                                                                            // 17569
        },                                                                                                             // 17570
                                                                                                                       // 17571
        remove: {                                                                                                      // 17572
          animating: function() {                                                                                      // 17573
            $module.removeClass(className.animating);                                                                  // 17574
          },                                                                                                           // 17575
          animationCallbacks: function() {                                                                             // 17576
            module.remove.queueCallback();                                                                             // 17577
            module.remove.completeCallback();                                                                          // 17578
          },                                                                                                           // 17579
          queueCallback: function() {                                                                                  // 17580
            $module.off('.queue' + eventNamespace);                                                                    // 17581
          },                                                                                                           // 17582
          completeCallback: function() {                                                                               // 17583
            $module.off('.complete' + eventNamespace);                                                                 // 17584
          },                                                                                                           // 17585
          display: function() {                                                                                        // 17586
            $module.css('display', '');                                                                                // 17587
          },                                                                                                           // 17588
          direction: function() {                                                                                      // 17589
            $module                                                                                                    // 17590
              .removeClass(className.inward)                                                                           // 17591
              .removeClass(className.outward)                                                                          // 17592
            ;                                                                                                          // 17593
          },                                                                                                           // 17594
          duration: function() {                                                                                       // 17595
            $module                                                                                                    // 17596
              .css('animation-duration', '')                                                                           // 17597
            ;                                                                                                          // 17598
          },                                                                                                           // 17599
          failSafe: function() {                                                                                       // 17600
            module.verbose('Removing fail safe timer', module.timer);                                                  // 17601
            if(module.timer) {                                                                                         // 17602
              clearTimeout(module.timer);                                                                              // 17603
            }                                                                                                          // 17604
          },                                                                                                           // 17605
          hidden: function() {                                                                                         // 17606
            $module.removeClass(className.hidden);                                                                     // 17607
          },                                                                                                           // 17608
          visible: function() {                                                                                        // 17609
            $module.removeClass(className.visible);                                                                    // 17610
          },                                                                                                           // 17611
          looping: function() {                                                                                        // 17612
            module.debug('Transitions are no longer looping');                                                         // 17613
            if( module.is.looping() ) {                                                                                // 17614
              module.reset();                                                                                          // 17615
              $module                                                                                                  // 17616
                .removeClass(className.looping)                                                                        // 17617
              ;                                                                                                        // 17618
            }                                                                                                          // 17619
          },                                                                                                           // 17620
          transition: function() {                                                                                     // 17621
            $module                                                                                                    // 17622
              .removeClass(className.visible)                                                                          // 17623
              .removeClass(className.hidden)                                                                           // 17624
            ;                                                                                                          // 17625
          }                                                                                                            // 17626
        },                                                                                                             // 17627
        get: {                                                                                                         // 17628
          settings: function(animation, duration, onComplete) {                                                        // 17629
            // single settings object                                                                                  // 17630
            if(typeof animation == 'object') {                                                                         // 17631
              return $.extend(true, {}, $.fn.transition.settings, animation);                                          // 17632
            }                                                                                                          // 17633
            // all arguments provided                                                                                  // 17634
            else if(typeof onComplete == 'function') {                                                                 // 17635
              return $.extend({}, $.fn.transition.settings, {                                                          // 17636
                animation  : animation,                                                                                // 17637
                onComplete : onComplete,                                                                               // 17638
                duration   : duration                                                                                  // 17639
              });                                                                                                      // 17640
            }                                                                                                          // 17641
            // only duration provided                                                                                  // 17642
            else if(typeof duration == 'string' || typeof duration == 'number') {                                      // 17643
              return $.extend({}, $.fn.transition.settings, {                                                          // 17644
                animation : animation,                                                                                 // 17645
                duration  : duration                                                                                   // 17646
              });                                                                                                      // 17647
            }                                                                                                          // 17648
            // duration is actually settings object                                                                    // 17649
            else if(typeof duration == 'object') {                                                                     // 17650
              return $.extend({}, $.fn.transition.settings, duration, {                                                // 17651
                animation : animation                                                                                  // 17652
              });                                                                                                      // 17653
            }                                                                                                          // 17654
            // duration is actually callback                                                                           // 17655
            else if(typeof duration == 'function') {                                                                   // 17656
              return $.extend({}, $.fn.transition.settings, {                                                          // 17657
                animation  : animation,                                                                                // 17658
                onComplete : duration                                                                                  // 17659
              });                                                                                                      // 17660
            }                                                                                                          // 17661
            // only animation provided                                                                                 // 17662
            else {                                                                                                     // 17663
              return $.extend({}, $.fn.transition.settings, {                                                          // 17664
                animation : animation                                                                                  // 17665
              });                                                                                                      // 17666
            }                                                                                                          // 17667
            return $.fn.transition.settings;                                                                           // 17668
          },                                                                                                           // 17669
          animationClass: function(animation) {                                                                        // 17670
            var                                                                                                        // 17671
              animationClass = animation || settings.animation,                                                        // 17672
              directionClass = (module.can.transition() && !module.has.direction())                                    // 17673
                ? module.get.direction() + ' '                                                                         // 17674
                : ''                                                                                                   // 17675
            ;                                                                                                          // 17676
            return className.animating + ' '                                                                           // 17677
              + className.transition + ' '                                                                             // 17678
              + directionClass                                                                                         // 17679
              + animationClass                                                                                         // 17680
            ;                                                                                                          // 17681
          },                                                                                                           // 17682
          currentAnimation: function() {                                                                               // 17683
            return (module.cache && module.cache.animation !== undefined)                                              // 17684
              ? module.cache.animation                                                                                 // 17685
              : false                                                                                                  // 17686
            ;                                                                                                          // 17687
          },                                                                                                           // 17688
          currentDirection: function() {                                                                               // 17689
            return module.is.inward()                                                                                  // 17690
              ? className.inward                                                                                       // 17691
              : className.outward                                                                                      // 17692
            ;                                                                                                          // 17693
          },                                                                                                           // 17694
          direction: function() {                                                                                      // 17695
            return module.is.hidden() || !module.is.visible()                                                          // 17696
              ? className.inward                                                                                       // 17697
              : className.outward                                                                                      // 17698
            ;                                                                                                          // 17699
          },                                                                                                           // 17700
          animationDirection: function(animation) {                                                                    // 17701
            var                                                                                                        // 17702
              direction                                                                                                // 17703
            ;                                                                                                          // 17704
            animation = animation || settings.animation;                                                               // 17705
            if(typeof animation === 'string') {                                                                        // 17706
              animation = animation.split(' ');                                                                        // 17707
              // search animation name for out/in class                                                                // 17708
              $.each(animation, function(index, word){                                                                 // 17709
                if(word === className.inward) {                                                                        // 17710
                  direction = className.inward;                                                                        // 17711
                }                                                                                                      // 17712
                else if(word === className.outward) {                                                                  // 17713
                  direction = className.outward;                                                                       // 17714
                }                                                                                                      // 17715
              });                                                                                                      // 17716
            }                                                                                                          // 17717
            // return found direction                                                                                  // 17718
            if(direction) {                                                                                            // 17719
              return direction;                                                                                        // 17720
            }                                                                                                          // 17721
            return false;                                                                                              // 17722
          },                                                                                                           // 17723
          duration: function(duration) {                                                                               // 17724
            duration = duration || settings.duration;                                                                  // 17725
            if(duration === false) {                                                                                   // 17726
              duration = $module.css('animation-duration') || 0;                                                       // 17727
            }                                                                                                          // 17728
            return (typeof duration === 'string')                                                                      // 17729
              ? (duration.indexOf('ms') > -1)                                                                          // 17730
                ? parseFloat(duration)                                                                                 // 17731
                : parseFloat(duration) * 1000                                                                          // 17732
              : duration                                                                                               // 17733
            ;                                                                                                          // 17734
          },                                                                                                           // 17735
          displayType: function() {                                                                                    // 17736
            if(settings.displayType) {                                                                                 // 17737
              return settings.displayType;                                                                             // 17738
            }                                                                                                          // 17739
            if($module.data(metadata.displayType) === undefined) {                                                     // 17740
              // create fake element to determine display state                                                        // 17741
              module.can.transition(true);                                                                             // 17742
            }                                                                                                          // 17743
            return $module.data(metadata.displayType);                                                                 // 17744
          },                                                                                                           // 17745
          userStyle: function(style) {                                                                                 // 17746
            style = style || $module.attr('style') || '';                                                              // 17747
            return style.replace(/display.*?;/, '');                                                                   // 17748
          },                                                                                                           // 17749
          transitionExists: function(animation) {                                                                      // 17750
            return $.fn.transition.exists[animation];                                                                  // 17751
          },                                                                                                           // 17752
          animationStartEvent: function() {                                                                            // 17753
            var                                                                                                        // 17754
              element     = document.createElement('div'),                                                             // 17755
              animations  = {                                                                                          // 17756
                'animation'       :'animationstart',                                                                   // 17757
                'OAnimation'      :'oAnimationStart',                                                                  // 17758
                'MozAnimation'    :'mozAnimationStart',                                                                // 17759
                'WebkitAnimation' :'webkitAnimationStart'                                                              // 17760
              },                                                                                                       // 17761
              animation                                                                                                // 17762
            ;                                                                                                          // 17763
            for(animation in animations){                                                                              // 17764
              if( element.style[animation] !== undefined ){                                                            // 17765
                return animations[animation];                                                                          // 17766
              }                                                                                                        // 17767
            }                                                                                                          // 17768
            return false;                                                                                              // 17769
          },                                                                                                           // 17770
          animationEndEvent: function() {                                                                              // 17771
            var                                                                                                        // 17772
              element     = document.createElement('div'),                                                             // 17773
              animations  = {                                                                                          // 17774
                'animation'       :'animationend',                                                                     // 17775
                'OAnimation'      :'oAnimationEnd',                                                                    // 17776
                'MozAnimation'    :'mozAnimationEnd',                                                                  // 17777
                'WebkitAnimation' :'webkitAnimationEnd'                                                                // 17778
              },                                                                                                       // 17779
              animation                                                                                                // 17780
            ;                                                                                                          // 17781
            for(animation in animations){                                                                              // 17782
              if( element.style[animation] !== undefined ){                                                            // 17783
                return animations[animation];                                                                          // 17784
              }                                                                                                        // 17785
            }                                                                                                          // 17786
            return false;                                                                                              // 17787
          }                                                                                                            // 17788
                                                                                                                       // 17789
        },                                                                                                             // 17790
                                                                                                                       // 17791
        can: {                                                                                                         // 17792
          transition: function(forced) {                                                                               // 17793
            var                                                                                                        // 17794
              animation         = settings.animation,                                                                  // 17795
              transitionExists  = module.get.transitionExists(animation),                                              // 17796
              elementClass,                                                                                            // 17797
              tagName,                                                                                                 // 17798
              $clone,                                                                                                  // 17799
              currentAnimation,                                                                                        // 17800
              inAnimation,                                                                                             // 17801
              directionExists,                                                                                         // 17802
              displayType                                                                                              // 17803
            ;                                                                                                          // 17804
            if( transitionExists === undefined || forced) {                                                            // 17805
              module.verbose('Determining whether animation exists');                                                  // 17806
              elementClass = $module.attr('class');                                                                    // 17807
              tagName      = $module.prop('tagName');                                                                  // 17808
                                                                                                                       // 17809
              $clone = $('<' + tagName + ' />').addClass( elementClass ).insertAfter($module);                         // 17810
              currentAnimation = $clone                                                                                // 17811
                .addClass(animation)                                                                                   // 17812
                .removeClass(className.inward)                                                                         // 17813
                .removeClass(className.outward)                                                                        // 17814
                .addClass(className.animating)                                                                         // 17815
                .addClass(className.transition)                                                                        // 17816
                .css('animationName')                                                                                  // 17817
              ;                                                                                                        // 17818
              inAnimation = $clone                                                                                     // 17819
                .addClass(className.inward)                                                                            // 17820
                .css('animationName')                                                                                  // 17821
              ;                                                                                                        // 17822
              displayType = $clone                                                                                     // 17823
                .attr('class', elementClass)                                                                           // 17824
                .removeAttr('style')                                                                                   // 17825
                .removeClass(className.hidden)                                                                         // 17826
                .removeClass(className.visible)                                                                        // 17827
                .show()                                                                                                // 17828
                .css('display')                                                                                        // 17829
              ;                                                                                                        // 17830
              module.verbose('Determining final display state', displayType);                                          // 17831
              module.save.displayType(displayType);                                                                    // 17832
                                                                                                                       // 17833
              $clone.remove();                                                                                         // 17834
              if(currentAnimation != inAnimation) {                                                                    // 17835
                module.debug('Direction exists for animation', animation);                                             // 17836
                directionExists = true;                                                                                // 17837
              }                                                                                                        // 17838
              else if(currentAnimation == 'none' || !currentAnimation) {                                               // 17839
                module.debug('No animation defined in css', animation);                                                // 17840
                return;                                                                                                // 17841
              }                                                                                                        // 17842
              else {                                                                                                   // 17843
                module.debug('Static animation found', animation, displayType);                                        // 17844
                directionExists = false;                                                                               // 17845
              }                                                                                                        // 17846
              module.save.transitionExists(animation, directionExists);                                                // 17847
            }                                                                                                          // 17848
            return (transitionExists !== undefined)                                                                    // 17849
              ? transitionExists                                                                                       // 17850
              : directionExists                                                                                        // 17851
            ;                                                                                                          // 17852
          },                                                                                                           // 17853
          animate: function() {                                                                                        // 17854
            // can transition does not return a value if animation does not exist                                      // 17855
            return (module.can.transition() !== undefined);                                                            // 17856
          }                                                                                                            // 17857
        },                                                                                                             // 17858
                                                                                                                       // 17859
        is: {                                                                                                          // 17860
          animating: function() {                                                                                      // 17861
            return $module.hasClass(className.animating);                                                              // 17862
          },                                                                                                           // 17863
          inward: function() {                                                                                         // 17864
            return $module.hasClass(className.inward);                                                                 // 17865
          },                                                                                                           // 17866
          outward: function() {                                                                                        // 17867
            return $module.hasClass(className.outward);                                                                // 17868
          },                                                                                                           // 17869
          looping: function() {                                                                                        // 17870
            return $module.hasClass(className.looping);                                                                // 17871
          },                                                                                                           // 17872
          occurring: function(animation) {                                                                             // 17873
            animation = animation || settings.animation;                                                               // 17874
            animation = '.' + animation.replace(' ', '.');                                                             // 17875
            return ( $module.filter(animation).length > 0 );                                                           // 17876
          },                                                                                                           // 17877
          visible: function() {                                                                                        // 17878
            return $module.is(':visible');                                                                             // 17879
          },                                                                                                           // 17880
          hidden: function() {                                                                                         // 17881
            return $module.css('visibility') === 'hidden';                                                             // 17882
          },                                                                                                           // 17883
          supported: function() {                                                                                      // 17884
            return(animationEnd !== false);                                                                            // 17885
          }                                                                                                            // 17886
        },                                                                                                             // 17887
                                                                                                                       // 17888
        hide: function() {                                                                                             // 17889
          module.verbose('Hiding element');                                                                            // 17890
          if( module.is.animating() ) {                                                                                // 17891
            module.reset();                                                                                            // 17892
          }                                                                                                            // 17893
          element.blur(); // IE will trigger focus change if element is not blurred before hiding                      // 17894
          module.remove.display();                                                                                     // 17895
          module.remove.visible();                                                                                     // 17896
          module.set.hidden();                                                                                         // 17897
          module.force.hidden();                                                                                       // 17898
          settings.onHide.call(element);                                                                               // 17899
          settings.onComplete.call(element);                                                                           // 17900
          // module.repaint();                                                                                         // 17901
        },                                                                                                             // 17902
                                                                                                                       // 17903
        show: function(display) {                                                                                      // 17904
          module.verbose('Showing element', display);                                                                  // 17905
          module.remove.hidden();                                                                                      // 17906
          module.set.visible();                                                                                        // 17907
          module.force.visible();                                                                                      // 17908
          settings.onShow.call(element);                                                                               // 17909
          settings.onComplete.call(element);                                                                           // 17910
          // module.repaint();                                                                                         // 17911
        },                                                                                                             // 17912
                                                                                                                       // 17913
        toggle: function() {                                                                                           // 17914
          if( module.is.visible() ) {                                                                                  // 17915
            module.hide();                                                                                             // 17916
          }                                                                                                            // 17917
          else {                                                                                                       // 17918
            module.show();                                                                                             // 17919
          }                                                                                                            // 17920
        },                                                                                                             // 17921
                                                                                                                       // 17922
        stop: function() {                                                                                             // 17923
          module.debug('Stopping current animation');                                                                  // 17924
          $module.triggerHandler(animationEnd);                                                                        // 17925
        },                                                                                                             // 17926
                                                                                                                       // 17927
        stopAll: function() {                                                                                          // 17928
          module.debug('Stopping all animation');                                                                      // 17929
          module.remove.queueCallback();                                                                               // 17930
          $module.triggerHandler(animationEnd);                                                                        // 17931
        },                                                                                                             // 17932
                                                                                                                       // 17933
        clear: {                                                                                                       // 17934
          queue: function() {                                                                                          // 17935
            module.debug('Clearing animation queue');                                                                  // 17936
            module.remove.queueCallback();                                                                             // 17937
          }                                                                                                            // 17938
        },                                                                                                             // 17939
                                                                                                                       // 17940
        enable: function() {                                                                                           // 17941
          module.verbose('Starting animation');                                                                        // 17942
          $module.removeClass(className.disabled);                                                                     // 17943
        },                                                                                                             // 17944
                                                                                                                       // 17945
        disable: function() {                                                                                          // 17946
          module.debug('Stopping animation');                                                                          // 17947
          $module.addClass(className.disabled);                                                                        // 17948
        },                                                                                                             // 17949
                                                                                                                       // 17950
        setting: function(name, value) {                                                                               // 17951
          module.debug('Changing setting', name, value);                                                               // 17952
          if( $.isPlainObject(name) ) {                                                                                // 17953
            $.extend(true, settings, name);                                                                            // 17954
          }                                                                                                            // 17955
          else if(value !== undefined) {                                                                               // 17956
            settings[name] = value;                                                                                    // 17957
          }                                                                                                            // 17958
          else {                                                                                                       // 17959
            return settings[name];                                                                                     // 17960
          }                                                                                                            // 17961
        },                                                                                                             // 17962
        internal: function(name, value) {                                                                              // 17963
          if( $.isPlainObject(name) ) {                                                                                // 17964
            $.extend(true, module, name);                                                                              // 17965
          }                                                                                                            // 17966
          else if(value !== undefined) {                                                                               // 17967
            module[name] = value;                                                                                      // 17968
          }                                                                                                            // 17969
          else {                                                                                                       // 17970
            return module[name];                                                                                       // 17971
          }                                                                                                            // 17972
        },                                                                                                             // 17973
        debug: function() {                                                                                            // 17974
          if(settings.debug) {                                                                                         // 17975
            if(settings.performance) {                                                                                 // 17976
              module.performance.log(arguments);                                                                       // 17977
            }                                                                                                          // 17978
            else {                                                                                                     // 17979
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 17980
              module.debug.apply(console, arguments);                                                                  // 17981
            }                                                                                                          // 17982
          }                                                                                                            // 17983
        },                                                                                                             // 17984
        verbose: function() {                                                                                          // 17985
          if(settings.verbose && settings.debug) {                                                                     // 17986
            if(settings.performance) {                                                                                 // 17987
              module.performance.log(arguments);                                                                       // 17988
            }                                                                                                          // 17989
            else {                                                                                                     // 17990
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 17991
              module.verbose.apply(console, arguments);                                                                // 17992
            }                                                                                                          // 17993
          }                                                                                                            // 17994
        },                                                                                                             // 17995
        error: function() {                                                                                            // 17996
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 17997
          module.error.apply(console, arguments);                                                                      // 17998
        },                                                                                                             // 17999
        performance: {                                                                                                 // 18000
          log: function(message) {                                                                                     // 18001
            var                                                                                                        // 18002
              currentTime,                                                                                             // 18003
              executionTime,                                                                                           // 18004
              previousTime                                                                                             // 18005
            ;                                                                                                          // 18006
            if(settings.performance) {                                                                                 // 18007
              currentTime   = new Date().getTime();                                                                    // 18008
              previousTime  = time || currentTime;                                                                     // 18009
              executionTime = currentTime - previousTime;                                                              // 18010
              time          = currentTime;                                                                             // 18011
              performance.push({                                                                                       // 18012
                'Name'           : message[0],                                                                         // 18013
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 18014
                'Element'        : element,                                                                            // 18015
                'Execution Time' : executionTime                                                                       // 18016
              });                                                                                                      // 18017
            }                                                                                                          // 18018
            clearTimeout(module.performance.timer);                                                                    // 18019
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 18020
          },                                                                                                           // 18021
          display: function() {                                                                                        // 18022
            var                                                                                                        // 18023
              title = settings.name + ':',                                                                             // 18024
              totalTime = 0                                                                                            // 18025
            ;                                                                                                          // 18026
            time = false;                                                                                              // 18027
            clearTimeout(module.performance.timer);                                                                    // 18028
            $.each(performance, function(index, data) {                                                                // 18029
              totalTime += data['Execution Time'];                                                                     // 18030
            });                                                                                                        // 18031
            title += ' ' + totalTime + 'ms';                                                                           // 18032
            if(moduleSelector) {                                                                                       // 18033
              title += ' \'' + moduleSelector + '\'';                                                                  // 18034
            }                                                                                                          // 18035
            if($allModules.length > 1) {                                                                               // 18036
              title += ' ' + '(' + $allModules.length + ')';                                                           // 18037
            }                                                                                                          // 18038
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 18039
              console.groupCollapsed(title);                                                                           // 18040
              if(console.table) {                                                                                      // 18041
                console.table(performance);                                                                            // 18042
              }                                                                                                        // 18043
              else {                                                                                                   // 18044
                $.each(performance, function(index, data) {                                                            // 18045
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 18046
                });                                                                                                    // 18047
              }                                                                                                        // 18048
              console.groupEnd();                                                                                      // 18049
            }                                                                                                          // 18050
            performance = [];                                                                                          // 18051
          }                                                                                                            // 18052
        },                                                                                                             // 18053
        // modified for transition to return invoke success                                                            // 18054
        invoke: function(query, passedArguments, context) {                                                            // 18055
          var                                                                                                          // 18056
            object = instance,                                                                                         // 18057
            maxDepth,                                                                                                  // 18058
            found,                                                                                                     // 18059
            response                                                                                                   // 18060
          ;                                                                                                            // 18061
          passedArguments = passedArguments || queryArguments;                                                         // 18062
          context         = element         || context;                                                                // 18063
          if(typeof query == 'string' && object !== undefined) {                                                       // 18064
            query    = query.split(/[\. ]/);                                                                           // 18065
            maxDepth = query.length - 1;                                                                               // 18066
            $.each(query, function(depth, value) {                                                                     // 18067
              var camelCaseValue = (depth != maxDepth)                                                                 // 18068
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 18069
                : query                                                                                                // 18070
              ;                                                                                                        // 18071
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 18072
                object = object[camelCaseValue];                                                                       // 18073
              }                                                                                                        // 18074
              else if( object[camelCaseValue] !== undefined ) {                                                        // 18075
                found = object[camelCaseValue];                                                                        // 18076
                return false;                                                                                          // 18077
              }                                                                                                        // 18078
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 18079
                object = object[value];                                                                                // 18080
              }                                                                                                        // 18081
              else if( object[value] !== undefined ) {                                                                 // 18082
                found = object[value];                                                                                 // 18083
                return false;                                                                                          // 18084
              }                                                                                                        // 18085
              else {                                                                                                   // 18086
                return false;                                                                                          // 18087
              }                                                                                                        // 18088
            });                                                                                                        // 18089
          }                                                                                                            // 18090
          if ( $.isFunction( found ) ) {                                                                               // 18091
            response = found.apply(context, passedArguments);                                                          // 18092
          }                                                                                                            // 18093
          else if(found !== undefined) {                                                                               // 18094
            response = found;                                                                                          // 18095
          }                                                                                                            // 18096
                                                                                                                       // 18097
          if($.isArray(returnedValue)) {                                                                               // 18098
            returnedValue.push(response);                                                                              // 18099
          }                                                                                                            // 18100
          else if(returnedValue !== undefined) {                                                                       // 18101
            returnedValue = [returnedValue, response];                                                                 // 18102
          }                                                                                                            // 18103
          else if(response !== undefined) {                                                                            // 18104
            returnedValue = response;                                                                                  // 18105
          }                                                                                                            // 18106
          return (found !== undefined)                                                                                 // 18107
            ? found                                                                                                    // 18108
            : false                                                                                                    // 18109
          ;                                                                                                            // 18110
        }                                                                                                              // 18111
      };                                                                                                               // 18112
      module.initialize();                                                                                             // 18113
    })                                                                                                                 // 18114
  ;                                                                                                                    // 18115
  return (returnedValue !== undefined)                                                                                 // 18116
    ? returnedValue                                                                                                    // 18117
    : this                                                                                                             // 18118
  ;                                                                                                                    // 18119
};                                                                                                                     // 18120
                                                                                                                       // 18121
// Records if CSS transition is available                                                                              // 18122
$.fn.transition.exists = {};                                                                                           // 18123
                                                                                                                       // 18124
$.fn.transition.settings = {                                                                                           // 18125
                                                                                                                       // 18126
  // module info                                                                                                       // 18127
  name          : 'Transition',                                                                                        // 18128
                                                                                                                       // 18129
  // debug content outputted to console                                                                                // 18130
  debug         : false,                                                                                               // 18131
                                                                                                                       // 18132
  // verbose debug output                                                                                              // 18133
  verbose       : false,                                                                                               // 18134
                                                                                                                       // 18135
  // performance data output                                                                                           // 18136
  performance   : true,                                                                                                // 18137
                                                                                                                       // 18138
  // event namespace                                                                                                   // 18139
  namespace     : 'transition',                                                                                        // 18140
                                                                                                                       // 18141
  // delay between animations in group                                                                                 // 18142
  interval      : 0,                                                                                                   // 18143
                                                                                                                       // 18144
  // whether group animations should be reversed                                                                       // 18145
  reverse       : 'auto',                                                                                              // 18146
                                                                                                                       // 18147
  // animation callback event                                                                                          // 18148
  onStart       : function() {},                                                                                       // 18149
  onComplete    : function() {},                                                                                       // 18150
  onShow        : function() {},                                                                                       // 18151
  onHide        : function() {},                                                                                       // 18152
                                                                                                                       // 18153
  // whether timeout should be used to ensure callback fires in cases animationend does not                            // 18154
  useFailSafe   : true,                                                                                                // 18155
                                                                                                                       // 18156
  // delay in ms for fail safe                                                                                         // 18157
  failSafeDelay : 100,                                                                                                 // 18158
                                                                                                                       // 18159
  // whether EXACT animation can occur twice in a row                                                                  // 18160
  allowRepeats  : false,                                                                                               // 18161
                                                                                                                       // 18162
  // Override final display type on visible                                                                            // 18163
  displayType   : false,                                                                                               // 18164
                                                                                                                       // 18165
  // animation duration                                                                                                // 18166
  animation     : 'fade',                                                                                              // 18167
  duration      : false,                                                                                               // 18168
                                                                                                                       // 18169
  // new animations will occur after previous ones                                                                     // 18170
  queue         : true,                                                                                                // 18171
                                                                                                                       // 18172
  metadata : {                                                                                                         // 18173
    displayType: 'display'                                                                                             // 18174
  },                                                                                                                   // 18175
                                                                                                                       // 18176
  className   : {                                                                                                      // 18177
    animating  : 'animating',                                                                                          // 18178
    disabled   : 'disabled',                                                                                           // 18179
    hidden     : 'hidden',                                                                                             // 18180
    inward     : 'in',                                                                                                 // 18181
    loading    : 'loading',                                                                                            // 18182
    looping    : 'looping',                                                                                            // 18183
    outward    : 'out',                                                                                                // 18184
    transition : 'transition',                                                                                         // 18185
    visible    : 'visible'                                                                                             // 18186
  },                                                                                                                   // 18187
                                                                                                                       // 18188
  // possible errors                                                                                                   // 18189
  error: {                                                                                                             // 18190
    noAnimation : 'There is no css animation matching the one you specified. Please make sure your css is vendor prefixed, and you have included transition css.',
    repeated    : 'That animation is already occurring, cancelling repeated animation',                                // 18192
    method      : 'The method you called is not defined',                                                              // 18193
    support     : 'This browser does not support CSS animations'                                                       // 18194
  }                                                                                                                    // 18195
                                                                                                                       // 18196
};                                                                                                                     // 18197
                                                                                                                       // 18198
                                                                                                                       // 18199
})( jQuery, window , document );                                                                                       // 18200
                                                                                                                       // 18201
/*!                                                                                                                    // 18202
 * # Semantic UI 2.1.2 - API                                                                                           // 18203
 * http://github.com/semantic-org/semantic-ui/                                                                         // 18204
 *                                                                                                                     // 18205
 *                                                                                                                     // 18206
 * Copyright 2015 Contributors                                                                                         // 18207
 * Released under the MIT license                                                                                      // 18208
 * http://opensource.org/licenses/MIT                                                                                  // 18209
 *                                                                                                                     // 18210
 */                                                                                                                    // 18211
                                                                                                                       // 18212
;(function ( $, window, document, undefined ) {                                                                        // 18213
                                                                                                                       // 18214
"use strict";                                                                                                          // 18215
                                                                                                                       // 18216
$.api = $.fn.api = function(parameters) {                                                                              // 18217
                                                                                                                       // 18218
  var                                                                                                                  // 18219
    // use window context if none specified                                                                            // 18220
    $allModules     = $.isFunction(this)                                                                               // 18221
        ? $(window)                                                                                                    // 18222
        : $(this),                                                                                                     // 18223
    moduleSelector = $allModules.selector || '',                                                                       // 18224
    time           = new Date().getTime(),                                                                             // 18225
    performance    = [],                                                                                               // 18226
                                                                                                                       // 18227
    query          = arguments[0],                                                                                     // 18228
    methodInvoked  = (typeof query == 'string'),                                                                       // 18229
    queryArguments = [].slice.call(arguments, 1),                                                                      // 18230
                                                                                                                       // 18231
    returnedValue                                                                                                      // 18232
  ;                                                                                                                    // 18233
                                                                                                                       // 18234
  $allModules                                                                                                          // 18235
    .each(function() {                                                                                                 // 18236
      var                                                                                                              // 18237
        settings          = ( $.isPlainObject(parameters) )                                                            // 18238
          ? $.extend(true, {}, $.fn.api.settings, parameters)                                                          // 18239
          : $.extend({}, $.fn.api.settings),                                                                           // 18240
                                                                                                                       // 18241
        // internal aliases                                                                                            // 18242
        namespace       = settings.namespace,                                                                          // 18243
        metadata        = settings.metadata,                                                                           // 18244
        selector        = settings.selector,                                                                           // 18245
        error           = settings.error,                                                                              // 18246
        className       = settings.className,                                                                          // 18247
                                                                                                                       // 18248
        // define namespaces for modules                                                                               // 18249
        eventNamespace  = '.' + namespace,                                                                             // 18250
        moduleNamespace = 'module-' + namespace,                                                                       // 18251
                                                                                                                       // 18252
        // element that creates request                                                                                // 18253
        $module         = $(this),                                                                                     // 18254
        $form           = $module.closest(selector.form),                                                              // 18255
                                                                                                                       // 18256
        // context used for state                                                                                      // 18257
        $context        = (settings.stateContext)                                                                      // 18258
          ? $(settings.stateContext)                                                                                   // 18259
          : $module,                                                                                                   // 18260
                                                                                                                       // 18261
        // request details                                                                                             // 18262
        ajaxSettings,                                                                                                  // 18263
        requestSettings,                                                                                               // 18264
        url,                                                                                                           // 18265
        data,                                                                                                          // 18266
        requestStartTime,                                                                                              // 18267
                                                                                                                       // 18268
        // standard module                                                                                             // 18269
        element         = this,                                                                                        // 18270
        context         = $context[0],                                                                                 // 18271
        instance        = $module.data(moduleNamespace),                                                               // 18272
        module                                                                                                         // 18273
      ;                                                                                                                // 18274
                                                                                                                       // 18275
      module = {                                                                                                       // 18276
                                                                                                                       // 18277
        initialize: function() {                                                                                       // 18278
          if(!methodInvoked) {                                                                                         // 18279
            module.bind.events();                                                                                      // 18280
          }                                                                                                            // 18281
          module.instantiate();                                                                                        // 18282
        },                                                                                                             // 18283
                                                                                                                       // 18284
        instantiate: function() {                                                                                      // 18285
          module.verbose('Storing instance of module', module);                                                        // 18286
          instance = module;                                                                                           // 18287
          $module                                                                                                      // 18288
            .data(moduleNamespace, instance)                                                                           // 18289
          ;                                                                                                            // 18290
        },                                                                                                             // 18291
                                                                                                                       // 18292
        destroy: function() {                                                                                          // 18293
          module.verbose('Destroying previous module for', element);                                                   // 18294
          $module                                                                                                      // 18295
            .removeData(moduleNamespace)                                                                               // 18296
            .off(eventNamespace)                                                                                       // 18297
          ;                                                                                                            // 18298
        },                                                                                                             // 18299
                                                                                                                       // 18300
        bind: {                                                                                                        // 18301
          events: function() {                                                                                         // 18302
            var                                                                                                        // 18303
              triggerEvent = module.get.event()                                                                        // 18304
            ;                                                                                                          // 18305
            if( triggerEvent ) {                                                                                       // 18306
              module.verbose('Attaching API events to element', triggerEvent);                                         // 18307
              $module                                                                                                  // 18308
                .on(triggerEvent + eventNamespace, module.event.trigger)                                               // 18309
              ;                                                                                                        // 18310
            }                                                                                                          // 18311
            else if(settings.on == 'now') {                                                                            // 18312
              module.debug('Querying API endpoint immediately');                                                       // 18313
              module.query();                                                                                          // 18314
            }                                                                                                          // 18315
          }                                                                                                            // 18316
        },                                                                                                             // 18317
                                                                                                                       // 18318
        decode: {                                                                                                      // 18319
          json: function(response) {                                                                                   // 18320
            if(response !== undefined && typeof response == 'string') {                                                // 18321
              try {                                                                                                    // 18322
               response = JSON.parse(response);                                                                        // 18323
              }                                                                                                        // 18324
              catch(e) {                                                                                               // 18325
                // isnt json string                                                                                    // 18326
              }                                                                                                        // 18327
            }                                                                                                          // 18328
            return response;                                                                                           // 18329
          }                                                                                                            // 18330
        },                                                                                                             // 18331
                                                                                                                       // 18332
        read: {                                                                                                        // 18333
          cachedResponse: function(url) {                                                                              // 18334
            var                                                                                                        // 18335
              response                                                                                                 // 18336
            ;                                                                                                          // 18337
            if(window.Storage === undefined) {                                                                         // 18338
              module.error(error.noStorage);                                                                           // 18339
              return;                                                                                                  // 18340
            }                                                                                                          // 18341
            response = sessionStorage.getItem(url);                                                                    // 18342
            module.debug('Using cached response', url, response);                                                      // 18343
            response = module.decode.json(response);                                                                   // 18344
            return false;                                                                                              // 18345
          }                                                                                                            // 18346
        },                                                                                                             // 18347
        write: {                                                                                                       // 18348
          cachedResponse: function(url, response) {                                                                    // 18349
            if(response && response === '') {                                                                          // 18350
              module.debug('Response empty, not caching', response);                                                   // 18351
              return;                                                                                                  // 18352
            }                                                                                                          // 18353
            if(window.Storage === undefined) {                                                                         // 18354
              module.error(error.noStorage);                                                                           // 18355
              return;                                                                                                  // 18356
            }                                                                                                          // 18357
            if( $.isPlainObject(response) ) {                                                                          // 18358
              response = JSON.stringify(response);                                                                     // 18359
            }                                                                                                          // 18360
            sessionStorage.setItem(url, response);                                                                     // 18361
            module.verbose('Storing cached response for url', url, response);                                          // 18362
          }                                                                                                            // 18363
        },                                                                                                             // 18364
                                                                                                                       // 18365
        query: function() {                                                                                            // 18366
                                                                                                                       // 18367
          if(module.is.disabled()) {                                                                                   // 18368
            module.debug('Element is disabled API request aborted');                                                   // 18369
            return;                                                                                                    // 18370
          }                                                                                                            // 18371
                                                                                                                       // 18372
          if(module.is.loading()) {                                                                                    // 18373
            if(settings.interruptRequests) {                                                                           // 18374
              module.debug('Interrupting previous request');                                                           // 18375
              module.abort();                                                                                          // 18376
            }                                                                                                          // 18377
            else {                                                                                                     // 18378
              module.debug('Cancelling request, previous request is still pending');                                   // 18379
              return;                                                                                                  // 18380
            }                                                                                                          // 18381
          }                                                                                                            // 18382
                                                                                                                       // 18383
          // pass element metadata to url (value, text)                                                                // 18384
          if(settings.defaultData) {                                                                                   // 18385
            $.extend(true, settings.urlData, module.get.defaultData());                                                // 18386
          }                                                                                                            // 18387
                                                                                                                       // 18388
          // Add form content                                                                                          // 18389
          if(settings.serializeForm) {                                                                                 // 18390
            settings.data = module.add.formData(settings.data);                                                        // 18391
          }                                                                                                            // 18392
                                                                                                                       // 18393
          // call beforesend and get any settings changes                                                              // 18394
          requestSettings = module.get.settings();                                                                     // 18395
                                                                                                                       // 18396
          // check if before send cancelled request                                                                    // 18397
          if(requestSettings === false) {                                                                              // 18398
            module.cancelled = true;                                                                                   // 18399
            module.error(error.beforeSend);                                                                            // 18400
            return;                                                                                                    // 18401
          }                                                                                                            // 18402
          else {                                                                                                       // 18403
            module.cancelled = false;                                                                                  // 18404
          }                                                                                                            // 18405
                                                                                                                       // 18406
          // get url                                                                                                   // 18407
          url = module.get.templatedURL();                                                                             // 18408
                                                                                                                       // 18409
          if(!url && !module.is.mocked()) {                                                                            // 18410
            module.error(error.missingURL);                                                                            // 18411
            return;                                                                                                    // 18412
          }                                                                                                            // 18413
                                                                                                                       // 18414
          // replace variables                                                                                         // 18415
          url = module.add.urlData( url );                                                                             // 18416
                                                                                                                       // 18417
          // missing url parameters                                                                                    // 18418
          if( !url && !module.is.mocked()) {                                                                           // 18419
            return;                                                                                                    // 18420
          }                                                                                                            // 18421
                                                                                                                       // 18422
                                                                                                                       // 18423
          // look for jQuery ajax parameters in settings                                                               // 18424
          ajaxSettings = $.extend(true, {}, settings, {                                                                // 18425
            type       : settings.method || settings.type,                                                             // 18426
            data       : data,                                                                                         // 18427
            url        : settings.base + url,                                                                          // 18428
            beforeSend : settings.beforeXHR,                                                                           // 18429
            success    : function() {},                                                                                // 18430
            failure    : function() {},                                                                                // 18431
            complete   : function() {}                                                                                 // 18432
          });                                                                                                          // 18433
                                                                                                                       // 18434
          module.debug('Querying URL', ajaxSettings.url);                                                              // 18435
          module.verbose('Using AJAX settings', ajaxSettings);                                                         // 18436
                                                                                                                       // 18437
          if(settings.cache === 'local' && module.read.cachedResponse(url)) {                                          // 18438
            module.debug('Response returned from local cache');                                                        // 18439
            module.request = module.create.request();                                                                  // 18440
            module.request.resolveWith(context, [ module.read.cachedResponse(url) ]);                                  // 18441
            return;                                                                                                    // 18442
          }                                                                                                            // 18443
                                                                                                                       // 18444
          if( !settings.throttle ) {                                                                                   // 18445
            module.debug('Sending request', data, ajaxSettings.method);                                                // 18446
            module.send.request();                                                                                     // 18447
          }                                                                                                            // 18448
          else {                                                                                                       // 18449
            if(!settings.throttleFirstRequest && !module.timer) {                                                      // 18450
              module.debug('Sending request', data, ajaxSettings.method);                                              // 18451
              module.send.request();                                                                                   // 18452
              module.timer = setTimeout(function(){}, settings.throttle);                                              // 18453
            }                                                                                                          // 18454
            else {                                                                                                     // 18455
              module.debug('Throttling request', settings.throttle);                                                   // 18456
              clearTimeout(module.timer);                                                                              // 18457
              module.timer = setTimeout(function() {                                                                   // 18458
                if(module.timer) {                                                                                     // 18459
                  delete module.timer;                                                                                 // 18460
                }                                                                                                      // 18461
                module.debug('Sending throttled request', data, ajaxSettings.method);                                  // 18462
                module.send.request();                                                                                 // 18463
              }, settings.throttle);                                                                                   // 18464
            }                                                                                                          // 18465
          }                                                                                                            // 18466
                                                                                                                       // 18467
        },                                                                                                             // 18468
                                                                                                                       // 18469
        should: {                                                                                                      // 18470
          removeError: function() {                                                                                    // 18471
            return ( settings.hideError === true || (settings.hideError === 'auto' && !module.is.form()) );            // 18472
          }                                                                                                            // 18473
        },                                                                                                             // 18474
                                                                                                                       // 18475
        is: {                                                                                                          // 18476
          disabled: function() {                                                                                       // 18477
            return ($module.filter(selector.disabled).length > 0);                                                     // 18478
          },                                                                                                           // 18479
          form: function() {                                                                                           // 18480
            return $module.is('form') || $context.is('form');                                                          // 18481
          },                                                                                                           // 18482
          mocked: function() {                                                                                         // 18483
            return (settings.mockResponse || settings.mockResponseAsync);                                              // 18484
          },                                                                                                           // 18485
          input: function() {                                                                                          // 18486
            return $module.is('input');                                                                                // 18487
          },                                                                                                           // 18488
          loading: function() {                                                                                        // 18489
            return (module.request && module.request.state() == 'pending');                                            // 18490
          },                                                                                                           // 18491
          abortedRequest: function(xhr) {                                                                              // 18492
            if(xhr && xhr.readyState !== undefined && xhr.readyState === 0) {                                          // 18493
              module.verbose('XHR request determined to be aborted');                                                  // 18494
              return true;                                                                                             // 18495
            }                                                                                                          // 18496
            else {                                                                                                     // 18497
              module.verbose('XHR request was not aborted');                                                           // 18498
              return false;                                                                                            // 18499
            }                                                                                                          // 18500
          },                                                                                                           // 18501
          validResponse: function(response) {                                                                          // 18502
            if( (settings.dataType !== 'json' && settings.dataType !== 'jsonp') || !$.isFunction(settings.successTest) ) {
              module.verbose('Response is not JSON, skipping validation', settings.successTest, response);             // 18504
              return true;                                                                                             // 18505
            }                                                                                                          // 18506
            module.debug('Checking JSON returned success', settings.successTest, response);                            // 18507
            if( settings.successTest(response) ) {                                                                     // 18508
              module.debug('Response passed success test', response);                                                  // 18509
              return true;                                                                                             // 18510
            }                                                                                                          // 18511
            else {                                                                                                     // 18512
              module.debug('Response failed success test', response);                                                  // 18513
              return false;                                                                                            // 18514
            }                                                                                                          // 18515
          }                                                                                                            // 18516
        },                                                                                                             // 18517
                                                                                                                       // 18518
        was: {                                                                                                         // 18519
          cancelled: function() {                                                                                      // 18520
            return (module.cancelled || false);                                                                        // 18521
          },                                                                                                           // 18522
          succesful: function() {                                                                                      // 18523
            return (module.request && module.request.state() == 'resolved');                                           // 18524
          },                                                                                                           // 18525
          failure: function() {                                                                                        // 18526
            return (module.request && module.request.state() == 'rejected');                                           // 18527
          },                                                                                                           // 18528
          complete: function() {                                                                                       // 18529
            return (module.request && (module.request.state() == 'resolved' || module.request.state() == 'rejected') );
          }                                                                                                            // 18531
        },                                                                                                             // 18532
                                                                                                                       // 18533
        add: {                                                                                                         // 18534
          urlData: function(url, urlData) {                                                                            // 18535
            var                                                                                                        // 18536
              requiredVariables,                                                                                       // 18537
              optionalVariables                                                                                        // 18538
            ;                                                                                                          // 18539
            if(url) {                                                                                                  // 18540
              requiredVariables = url.match(settings.regExp.required);                                                 // 18541
              optionalVariables = url.match(settings.regExp.optional);                                                 // 18542
              urlData           = urlData || settings.urlData;                                                         // 18543
              if(requiredVariables) {                                                                                  // 18544
                module.debug('Looking for required URL variables', requiredVariables);                                 // 18545
                $.each(requiredVariables, function(index, templatedString) {                                           // 18546
                  var                                                                                                  // 18547
                    // allow legacy {$var} style                                                                       // 18548
                    variable = (templatedString.indexOf('$') !== -1)                                                   // 18549
                      ? templatedString.substr(2, templatedString.length - 3)                                          // 18550
                      : templatedString.substr(1, templatedString.length - 2),                                         // 18551
                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)                            // 18552
                      ? urlData[variable]                                                                              // 18553
                      : ($module.data(variable) !== undefined)                                                         // 18554
                        ? $module.data(variable)                                                                       // 18555
                        : ($context.data(variable) !== undefined)                                                      // 18556
                          ? $context.data(variable)                                                                    // 18557
                          : urlData[variable]                                                                          // 18558
                  ;                                                                                                    // 18559
                  // remove value                                                                                      // 18560
                  if(value === undefined) {                                                                            // 18561
                    module.error(error.requiredParameter, variable, url);                                              // 18562
                    url = false;                                                                                       // 18563
                    return false;                                                                                      // 18564
                  }                                                                                                    // 18565
                  else {                                                                                               // 18566
                    module.verbose('Found required variable', variable, value);                                        // 18567
                    value = (settings.encodeParameters)                                                                // 18568
                      ? module.get.urlEncodedValue(value)                                                              // 18569
                      : value                                                                                          // 18570
                    ;                                                                                                  // 18571
                    url = url.replace(templatedString, value);                                                         // 18572
                  }                                                                                                    // 18573
                });                                                                                                    // 18574
              }                                                                                                        // 18575
              if(optionalVariables) {                                                                                  // 18576
                module.debug('Looking for optional URL variables', requiredVariables);                                 // 18577
                $.each(optionalVariables, function(index, templatedString) {                                           // 18578
                  var                                                                                                  // 18579
                    // allow legacy {/$var} style                                                                      // 18580
                    variable = (templatedString.indexOf('$') !== -1)                                                   // 18581
                      ? templatedString.substr(3, templatedString.length - 4)                                          // 18582
                      : templatedString.substr(2, templatedString.length - 3),                                         // 18583
                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)                            // 18584
                      ? urlData[variable]                                                                              // 18585
                      : ($module.data(variable) !== undefined)                                                         // 18586
                        ? $module.data(variable)                                                                       // 18587
                        : ($context.data(variable) !== undefined)                                                      // 18588
                          ? $context.data(variable)                                                                    // 18589
                          : urlData[variable]                                                                          // 18590
                  ;                                                                                                    // 18591
                  // optional replacement                                                                              // 18592
                  if(value !== undefined) {                                                                            // 18593
                    module.verbose('Optional variable Found', variable, value);                                        // 18594
                    url = url.replace(templatedString, value);                                                         // 18595
                  }                                                                                                    // 18596
                  else {                                                                                               // 18597
                    module.verbose('Optional variable not found', variable);                                           // 18598
                    // remove preceding slash if set                                                                   // 18599
                    if(url.indexOf('/' + templatedString) !== -1) {                                                    // 18600
                      url = url.replace('/' + templatedString, '');                                                    // 18601
                    }                                                                                                  // 18602
                    else {                                                                                             // 18603
                      url = url.replace(templatedString, '');                                                          // 18604
                    }                                                                                                  // 18605
                  }                                                                                                    // 18606
                });                                                                                                    // 18607
              }                                                                                                        // 18608
            }                                                                                                          // 18609
            return url;                                                                                                // 18610
          },                                                                                                           // 18611
          formData: function(data) {                                                                                   // 18612
            var                                                                                                        // 18613
              canSerialize = ($.fn.serializeObject !== undefined),                                                     // 18614
              formData     = (canSerialize)                                                                            // 18615
                ? $form.serializeObject()                                                                              // 18616
                : $form.serialize(),                                                                                   // 18617
              hasOtherData                                                                                             // 18618
            ;                                                                                                          // 18619
            data         = data || settings.data;                                                                      // 18620
            hasOtherData = $.isPlainObject(data);                                                                      // 18621
                                                                                                                       // 18622
            if(hasOtherData) {                                                                                         // 18623
              if(canSerialize) {                                                                                       // 18624
                module.debug('Extending existing data with form data', data, formData);                                // 18625
                data = $.extend(true, {}, data, formData);                                                             // 18626
              }                                                                                                        // 18627
              else {                                                                                                   // 18628
                module.error(error.missingSerialize);                                                                  // 18629
                module.debug('Cant extend data. Replacing data with form data', data, formData);                       // 18630
                data = formData;                                                                                       // 18631
              }                                                                                                        // 18632
            }                                                                                                          // 18633
            else {                                                                                                     // 18634
              module.debug('Adding form data', formData);                                                              // 18635
              data = formData;                                                                                         // 18636
            }                                                                                                          // 18637
            return data;                                                                                               // 18638
          }                                                                                                            // 18639
        },                                                                                                             // 18640
                                                                                                                       // 18641
        send: {                                                                                                        // 18642
          request: function() {                                                                                        // 18643
            module.set.loading();                                                                                      // 18644
            module.request = module.create.request();                                                                  // 18645
            if( module.is.mocked() ) {                                                                                 // 18646
              module.mockedXHR = module.create.mockedXHR();                                                            // 18647
            }                                                                                                          // 18648
            else {                                                                                                     // 18649
              module.xhr = module.create.xhr();                                                                        // 18650
            }                                                                                                          // 18651
            settings.onRequest.call(context, module.request, module.xhr);                                              // 18652
          }                                                                                                            // 18653
        },                                                                                                             // 18654
                                                                                                                       // 18655
        event: {                                                                                                       // 18656
          trigger: function(event) {                                                                                   // 18657
            module.query();                                                                                            // 18658
            if(event.type == 'submit' || event.type == 'click') {                                                      // 18659
              event.preventDefault();                                                                                  // 18660
            }                                                                                                          // 18661
          },                                                                                                           // 18662
          xhr: {                                                                                                       // 18663
            always: function() {                                                                                       // 18664
              // nothing special                                                                                       // 18665
            },                                                                                                         // 18666
            done: function(response, textStatus, xhr) {                                                                // 18667
              var                                                                                                      // 18668
                context            = this,                                                                             // 18669
                elapsedTime        = (new Date().getTime() - requestStartTime),                                        // 18670
                timeLeft           = (settings.loadingDuration - elapsedTime),                                         // 18671
                translatedResponse = ( $.isFunction(settings.onResponse) )                                             // 18672
                  ? settings.onResponse.call(context, $.extend(true, {}, response))                                    // 18673
                  : false                                                                                              // 18674
              ;                                                                                                        // 18675
              timeLeft = (timeLeft > 0)                                                                                // 18676
                ? timeLeft                                                                                             // 18677
                : 0                                                                                                    // 18678
              ;                                                                                                        // 18679
              if(translatedResponse) {                                                                                 // 18680
                module.debug('Modified API response in onResponse callback', settings.onResponse, translatedResponse, response);
                response = translatedResponse;                                                                         // 18682
              }                                                                                                        // 18683
              if(timeLeft > 0) {                                                                                       // 18684
                module.debug('Response completed early delaying state change by', timeLeft);                           // 18685
              }                                                                                                        // 18686
              setTimeout(function() {                                                                                  // 18687
                if( module.is.validResponse(response) ) {                                                              // 18688
                  module.request.resolveWith(context, [response, xhr]);                                                // 18689
                }                                                                                                      // 18690
                else {                                                                                                 // 18691
                  module.request.rejectWith(context, [xhr, 'invalid']);                                                // 18692
                }                                                                                                      // 18693
              }, timeLeft);                                                                                            // 18694
            },                                                                                                         // 18695
            fail: function(xhr, status, httpMessage) {                                                                 // 18696
              var                                                                                                      // 18697
                context     = this,                                                                                    // 18698
                elapsedTime = (new Date().getTime() - requestStartTime),                                               // 18699
                timeLeft    = (settings.loadingDuration - elapsedTime)                                                 // 18700
              ;                                                                                                        // 18701
              timeLeft = (timeLeft > 0)                                                                                // 18702
                ? timeLeft                                                                                             // 18703
                : 0                                                                                                    // 18704
              ;                                                                                                        // 18705
              if(timeLeft > 0) {                                                                                       // 18706
                module.debug('Response completed early delaying state change by', timeLeft);                           // 18707
              }                                                                                                        // 18708
              setTimeout(function() {                                                                                  // 18709
                if( module.is.abortedRequest(xhr) ) {                                                                  // 18710
                  module.request.rejectWith(context, [xhr, 'aborted', httpMessage]);                                   // 18711
                }                                                                                                      // 18712
                else {                                                                                                 // 18713
                  module.request.rejectWith(context, [xhr, 'error', status, httpMessage]);                             // 18714
                }                                                                                                      // 18715
              }, timeLeft);                                                                                            // 18716
            }                                                                                                          // 18717
          },                                                                                                           // 18718
          request: {                                                                                                   // 18719
            done: function(response, xhr) {                                                                            // 18720
              module.debug('Successful API Response', response);                                                       // 18721
              if(settings.cache === 'local' && url) {                                                                  // 18722
                module.write.cachedResponse(url, response);                                                            // 18723
                module.debug('Saving server response locally', module.cache);                                          // 18724
              }                                                                                                        // 18725
              settings.onSuccess.call(context, response, $module, xhr);                                                // 18726
            },                                                                                                         // 18727
            complete: function(firstParameter, secondParameter) {                                                      // 18728
              var                                                                                                      // 18729
                xhr,                                                                                                   // 18730
                response                                                                                               // 18731
              ;                                                                                                        // 18732
              // have to guess callback parameters based on request success                                            // 18733
              if( module.was.succesful() ) {                                                                           // 18734
                response = firstParameter;                                                                             // 18735
                xhr      = secondParameter;                                                                            // 18736
              }                                                                                                        // 18737
              else {                                                                                                   // 18738
                xhr      = firstParameter;                                                                             // 18739
                response = module.get.responseFromXHR(xhr);                                                            // 18740
              }                                                                                                        // 18741
              module.remove.loading();                                                                                 // 18742
              settings.onComplete.call(context, response, $module, xhr);                                               // 18743
            },                                                                                                         // 18744
            fail: function(xhr, status, httpMessage) {                                                                 // 18745
              var                                                                                                      // 18746
                // pull response from xhr if available                                                                 // 18747
                response     = module.get.responseFromXHR(xhr),                                                        // 18748
                errorMessage = module.get.errorFromRequest(response, status, httpMessage)                              // 18749
              ;                                                                                                        // 18750
              if(status == 'aborted') {                                                                                // 18751
                module.debug('XHR Aborted (Most likely caused by page navigation or CORS Policy)', status, httpMessage);
                settings.onAbort.call(context, status, $module, xhr);                                                  // 18753
              }                                                                                                        // 18754
              else if(status == 'invalid') {                                                                           // 18755
                module.debug('JSON did not pass success test. A server-side error has most likely occurred', response);
              }                                                                                                        // 18757
              else if(status == 'error')  {                                                                            // 18758
                if(xhr !== undefined) {                                                                                // 18759
                  module.debug('XHR produced a server error', status, httpMessage);                                    // 18760
                  // make sure we have an error to display to console                                                  // 18761
                  if( xhr.status != 200 && httpMessage !== undefined && httpMessage !== '') {                          // 18762
                    module.error(error.statusMessage + httpMessage, ajaxSettings.url);                                 // 18763
                  }                                                                                                    // 18764
                  settings.onError.call(context, errorMessage, $module, xhr);                                          // 18765
                }                                                                                                      // 18766
              }                                                                                                        // 18767
                                                                                                                       // 18768
              if(settings.errorDuration && status !== 'aborted') {                                                     // 18769
                module.debug('Adding error state');                                                                    // 18770
                module.set.error();                                                                                    // 18771
                if( module.should.removeError() ) {                                                                    // 18772
                  setTimeout(module.remove.error, settings.errorDuration);                                             // 18773
                }                                                                                                      // 18774
              }                                                                                                        // 18775
              module.debug('API Request failed', errorMessage, xhr);                                                   // 18776
              settings.onFailure.call(context, response, $module, xhr);                                                // 18777
            }                                                                                                          // 18778
          }                                                                                                            // 18779
        },                                                                                                             // 18780
                                                                                                                       // 18781
        create: {                                                                                                      // 18782
                                                                                                                       // 18783
          request: function() {                                                                                        // 18784
            // api request promise                                                                                     // 18785
            return $.Deferred()                                                                                        // 18786
              .always(module.event.request.complete)                                                                   // 18787
              .done(module.event.request.done)                                                                         // 18788
              .fail(module.event.request.fail)                                                                         // 18789
            ;                                                                                                          // 18790
          },                                                                                                           // 18791
                                                                                                                       // 18792
          mockedXHR: function () {                                                                                     // 18793
            var                                                                                                        // 18794
              // xhr does not simulate these properties of xhr but must return them                                    // 18795
              textStatus  = false,                                                                                     // 18796
              status      = false,                                                                                     // 18797
              httpMessage = false,                                                                                     // 18798
              asyncCallback,                                                                                           // 18799
              response,                                                                                                // 18800
              mockedXHR                                                                                                // 18801
            ;                                                                                                          // 18802
                                                                                                                       // 18803
            mockedXHR = $.Deferred()                                                                                   // 18804
              .always(module.event.xhr.complete)                                                                       // 18805
              .done(module.event.xhr.done)                                                                             // 18806
              .fail(module.event.xhr.fail)                                                                             // 18807
            ;                                                                                                          // 18808
                                                                                                                       // 18809
            if(settings.mockResponse) {                                                                                // 18810
              if( $.isFunction(settings.mockResponse) ) {                                                              // 18811
                module.debug('Using mocked callback returning response', settings.mockResponse);                       // 18812
                response = settings.mockResponse.call(context, settings);                                              // 18813
              }                                                                                                        // 18814
              else {                                                                                                   // 18815
                module.debug('Using specified response', settings.mockResponse);                                       // 18816
                response = settings.mockResponse;                                                                      // 18817
              }                                                                                                        // 18818
              // simulating response                                                                                   // 18819
              mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);                     // 18820
            }                                                                                                          // 18821
            else if( $.isFunction(settings.mockResponseAsync) ) {                                                      // 18822
              asyncCallback = function(response) {                                                                     // 18823
                module.debug('Async callback returned response', response);                                            // 18824
                                                                                                                       // 18825
                if(response) {                                                                                         // 18826
                  mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);                 // 18827
                }                                                                                                      // 18828
                else {                                                                                                 // 18829
                  mockedXHR.rejectWith(context, [{ responseText: response }, status, httpMessage]);                    // 18830
                }                                                                                                      // 18831
              };                                                                                                       // 18832
              module.debug('Using async mocked response', settings.mockResponseAsync);                                 // 18833
              settings.mockResponseAsync.call(context, settings, asyncCallback);                                       // 18834
            }                                                                                                          // 18835
            return mockedXHR;                                                                                          // 18836
          },                                                                                                           // 18837
                                                                                                                       // 18838
          xhr: function() {                                                                                            // 18839
            var                                                                                                        // 18840
              xhr                                                                                                      // 18841
            ;                                                                                                          // 18842
            // ajax request promise                                                                                    // 18843
            xhr = $.ajax(ajaxSettings)                                                                                 // 18844
              .always(module.event.xhr.always)                                                                         // 18845
              .done(module.event.xhr.done)                                                                             // 18846
              .fail(module.event.xhr.fail)                                                                             // 18847
            ;                                                                                                          // 18848
            module.verbose('Created server request', xhr);                                                             // 18849
            return xhr;                                                                                                // 18850
          }                                                                                                            // 18851
        },                                                                                                             // 18852
                                                                                                                       // 18853
        set: {                                                                                                         // 18854
          error: function() {                                                                                          // 18855
            module.verbose('Adding error state to element', $context);                                                 // 18856
            $context.addClass(className.error);                                                                        // 18857
          },                                                                                                           // 18858
          loading: function() {                                                                                        // 18859
            module.verbose('Adding loading state to element', $context);                                               // 18860
            $context.addClass(className.loading);                                                                      // 18861
            requestStartTime = new Date().getTime();                                                                   // 18862
          }                                                                                                            // 18863
        },                                                                                                             // 18864
                                                                                                                       // 18865
        remove: {                                                                                                      // 18866
          error: function() {                                                                                          // 18867
            module.verbose('Removing error state from element', $context);                                             // 18868
            $context.removeClass(className.error);                                                                     // 18869
          },                                                                                                           // 18870
          loading: function() {                                                                                        // 18871
            module.verbose('Removing loading state from element', $context);                                           // 18872
            $context.removeClass(className.loading);                                                                   // 18873
          }                                                                                                            // 18874
        },                                                                                                             // 18875
                                                                                                                       // 18876
        get: {                                                                                                         // 18877
          responseFromXHR: function(xhr) {                                                                             // 18878
            return $.isPlainObject(xhr)                                                                                // 18879
              ? (settings.dataType == 'json' || settings.dataType == 'jsonp')                                          // 18880
                ? module.decode.json(xhr.responseText)                                                                 // 18881
                : xhr.responseText                                                                                     // 18882
              : false                                                                                                  // 18883
            ;                                                                                                          // 18884
          },                                                                                                           // 18885
          errorFromRequest: function(response, status, httpMessage) {                                                  // 18886
            return ($.isPlainObject(response) && response.error !== undefined)                                         // 18887
              ? response.error // use json error message                                                               // 18888
              : (settings.error[status] !== undefined) // use server error message                                     // 18889
                ? settings.error[status]                                                                               // 18890
                : httpMessage                                                                                          // 18891
            ;                                                                                                          // 18892
          },                                                                                                           // 18893
          request: function() {                                                                                        // 18894
            return module.request || false;                                                                            // 18895
          },                                                                                                           // 18896
          xhr: function() {                                                                                            // 18897
            return module.xhr || false;                                                                                // 18898
          },                                                                                                           // 18899
          settings: function() {                                                                                       // 18900
            var                                                                                                        // 18901
              runSettings                                                                                              // 18902
            ;                                                                                                          // 18903
            runSettings = settings.beforeSend.call(context, settings);                                                 // 18904
            if(runSettings) {                                                                                          // 18905
              if(runSettings.success !== undefined) {                                                                  // 18906
                module.debug('Legacy success callback detected', runSettings);                                         // 18907
                module.error(error.legacyParameters, runSettings.success);                                             // 18908
                runSettings.onSuccess = runSettings.success;                                                           // 18909
              }                                                                                                        // 18910
              if(runSettings.failure !== undefined) {                                                                  // 18911
                module.debug('Legacy failure callback detected', runSettings);                                         // 18912
                module.error(error.legacyParameters, runSettings.failure);                                             // 18913
                runSettings.onFailure = runSettings.failure;                                                           // 18914
              }                                                                                                        // 18915
              if(runSettings.complete !== undefined) {                                                                 // 18916
                module.debug('Legacy complete callback detected', runSettings);                                        // 18917
                module.error(error.legacyParameters, runSettings.complete);                                            // 18918
                runSettings.onComplete = runSettings.complete;                                                         // 18919
              }                                                                                                        // 18920
            }                                                                                                          // 18921
            if(runSettings === undefined) {                                                                            // 18922
              module.error(error.noReturnedValue);                                                                     // 18923
            }                                                                                                          // 18924
            return (runSettings !== undefined)                                                                         // 18925
              ? runSettings                                                                                            // 18926
              : settings                                                                                               // 18927
            ;                                                                                                          // 18928
          },                                                                                                           // 18929
          urlEncodedValue: function(value) {                                                                           // 18930
            var                                                                                                        // 18931
              decodedValue   = window.decodeURIComponent(value),                                                       // 18932
              encodedValue   = window.encodeURIComponent(value),                                                       // 18933
              alreadyEncoded = (decodedValue !== value)                                                                // 18934
            ;                                                                                                          // 18935
            if(alreadyEncoded) {                                                                                       // 18936
              module.debug('URL value is already encoded, avoiding double encoding', value);                           // 18937
              return value;                                                                                            // 18938
            }                                                                                                          // 18939
            module.verbose('Encoding value using encodeURIComponent', value, encodedValue);                            // 18940
            return encodedValue;                                                                                       // 18941
          },                                                                                                           // 18942
          defaultData: function() {                                                                                    // 18943
            var                                                                                                        // 18944
              data = {}                                                                                                // 18945
            ;                                                                                                          // 18946
            if( !$.isWindow(element) ) {                                                                               // 18947
              if( module.is.input() ) {                                                                                // 18948
                data.value = $module.val();                                                                            // 18949
              }                                                                                                        // 18950
              else if( !module.is.form() ) {                                                                           // 18951
                                                                                                                       // 18952
              }                                                                                                        // 18953
              else {                                                                                                   // 18954
                data.text = $module.text();                                                                            // 18955
              }                                                                                                        // 18956
            }                                                                                                          // 18957
            return data;                                                                                               // 18958
          },                                                                                                           // 18959
          event: function() {                                                                                          // 18960
            if( $.isWindow(element) || settings.on == 'now' ) {                                                        // 18961
              module.debug('API called without element, no events attached');                                          // 18962
              return false;                                                                                            // 18963
            }                                                                                                          // 18964
            else if(settings.on == 'auto') {                                                                           // 18965
              if( $module.is('input') ) {                                                                              // 18966
                return (element.oninput !== undefined)                                                                 // 18967
                  ? 'input'                                                                                            // 18968
                  : (element.onpropertychange !== undefined)                                                           // 18969
                    ? 'propertychange'                                                                                 // 18970
                    : 'keyup'                                                                                          // 18971
                ;                                                                                                      // 18972
              }                                                                                                        // 18973
              else if( $module.is('form') ) {                                                                          // 18974
                return 'submit';                                                                                       // 18975
              }                                                                                                        // 18976
              else {                                                                                                   // 18977
                return 'click';                                                                                        // 18978
              }                                                                                                        // 18979
            }                                                                                                          // 18980
            else {                                                                                                     // 18981
              return settings.on;                                                                                      // 18982
            }                                                                                                          // 18983
          },                                                                                                           // 18984
          templatedURL: function(action) {                                                                             // 18985
            action = action || $module.data(metadata.action) || settings.action || false;                              // 18986
            url    = $module.data(metadata.url) || settings.url || false;                                              // 18987
            if(url) {                                                                                                  // 18988
              module.debug('Using specified url', url);                                                                // 18989
              return url;                                                                                              // 18990
            }                                                                                                          // 18991
            if(action) {                                                                                               // 18992
              module.debug('Looking up url for action', action, settings.api);                                         // 18993
              if(settings.api[action] === undefined && !module.is.mocked()) {                                          // 18994
                module.error(error.missingAction, settings.action, settings.api);                                      // 18995
                return;                                                                                                // 18996
              }                                                                                                        // 18997
              url = settings.api[action];                                                                              // 18998
            }                                                                                                          // 18999
            else if( module.is.form() ) {                                                                              // 19000
              url = $module.attr('action') || $context.attr('action') || false;                                        // 19001
              module.debug('No url or action specified, defaulting to form action', url);                              // 19002
            }                                                                                                          // 19003
            return url;                                                                                                // 19004
          }                                                                                                            // 19005
        },                                                                                                             // 19006
                                                                                                                       // 19007
        abort: function() {                                                                                            // 19008
          var                                                                                                          // 19009
            xhr = module.get.xhr()                                                                                     // 19010
          ;                                                                                                            // 19011
          if( xhr && xhr.state() !== 'resolved') {                                                                     // 19012
            module.debug('Cancelling API request');                                                                    // 19013
            xhr.abort();                                                                                               // 19014
          }                                                                                                            // 19015
        },                                                                                                             // 19016
                                                                                                                       // 19017
        // reset state                                                                                                 // 19018
        reset: function() {                                                                                            // 19019
          module.remove.error();                                                                                       // 19020
          module.remove.loading();                                                                                     // 19021
        },                                                                                                             // 19022
                                                                                                                       // 19023
        setting: function(name, value) {                                                                               // 19024
          module.debug('Changing setting', name, value);                                                               // 19025
          if( $.isPlainObject(name) ) {                                                                                // 19026
            $.extend(true, settings, name);                                                                            // 19027
          }                                                                                                            // 19028
          else if(value !== undefined) {                                                                               // 19029
            settings[name] = value;                                                                                    // 19030
          }                                                                                                            // 19031
          else {                                                                                                       // 19032
            return settings[name];                                                                                     // 19033
          }                                                                                                            // 19034
        },                                                                                                             // 19035
        internal: function(name, value) {                                                                              // 19036
          if( $.isPlainObject(name) ) {                                                                                // 19037
            $.extend(true, module, name);                                                                              // 19038
          }                                                                                                            // 19039
          else if(value !== undefined) {                                                                               // 19040
            module[name] = value;                                                                                      // 19041
          }                                                                                                            // 19042
          else {                                                                                                       // 19043
            return module[name];                                                                                       // 19044
          }                                                                                                            // 19045
        },                                                                                                             // 19046
        debug: function() {                                                                                            // 19047
          if(settings.debug) {                                                                                         // 19048
            if(settings.performance) {                                                                                 // 19049
              module.performance.log(arguments);                                                                       // 19050
            }                                                                                                          // 19051
            else {                                                                                                     // 19052
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 19053
              module.debug.apply(console, arguments);                                                                  // 19054
            }                                                                                                          // 19055
          }                                                                                                            // 19056
        },                                                                                                             // 19057
        verbose: function() {                                                                                          // 19058
          if(settings.verbose && settings.debug) {                                                                     // 19059
            if(settings.performance) {                                                                                 // 19060
              module.performance.log(arguments);                                                                       // 19061
            }                                                                                                          // 19062
            else {                                                                                                     // 19063
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 19064
              module.verbose.apply(console, arguments);                                                                // 19065
            }                                                                                                          // 19066
          }                                                                                                            // 19067
        },                                                                                                             // 19068
        error: function() {                                                                                            // 19069
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 19070
          module.error.apply(console, arguments);                                                                      // 19071
        },                                                                                                             // 19072
        performance: {                                                                                                 // 19073
          log: function(message) {                                                                                     // 19074
            var                                                                                                        // 19075
              currentTime,                                                                                             // 19076
              executionTime,                                                                                           // 19077
              previousTime                                                                                             // 19078
            ;                                                                                                          // 19079
            if(settings.performance) {                                                                                 // 19080
              currentTime   = new Date().getTime();                                                                    // 19081
              previousTime  = time || currentTime;                                                                     // 19082
              executionTime = currentTime - previousTime;                                                              // 19083
              time          = currentTime;                                                                             // 19084
              performance.push({                                                                                       // 19085
                'Name'           : message[0],                                                                         // 19086
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 19087
                //'Element'        : element,                                                                          // 19088
                'Execution Time' : executionTime                                                                       // 19089
              });                                                                                                      // 19090
            }                                                                                                          // 19091
            clearTimeout(module.performance.timer);                                                                    // 19092
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 19093
          },                                                                                                           // 19094
          display: function() {                                                                                        // 19095
            var                                                                                                        // 19096
              title = settings.name + ':',                                                                             // 19097
              totalTime = 0                                                                                            // 19098
            ;                                                                                                          // 19099
            time = false;                                                                                              // 19100
            clearTimeout(module.performance.timer);                                                                    // 19101
            $.each(performance, function(index, data) {                                                                // 19102
              totalTime += data['Execution Time'];                                                                     // 19103
            });                                                                                                        // 19104
            title += ' ' + totalTime + 'ms';                                                                           // 19105
            if(moduleSelector) {                                                                                       // 19106
              title += ' \'' + moduleSelector + '\'';                                                                  // 19107
            }                                                                                                          // 19108
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 19109
              console.groupCollapsed(title);                                                                           // 19110
              if(console.table) {                                                                                      // 19111
                console.table(performance);                                                                            // 19112
              }                                                                                                        // 19113
              else {                                                                                                   // 19114
                $.each(performance, function(index, data) {                                                            // 19115
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 19116
                });                                                                                                    // 19117
              }                                                                                                        // 19118
              console.groupEnd();                                                                                      // 19119
            }                                                                                                          // 19120
            performance = [];                                                                                          // 19121
          }                                                                                                            // 19122
        },                                                                                                             // 19123
        invoke: function(query, passedArguments, context) {                                                            // 19124
          var                                                                                                          // 19125
            object = instance,                                                                                         // 19126
            maxDepth,                                                                                                  // 19127
            found,                                                                                                     // 19128
            response                                                                                                   // 19129
          ;                                                                                                            // 19130
          passedArguments = passedArguments || queryArguments;                                                         // 19131
          context         = element         || context;                                                                // 19132
          if(typeof query == 'string' && object !== undefined) {                                                       // 19133
            query    = query.split(/[\. ]/);                                                                           // 19134
            maxDepth = query.length - 1;                                                                               // 19135
            $.each(query, function(depth, value) {                                                                     // 19136
              var camelCaseValue = (depth != maxDepth)                                                                 // 19137
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 19138
                : query                                                                                                // 19139
              ;                                                                                                        // 19140
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 19141
                object = object[camelCaseValue];                                                                       // 19142
              }                                                                                                        // 19143
              else if( object[camelCaseValue] !== undefined ) {                                                        // 19144
                found = object[camelCaseValue];                                                                        // 19145
                return false;                                                                                          // 19146
              }                                                                                                        // 19147
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 19148
                object = object[value];                                                                                // 19149
              }                                                                                                        // 19150
              else if( object[value] !== undefined ) {                                                                 // 19151
                found = object[value];                                                                                 // 19152
                return false;                                                                                          // 19153
              }                                                                                                        // 19154
              else {                                                                                                   // 19155
                module.error(error.method, query);                                                                     // 19156
                return false;                                                                                          // 19157
              }                                                                                                        // 19158
            });                                                                                                        // 19159
          }                                                                                                            // 19160
          if ( $.isFunction( found ) ) {                                                                               // 19161
            response = found.apply(context, passedArguments);                                                          // 19162
          }                                                                                                            // 19163
          else if(found !== undefined) {                                                                               // 19164
            response = found;                                                                                          // 19165
          }                                                                                                            // 19166
          if($.isArray(returnedValue)) {                                                                               // 19167
            returnedValue.push(response);                                                                              // 19168
          }                                                                                                            // 19169
          else if(returnedValue !== undefined) {                                                                       // 19170
            returnedValue = [returnedValue, response];                                                                 // 19171
          }                                                                                                            // 19172
          else if(response !== undefined) {                                                                            // 19173
            returnedValue = response;                                                                                  // 19174
          }                                                                                                            // 19175
          return found;                                                                                                // 19176
        }                                                                                                              // 19177
      };                                                                                                               // 19178
                                                                                                                       // 19179
      if(methodInvoked) {                                                                                              // 19180
        if(instance === undefined) {                                                                                   // 19181
          module.initialize();                                                                                         // 19182
        }                                                                                                              // 19183
        module.invoke(query);                                                                                          // 19184
      }                                                                                                                // 19185
      else {                                                                                                           // 19186
        if(instance !== undefined) {                                                                                   // 19187
          instance.invoke('destroy');                                                                                  // 19188
        }                                                                                                              // 19189
        module.initialize();                                                                                           // 19190
      }                                                                                                                // 19191
    })                                                                                                                 // 19192
  ;                                                                                                                    // 19193
                                                                                                                       // 19194
  return (returnedValue !== undefined)                                                                                 // 19195
    ? returnedValue                                                                                                    // 19196
    : this                                                                                                             // 19197
  ;                                                                                                                    // 19198
};                                                                                                                     // 19199
                                                                                                                       // 19200
$.api.settings = {                                                                                                     // 19201
                                                                                                                       // 19202
  name              : 'API',                                                                                           // 19203
  namespace         : 'api',                                                                                           // 19204
                                                                                                                       // 19205
  debug             : false,                                                                                           // 19206
  verbose           : false,                                                                                           // 19207
  performance       : true,                                                                                            // 19208
                                                                                                                       // 19209
  // object containing all templates endpoints                                                                         // 19210
  api               : {},                                                                                              // 19211
                                                                                                                       // 19212
  // whether to cache responses                                                                                        // 19213
  cache             : true,                                                                                            // 19214
                                                                                                                       // 19215
  // whether new requests should abort previous requests                                                               // 19216
  interruptRequests : true,                                                                                            // 19217
                                                                                                                       // 19218
  // event binding                                                                                                     // 19219
  on                : 'auto',                                                                                          // 19220
                                                                                                                       // 19221
  // context for applying state classes                                                                                // 19222
  stateContext      : false,                                                                                           // 19223
                                                                                                                       // 19224
  // duration for loading state                                                                                        // 19225
  loadingDuration   : 0,                                                                                               // 19226
                                                                                                                       // 19227
  // whether to hide errors after a period of time                                                                     // 19228
  hideError         : 'auto',                                                                                          // 19229
                                                                                                                       // 19230
  // duration for error state                                                                                          // 19231
  errorDuration     : 2000,                                                                                            // 19232
                                                                                                                       // 19233
  // whether parameters should be encoded with encodeURIComponent                                                      // 19234
  encodeParameters  : true,                                                                                            // 19235
                                                                                                                       // 19236
  // API action to use                                                                                                 // 19237
  action            : false,                                                                                           // 19238
                                                                                                                       // 19239
  // templated URL to use                                                                                              // 19240
  url               : false,                                                                                           // 19241
                                                                                                                       // 19242
  // base URL to apply to all endpoints                                                                                // 19243
  base              : '',                                                                                              // 19244
                                                                                                                       // 19245
  // data that will                                                                                                    // 19246
  urlData           : {},                                                                                              // 19247
                                                                                                                       // 19248
  // whether to add default data to url data                                                                           // 19249
  defaultData          : true,                                                                                         // 19250
                                                                                                                       // 19251
  // whether to serialize closest form                                                                                 // 19252
  serializeForm        : false,                                                                                        // 19253
                                                                                                                       // 19254
  // how long to wait before request should occur                                                                      // 19255
  throttle             : 0,                                                                                            // 19256
                                                                                                                       // 19257
  // whether to throttle first request or only repeated                                                                // 19258
  throttleFirstRequest : true,                                                                                         // 19259
                                                                                                                       // 19260
  // standard ajax settings                                                                                            // 19261
  method            : 'get',                                                                                           // 19262
  data              : {},                                                                                              // 19263
  dataType          : 'json',                                                                                          // 19264
                                                                                                                       // 19265
  // mock response                                                                                                     // 19266
  mockResponse      : false,                                                                                           // 19267
  mockResponseAsync : false,                                                                                           // 19268
                                                                                                                       // 19269
  // callbacks before request                                                                                          // 19270
  beforeSend  : function(settings) { return settings; },                                                               // 19271
  beforeXHR   : function(xhr) {},                                                                                      // 19272
  onRequest   : function(promise, xhr) {},                                                                             // 19273
                                                                                                                       // 19274
  // after request                                                                                                     // 19275
  onResponse  : false, // function(response) { },                                                                      // 19276
                                                                                                                       // 19277
  // response was successful, if JSON passed validation                                                                // 19278
  onSuccess   : function(response, $module) {},                                                                        // 19279
                                                                                                                       // 19280
  // request finished without aborting                                                                                 // 19281
  onComplete  : function(response, $module) {},                                                                        // 19282
                                                                                                                       // 19283
  // failed JSON success test                                                                                          // 19284
  onFailure   : function(response, $module) {},                                                                        // 19285
                                                                                                                       // 19286
  // server error                                                                                                      // 19287
  onError     : function(errorMessage, $module) {},                                                                    // 19288
                                                                                                                       // 19289
  // request aborted                                                                                                   // 19290
  onAbort     : function(errorMessage, $module) {},                                                                    // 19291
                                                                                                                       // 19292
  successTest : false,                                                                                                 // 19293
                                                                                                                       // 19294
  // errors                                                                                                            // 19295
  error : {                                                                                                            // 19296
    beforeSend        : 'The before send function has aborted the request',                                            // 19297
    error             : 'There was an error with your request',                                                        // 19298
    exitConditions    : 'API Request Aborted. Exit conditions met',                                                    // 19299
    JSONParse         : 'JSON could not be parsed during error handling',                                              // 19300
    legacyParameters  : 'You are using legacy API success callback names',                                             // 19301
    method            : 'The method you called is not defined',                                                        // 19302
    missingAction     : 'API action used but no url was defined',                                                      // 19303
    missingSerialize  : 'jquery-serialize-object is required to add form data to an existing data object',             // 19304
    missingURL        : 'No URL specified for api event',                                                              // 19305
    noReturnedValue   : 'The beforeSend callback must return a settings object, beforeSend ignored.',                  // 19306
    noStorage         : 'Caching respopnses locally requires session storage',                                         // 19307
    parseError        : 'There was an error parsing your request',                                                     // 19308
    requiredParameter : 'Missing a required URL parameter: ',                                                          // 19309
    statusMessage     : 'Server gave an error: ',                                                                      // 19310
    timeout           : 'Your request timed out'                                                                       // 19311
  },                                                                                                                   // 19312
                                                                                                                       // 19313
  regExp  : {                                                                                                          // 19314
    required : /\{\$*[A-z0-9]+\}/g,                                                                                    // 19315
    optional : /\{\/\$*[A-z0-9]+\}/g,                                                                                  // 19316
  },                                                                                                                   // 19317
                                                                                                                       // 19318
  className: {                                                                                                         // 19319
    loading : 'loading',                                                                                               // 19320
    error   : 'error'                                                                                                  // 19321
  },                                                                                                                   // 19322
                                                                                                                       // 19323
  selector: {                                                                                                          // 19324
    disabled : '.disabled',                                                                                            // 19325
    form      : 'form'                                                                                                 // 19326
  },                                                                                                                   // 19327
                                                                                                                       // 19328
  metadata: {                                                                                                          // 19329
    action  : 'action',                                                                                                // 19330
    url     : 'url'                                                                                                    // 19331
  }                                                                                                                    // 19332
};                                                                                                                     // 19333
                                                                                                                       // 19334
                                                                                                                       // 19335
                                                                                                                       // 19336
})( jQuery, window , document );                                                                                       // 19337
                                                                                                                       // 19338
/*!                                                                                                                    // 19339
 * # Semantic UI 2.1.2 - State                                                                                         // 19340
 * http://github.com/semantic-org/semantic-ui/                                                                         // 19341
 *                                                                                                                     // 19342
 *                                                                                                                     // 19343
 * Copyright 2015 Contributors                                                                                         // 19344
 * Released under the MIT license                                                                                      // 19345
 * http://opensource.org/licenses/MIT                                                                                  // 19346
 *                                                                                                                     // 19347
 */                                                                                                                    // 19348
                                                                                                                       // 19349
;(function ( $, window, document, undefined ) {                                                                        // 19350
                                                                                                                       // 19351
"use strict";                                                                                                          // 19352
                                                                                                                       // 19353
$.fn.state = function(parameters) {                                                                                    // 19354
  var                                                                                                                  // 19355
    $allModules     = $(this),                                                                                         // 19356
                                                                                                                       // 19357
    moduleSelector  = $allModules.selector || '',                                                                      // 19358
                                                                                                                       // 19359
    hasTouch        = ('ontouchstart' in document.documentElement),                                                    // 19360
    time            = new Date().getTime(),                                                                            // 19361
    performance     = [],                                                                                              // 19362
                                                                                                                       // 19363
    query           = arguments[0],                                                                                    // 19364
    methodInvoked   = (typeof query == 'string'),                                                                      // 19365
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 19366
                                                                                                                       // 19367
    returnedValue                                                                                                      // 19368
  ;                                                                                                                    // 19369
  $allModules                                                                                                          // 19370
    .each(function() {                                                                                                 // 19371
      var                                                                                                              // 19372
        settings          = ( $.isPlainObject(parameters) )                                                            // 19373
          ? $.extend(true, {}, $.fn.state.settings, parameters)                                                        // 19374
          : $.extend({}, $.fn.state.settings),                                                                         // 19375
                                                                                                                       // 19376
        error           = settings.error,                                                                              // 19377
        metadata        = settings.metadata,                                                                           // 19378
        className       = settings.className,                                                                          // 19379
        namespace       = settings.namespace,                                                                          // 19380
        states          = settings.states,                                                                             // 19381
        text            = settings.text,                                                                               // 19382
                                                                                                                       // 19383
        eventNamespace  = '.' + namespace,                                                                             // 19384
        moduleNamespace = namespace + '-module',                                                                       // 19385
                                                                                                                       // 19386
        $module         = $(this),                                                                                     // 19387
                                                                                                                       // 19388
        element         = this,                                                                                        // 19389
        instance        = $module.data(moduleNamespace),                                                               // 19390
                                                                                                                       // 19391
        module                                                                                                         // 19392
      ;                                                                                                                // 19393
      module = {                                                                                                       // 19394
                                                                                                                       // 19395
        initialize: function() {                                                                                       // 19396
          module.verbose('Initializing module');                                                                       // 19397
                                                                                                                       // 19398
          // allow module to guess desired state based on element                                                      // 19399
          if(settings.automatic) {                                                                                     // 19400
            module.add.defaults();                                                                                     // 19401
          }                                                                                                            // 19402
                                                                                                                       // 19403
          // bind events with delegated events                                                                         // 19404
          if(settings.context && moduleSelector !== '') {                                                              // 19405
            $(settings.context)                                                                                        // 19406
              .on(moduleSelector, 'mouseenter' + eventNamespace, module.change.text)                                   // 19407
              .on(moduleSelector, 'mouseleave' + eventNamespace, module.reset.text)                                    // 19408
              .on(moduleSelector, 'click'      + eventNamespace, module.toggle.state)                                  // 19409
            ;                                                                                                          // 19410
          }                                                                                                            // 19411
          else {                                                                                                       // 19412
            $module                                                                                                    // 19413
              .on('mouseenter' + eventNamespace, module.change.text)                                                   // 19414
              .on('mouseleave' + eventNamespace, module.reset.text)                                                    // 19415
              .on('click'      + eventNamespace, module.toggle.state)                                                  // 19416
            ;                                                                                                          // 19417
          }                                                                                                            // 19418
          module.instantiate();                                                                                        // 19419
        },                                                                                                             // 19420
                                                                                                                       // 19421
        instantiate: function() {                                                                                      // 19422
          module.verbose('Storing instance of module', module);                                                        // 19423
          instance = module;                                                                                           // 19424
          $module                                                                                                      // 19425
            .data(moduleNamespace, module)                                                                             // 19426
          ;                                                                                                            // 19427
        },                                                                                                             // 19428
                                                                                                                       // 19429
        destroy: function() {                                                                                          // 19430
          module.verbose('Destroying previous module', instance);                                                      // 19431
          $module                                                                                                      // 19432
            .off(eventNamespace)                                                                                       // 19433
            .removeData(moduleNamespace)                                                                               // 19434
          ;                                                                                                            // 19435
        },                                                                                                             // 19436
                                                                                                                       // 19437
        refresh: function() {                                                                                          // 19438
          module.verbose('Refreshing selector cache');                                                                 // 19439
          $module = $(element);                                                                                        // 19440
        },                                                                                                             // 19441
                                                                                                                       // 19442
        add: {                                                                                                         // 19443
          defaults: function() {                                                                                       // 19444
            var                                                                                                        // 19445
              userStates = parameters && $.isPlainObject(parameters.states)                                            // 19446
                ? parameters.states                                                                                    // 19447
                : {}                                                                                                   // 19448
            ;                                                                                                          // 19449
            $.each(settings.defaults, function(type, typeStates) {                                                     // 19450
              if( module.is[type] !== undefined && module.is[type]() ) {                                               // 19451
                module.verbose('Adding default states', type, element);                                                // 19452
                $.extend(settings.states, typeStates, userStates);                                                     // 19453
              }                                                                                                        // 19454
            });                                                                                                        // 19455
          }                                                                                                            // 19456
        },                                                                                                             // 19457
                                                                                                                       // 19458
        is: {                                                                                                          // 19459
                                                                                                                       // 19460
          active: function() {                                                                                         // 19461
            return $module.hasClass(className.active);                                                                 // 19462
          },                                                                                                           // 19463
          loading: function() {                                                                                        // 19464
            return $module.hasClass(className.loading);                                                                // 19465
          },                                                                                                           // 19466
          inactive: function() {                                                                                       // 19467
            return !( $module.hasClass(className.active) );                                                            // 19468
          },                                                                                                           // 19469
          state: function(state) {                                                                                     // 19470
            if(className[state] === undefined) {                                                                       // 19471
              return false;                                                                                            // 19472
            }                                                                                                          // 19473
            return $module.hasClass( className[state] );                                                               // 19474
          },                                                                                                           // 19475
                                                                                                                       // 19476
          enabled: function() {                                                                                        // 19477
            return !( $module.is(settings.filter.active) );                                                            // 19478
          },                                                                                                           // 19479
          disabled: function() {                                                                                       // 19480
            return ( $module.is(settings.filter.active) );                                                             // 19481
          },                                                                                                           // 19482
          textEnabled: function() {                                                                                    // 19483
            return !( $module.is(settings.filter.text) );                                                              // 19484
          },                                                                                                           // 19485
                                                                                                                       // 19486
          // definitions for automatic type detection                                                                  // 19487
          button: function() {                                                                                         // 19488
            return $module.is('.button:not(a, .submit)');                                                              // 19489
          },                                                                                                           // 19490
          input: function() {                                                                                          // 19491
            return $module.is('input');                                                                                // 19492
          },                                                                                                           // 19493
          progress: function() {                                                                                       // 19494
            return $module.is('.ui.progress');                                                                         // 19495
          }                                                                                                            // 19496
        },                                                                                                             // 19497
                                                                                                                       // 19498
        allow: function(state) {                                                                                       // 19499
          module.debug('Now allowing state', state);                                                                   // 19500
          states[state] = true;                                                                                        // 19501
        },                                                                                                             // 19502
        disallow: function(state) {                                                                                    // 19503
          module.debug('No longer allowing', state);                                                                   // 19504
          states[state] = false;                                                                                       // 19505
        },                                                                                                             // 19506
                                                                                                                       // 19507
        allows: function(state) {                                                                                      // 19508
          return states[state] || false;                                                                               // 19509
        },                                                                                                             // 19510
                                                                                                                       // 19511
        enable: function() {                                                                                           // 19512
          $module.removeClass(className.disabled);                                                                     // 19513
        },                                                                                                             // 19514
                                                                                                                       // 19515
        disable: function() {                                                                                          // 19516
          $module.addClass(className.disabled);                                                                        // 19517
        },                                                                                                             // 19518
                                                                                                                       // 19519
        setState: function(state) {                                                                                    // 19520
          if(module.allows(state)) {                                                                                   // 19521
            $module.addClass( className[state] );                                                                      // 19522
          }                                                                                                            // 19523
        },                                                                                                             // 19524
                                                                                                                       // 19525
        removeState: function(state) {                                                                                 // 19526
          if(module.allows(state)) {                                                                                   // 19527
            $module.removeClass( className[state] );                                                                   // 19528
          }                                                                                                            // 19529
        },                                                                                                             // 19530
                                                                                                                       // 19531
        toggle: {                                                                                                      // 19532
          state: function() {                                                                                          // 19533
            var                                                                                                        // 19534
              apiRequest,                                                                                              // 19535
              requestCancelled                                                                                         // 19536
            ;                                                                                                          // 19537
            if( module.allows('active') && module.is.enabled() ) {                                                     // 19538
              module.refresh();                                                                                        // 19539
              if($.fn.api !== undefined) {                                                                             // 19540
                apiRequest       = $module.api('get request');                                                         // 19541
                requestCancelled = $module.api('was cancelled');                                                       // 19542
                if( requestCancelled ) {                                                                               // 19543
                  module.debug('API Request cancelled by beforesend');                                                 // 19544
                  settings.activateTest   = function(){ return false; };                                               // 19545
                  settings.deactivateTest = function(){ return false; };                                               // 19546
                }                                                                                                      // 19547
                else if(apiRequest) {                                                                                  // 19548
                  module.listenTo(apiRequest);                                                                         // 19549
                  return;                                                                                              // 19550
                }                                                                                                      // 19551
              }                                                                                                        // 19552
              module.change.state();                                                                                   // 19553
            }                                                                                                          // 19554
          }                                                                                                            // 19555
        },                                                                                                             // 19556
                                                                                                                       // 19557
        listenTo: function(apiRequest) {                                                                               // 19558
          module.debug('API request detected, waiting for state signal', apiRequest);                                  // 19559
          if(apiRequest) {                                                                                             // 19560
            if(text.loading) {                                                                                         // 19561
              module.update.text(text.loading);                                                                        // 19562
            }                                                                                                          // 19563
            $.when(apiRequest)                                                                                         // 19564
              .then(function() {                                                                                       // 19565
                if(apiRequest.state() == 'resolved') {                                                                 // 19566
                  module.debug('API request succeeded');                                                               // 19567
                  settings.activateTest   = function(){ return true; };                                                // 19568
                  settings.deactivateTest = function(){ return true; };                                                // 19569
                }                                                                                                      // 19570
                else {                                                                                                 // 19571
                  module.debug('API request failed');                                                                  // 19572
                  settings.activateTest   = function(){ return false; };                                               // 19573
                  settings.deactivateTest = function(){ return false; };                                               // 19574
                }                                                                                                      // 19575
                module.change.state();                                                                                 // 19576
              })                                                                                                       // 19577
            ;                                                                                                          // 19578
          }                                                                                                            // 19579
        },                                                                                                             // 19580
                                                                                                                       // 19581
        // checks whether active/inactive state can be given                                                           // 19582
        change: {                                                                                                      // 19583
                                                                                                                       // 19584
          state: function() {                                                                                          // 19585
            module.debug('Determining state change direction');                                                        // 19586
            // inactive to active change                                                                               // 19587
            if( module.is.inactive() ) {                                                                               // 19588
              module.activate();                                                                                       // 19589
            }                                                                                                          // 19590
            else {                                                                                                     // 19591
              module.deactivate();                                                                                     // 19592
            }                                                                                                          // 19593
            if(settings.sync) {                                                                                        // 19594
              module.sync();                                                                                           // 19595
            }                                                                                                          // 19596
            settings.onChange.call(element);                                                                           // 19597
          },                                                                                                           // 19598
                                                                                                                       // 19599
          text: function() {                                                                                           // 19600
            if( module.is.textEnabled() ) {                                                                            // 19601
              if(module.is.disabled() ) {                                                                              // 19602
                module.verbose('Changing text to disabled text', text.hover);                                          // 19603
                module.update.text(text.disabled);                                                                     // 19604
              }                                                                                                        // 19605
              else if( module.is.active() ) {                                                                          // 19606
                if(text.hover) {                                                                                       // 19607
                  module.verbose('Changing text to hover text', text.hover);                                           // 19608
                  module.update.text(text.hover);                                                                      // 19609
                }                                                                                                      // 19610
                else if(text.deactivate) {                                                                             // 19611
                  module.verbose('Changing text to deactivating text', text.deactivate);                               // 19612
                  module.update.text(text.deactivate);                                                                 // 19613
                }                                                                                                      // 19614
              }                                                                                                        // 19615
              else {                                                                                                   // 19616
                if(text.hover) {                                                                                       // 19617
                  module.verbose('Changing text to hover text', text.hover);                                           // 19618
                  module.update.text(text.hover);                                                                      // 19619
                }                                                                                                      // 19620
                else if(text.activate){                                                                                // 19621
                  module.verbose('Changing text to activating text', text.activate);                                   // 19622
                  module.update.text(text.activate);                                                                   // 19623
                }                                                                                                      // 19624
              }                                                                                                        // 19625
            }                                                                                                          // 19626
          }                                                                                                            // 19627
                                                                                                                       // 19628
        },                                                                                                             // 19629
                                                                                                                       // 19630
        activate: function() {                                                                                         // 19631
          if( settings.activateTest.call(element) ) {                                                                  // 19632
            module.debug('Setting state to active');                                                                   // 19633
            $module                                                                                                    // 19634
              .addClass(className.active)                                                                              // 19635
            ;                                                                                                          // 19636
            module.update.text(text.active);                                                                           // 19637
            settings.onActivate.call(element);                                                                         // 19638
          }                                                                                                            // 19639
        },                                                                                                             // 19640
                                                                                                                       // 19641
        deactivate: function() {                                                                                       // 19642
          if( settings.deactivateTest.call(element) ) {                                                                // 19643
            module.debug('Setting state to inactive');                                                                 // 19644
            $module                                                                                                    // 19645
              .removeClass(className.active)                                                                           // 19646
            ;                                                                                                          // 19647
            module.update.text(text.inactive);                                                                         // 19648
            settings.onDeactivate.call(element);                                                                       // 19649
          }                                                                                                            // 19650
        },                                                                                                             // 19651
                                                                                                                       // 19652
        sync: function() {                                                                                             // 19653
          module.verbose('Syncing other buttons to current state');                                                    // 19654
          if( module.is.active() ) {                                                                                   // 19655
            $allModules                                                                                                // 19656
              .not($module)                                                                                            // 19657
                .state('activate');                                                                                    // 19658
          }                                                                                                            // 19659
          else {                                                                                                       // 19660
            $allModules                                                                                                // 19661
              .not($module)                                                                                            // 19662
                .state('deactivate')                                                                                   // 19663
            ;                                                                                                          // 19664
          }                                                                                                            // 19665
        },                                                                                                             // 19666
                                                                                                                       // 19667
        get: {                                                                                                         // 19668
          text: function() {                                                                                           // 19669
            return (settings.selector.text)                                                                            // 19670
              ? $module.find(settings.selector.text).text()                                                            // 19671
              : $module.html()                                                                                         // 19672
            ;                                                                                                          // 19673
          },                                                                                                           // 19674
          textFor: function(state) {                                                                                   // 19675
            return text[state] || false;                                                                               // 19676
          }                                                                                                            // 19677
        },                                                                                                             // 19678
                                                                                                                       // 19679
        flash: {                                                                                                       // 19680
          text: function(text, duration, callback) {                                                                   // 19681
            var                                                                                                        // 19682
              previousText = module.get.text()                                                                         // 19683
            ;                                                                                                          // 19684
            module.debug('Flashing text message', text, duration);                                                     // 19685
            text     = text     || settings.text.flash;                                                                // 19686
            duration = duration || settings.flashDuration;                                                             // 19687
            callback = callback || function() {};                                                                      // 19688
            module.update.text(text);                                                                                  // 19689
            setTimeout(function(){                                                                                     // 19690
              module.update.text(previousText);                                                                        // 19691
              callback.call(element);                                                                                  // 19692
            }, duration);                                                                                              // 19693
          }                                                                                                            // 19694
        },                                                                                                             // 19695
                                                                                                                       // 19696
        reset: {                                                                                                       // 19697
          // on mouseout sets text to previous value                                                                   // 19698
          text: function() {                                                                                           // 19699
            var                                                                                                        // 19700
              activeText   = text.active   || $module.data(metadata.storedText),                                       // 19701
              inactiveText = text.inactive || $module.data(metadata.storedText)                                        // 19702
            ;                                                                                                          // 19703
            if( module.is.textEnabled() ) {                                                                            // 19704
              if( module.is.active() && activeText) {                                                                  // 19705
                module.verbose('Resetting active text', activeText);                                                   // 19706
                module.update.text(activeText);                                                                        // 19707
              }                                                                                                        // 19708
              else if(inactiveText) {                                                                                  // 19709
                module.verbose('Resetting inactive text', activeText);                                                 // 19710
                module.update.text(inactiveText);                                                                      // 19711
              }                                                                                                        // 19712
            }                                                                                                          // 19713
          }                                                                                                            // 19714
        },                                                                                                             // 19715
                                                                                                                       // 19716
        update: {                                                                                                      // 19717
          text: function(text) {                                                                                       // 19718
            var                                                                                                        // 19719
              currentText = module.get.text()                                                                          // 19720
            ;                                                                                                          // 19721
            if(text && text !== currentText) {                                                                         // 19722
              module.debug('Updating text', text);                                                                     // 19723
              if(settings.selector.text) {                                                                             // 19724
                $module                                                                                                // 19725
                  .data(metadata.storedText, text)                                                                     // 19726
                  .find(settings.selector.text)                                                                        // 19727
                    .text(text)                                                                                        // 19728
                ;                                                                                                      // 19729
              }                                                                                                        // 19730
              else {                                                                                                   // 19731
                $module                                                                                                // 19732
                  .data(metadata.storedText, text)                                                                     // 19733
                  .html(text)                                                                                          // 19734
                ;                                                                                                      // 19735
              }                                                                                                        // 19736
            }                                                                                                          // 19737
            else {                                                                                                     // 19738
              module.debug('Text is already set, ignoring update', text);                                              // 19739
            }                                                                                                          // 19740
          }                                                                                                            // 19741
        },                                                                                                             // 19742
                                                                                                                       // 19743
        setting: function(name, value) {                                                                               // 19744
          module.debug('Changing setting', name, value);                                                               // 19745
          if( $.isPlainObject(name) ) {                                                                                // 19746
            $.extend(true, settings, name);                                                                            // 19747
          }                                                                                                            // 19748
          else if(value !== undefined) {                                                                               // 19749
            settings[name] = value;                                                                                    // 19750
          }                                                                                                            // 19751
          else {                                                                                                       // 19752
            return settings[name];                                                                                     // 19753
          }                                                                                                            // 19754
        },                                                                                                             // 19755
        internal: function(name, value) {                                                                              // 19756
          if( $.isPlainObject(name) ) {                                                                                // 19757
            $.extend(true, module, name);                                                                              // 19758
          }                                                                                                            // 19759
          else if(value !== undefined) {                                                                               // 19760
            module[name] = value;                                                                                      // 19761
          }                                                                                                            // 19762
          else {                                                                                                       // 19763
            return module[name];                                                                                       // 19764
          }                                                                                                            // 19765
        },                                                                                                             // 19766
        debug: function() {                                                                                            // 19767
          if(settings.debug) {                                                                                         // 19768
            if(settings.performance) {                                                                                 // 19769
              module.performance.log(arguments);                                                                       // 19770
            }                                                                                                          // 19771
            else {                                                                                                     // 19772
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 19773
              module.debug.apply(console, arguments);                                                                  // 19774
            }                                                                                                          // 19775
          }                                                                                                            // 19776
        },                                                                                                             // 19777
        verbose: function() {                                                                                          // 19778
          if(settings.verbose && settings.debug) {                                                                     // 19779
            if(settings.performance) {                                                                                 // 19780
              module.performance.log(arguments);                                                                       // 19781
            }                                                                                                          // 19782
            else {                                                                                                     // 19783
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 19784
              module.verbose.apply(console, arguments);                                                                // 19785
            }                                                                                                          // 19786
          }                                                                                                            // 19787
        },                                                                                                             // 19788
        error: function() {                                                                                            // 19789
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 19790
          module.error.apply(console, arguments);                                                                      // 19791
        },                                                                                                             // 19792
        performance: {                                                                                                 // 19793
          log: function(message) {                                                                                     // 19794
            var                                                                                                        // 19795
              currentTime,                                                                                             // 19796
              executionTime,                                                                                           // 19797
              previousTime                                                                                             // 19798
            ;                                                                                                          // 19799
            if(settings.performance) {                                                                                 // 19800
              currentTime   = new Date().getTime();                                                                    // 19801
              previousTime  = time || currentTime;                                                                     // 19802
              executionTime = currentTime - previousTime;                                                              // 19803
              time          = currentTime;                                                                             // 19804
              performance.push({                                                                                       // 19805
                'Name'           : message[0],                                                                         // 19806
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 19807
                'Element'        : element,                                                                            // 19808
                'Execution Time' : executionTime                                                                       // 19809
              });                                                                                                      // 19810
            }                                                                                                          // 19811
            clearTimeout(module.performance.timer);                                                                    // 19812
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 19813
          },                                                                                                           // 19814
          display: function() {                                                                                        // 19815
            var                                                                                                        // 19816
              title = settings.name + ':',                                                                             // 19817
              totalTime = 0                                                                                            // 19818
            ;                                                                                                          // 19819
            time = false;                                                                                              // 19820
            clearTimeout(module.performance.timer);                                                                    // 19821
            $.each(performance, function(index, data) {                                                                // 19822
              totalTime += data['Execution Time'];                                                                     // 19823
            });                                                                                                        // 19824
            title += ' ' + totalTime + 'ms';                                                                           // 19825
            if(moduleSelector) {                                                                                       // 19826
              title += ' \'' + moduleSelector + '\'';                                                                  // 19827
            }                                                                                                          // 19828
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 19829
              console.groupCollapsed(title);                                                                           // 19830
              if(console.table) {                                                                                      // 19831
                console.table(performance);                                                                            // 19832
              }                                                                                                        // 19833
              else {                                                                                                   // 19834
                $.each(performance, function(index, data) {                                                            // 19835
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 19836
                });                                                                                                    // 19837
              }                                                                                                        // 19838
              console.groupEnd();                                                                                      // 19839
            }                                                                                                          // 19840
            performance = [];                                                                                          // 19841
          }                                                                                                            // 19842
        },                                                                                                             // 19843
        invoke: function(query, passedArguments, context) {                                                            // 19844
          var                                                                                                          // 19845
            object = instance,                                                                                         // 19846
            maxDepth,                                                                                                  // 19847
            found,                                                                                                     // 19848
            response                                                                                                   // 19849
          ;                                                                                                            // 19850
          passedArguments = passedArguments || queryArguments;                                                         // 19851
          context         = element         || context;                                                                // 19852
          if(typeof query == 'string' && object !== undefined) {                                                       // 19853
            query    = query.split(/[\. ]/);                                                                           // 19854
            maxDepth = query.length - 1;                                                                               // 19855
            $.each(query, function(depth, value) {                                                                     // 19856
              var camelCaseValue = (depth != maxDepth)                                                                 // 19857
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 19858
                : query                                                                                                // 19859
              ;                                                                                                        // 19860
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 19861
                object = object[camelCaseValue];                                                                       // 19862
              }                                                                                                        // 19863
              else if( object[camelCaseValue] !== undefined ) {                                                        // 19864
                found = object[camelCaseValue];                                                                        // 19865
                return false;                                                                                          // 19866
              }                                                                                                        // 19867
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 19868
                object = object[value];                                                                                // 19869
              }                                                                                                        // 19870
              else if( object[value] !== undefined ) {                                                                 // 19871
                found = object[value];                                                                                 // 19872
                return false;                                                                                          // 19873
              }                                                                                                        // 19874
              else {                                                                                                   // 19875
                module.error(error.method, query);                                                                     // 19876
                return false;                                                                                          // 19877
              }                                                                                                        // 19878
            });                                                                                                        // 19879
          }                                                                                                            // 19880
          if ( $.isFunction( found ) ) {                                                                               // 19881
            response = found.apply(context, passedArguments);                                                          // 19882
          }                                                                                                            // 19883
          else if(found !== undefined) {                                                                               // 19884
            response = found;                                                                                          // 19885
          }                                                                                                            // 19886
          if($.isArray(returnedValue)) {                                                                               // 19887
            returnedValue.push(response);                                                                              // 19888
          }                                                                                                            // 19889
          else if(returnedValue !== undefined) {                                                                       // 19890
            returnedValue = [returnedValue, response];                                                                 // 19891
          }                                                                                                            // 19892
          else if(response !== undefined) {                                                                            // 19893
            returnedValue = response;                                                                                  // 19894
          }                                                                                                            // 19895
          return found;                                                                                                // 19896
        }                                                                                                              // 19897
      };                                                                                                               // 19898
                                                                                                                       // 19899
      if(methodInvoked) {                                                                                              // 19900
        if(instance === undefined) {                                                                                   // 19901
          module.initialize();                                                                                         // 19902
        }                                                                                                              // 19903
        module.invoke(query);                                                                                          // 19904
      }                                                                                                                // 19905
      else {                                                                                                           // 19906
        if(instance !== undefined) {                                                                                   // 19907
          instance.invoke('destroy');                                                                                  // 19908
        }                                                                                                              // 19909
        module.initialize();                                                                                           // 19910
      }                                                                                                                // 19911
    })                                                                                                                 // 19912
  ;                                                                                                                    // 19913
                                                                                                                       // 19914
  return (returnedValue !== undefined)                                                                                 // 19915
    ? returnedValue                                                                                                    // 19916
    : this                                                                                                             // 19917
  ;                                                                                                                    // 19918
};                                                                                                                     // 19919
                                                                                                                       // 19920
$.fn.state.settings = {                                                                                                // 19921
                                                                                                                       // 19922
  // module info                                                                                                       // 19923
  name           : 'State',                                                                                            // 19924
                                                                                                                       // 19925
  // debug output                                                                                                      // 19926
  debug          : false,                                                                                              // 19927
                                                                                                                       // 19928
  // verbose debug output                                                                                              // 19929
  verbose        : false,                                                                                              // 19930
                                                                                                                       // 19931
  // namespace for events                                                                                              // 19932
  namespace      : 'state',                                                                                            // 19933
                                                                                                                       // 19934
  // debug data includes performance                                                                                   // 19935
  performance    : true,                                                                                               // 19936
                                                                                                                       // 19937
  // callback occurs on state change                                                                                   // 19938
  onActivate     : function() {},                                                                                      // 19939
  onDeactivate   : function() {},                                                                                      // 19940
  onChange       : function() {},                                                                                      // 19941
                                                                                                                       // 19942
  // state test functions                                                                                              // 19943
  activateTest   : function() { return true; },                                                                        // 19944
  deactivateTest : function() { return true; },                                                                        // 19945
                                                                                                                       // 19946
  // whether to automatically map default states                                                                       // 19947
  automatic      : true,                                                                                               // 19948
                                                                                                                       // 19949
  // activate / deactivate changes all elements instantiated at same time                                              // 19950
  sync           : false,                                                                                              // 19951
                                                                                                                       // 19952
  // default flash text duration, used for temporarily changing text of an element                                     // 19953
  flashDuration  : 1000,                                                                                               // 19954
                                                                                                                       // 19955
  // selector filter                                                                                                   // 19956
  filter     : {                                                                                                       // 19957
    text   : '.loading, .disabled',                                                                                    // 19958
    active : '.disabled'                                                                                               // 19959
  },                                                                                                                   // 19960
                                                                                                                       // 19961
  context    : false,                                                                                                  // 19962
                                                                                                                       // 19963
  // error                                                                                                             // 19964
  error: {                                                                                                             // 19965
    beforeSend : 'The before send function has cancelled state change',                                                // 19966
    method     : 'The method you called is not defined.'                                                               // 19967
  },                                                                                                                   // 19968
                                                                                                                       // 19969
  // metadata                                                                                                          // 19970
  metadata: {                                                                                                          // 19971
    promise    : 'promise',                                                                                            // 19972
    storedText : 'stored-text'                                                                                         // 19973
  },                                                                                                                   // 19974
                                                                                                                       // 19975
  // change class on state                                                                                             // 19976
  className: {                                                                                                         // 19977
    active   : 'active',                                                                                               // 19978
    disabled : 'disabled',                                                                                             // 19979
    error    : 'error',                                                                                                // 19980
    loading  : 'loading',                                                                                              // 19981
    success  : 'success',                                                                                              // 19982
    warning  : 'warning'                                                                                               // 19983
  },                                                                                                                   // 19984
                                                                                                                       // 19985
  selector: {                                                                                                          // 19986
    // selector for text node                                                                                          // 19987
    text: false                                                                                                        // 19988
  },                                                                                                                   // 19989
                                                                                                                       // 19990
  defaults : {                                                                                                         // 19991
    input: {                                                                                                           // 19992
      disabled : true,                                                                                                 // 19993
      loading  : true,                                                                                                 // 19994
      active   : true                                                                                                  // 19995
    },                                                                                                                 // 19996
    button: {                                                                                                          // 19997
      disabled : true,                                                                                                 // 19998
      loading  : true,                                                                                                 // 19999
      active   : true,                                                                                                 // 20000
    },                                                                                                                 // 20001
    progress: {                                                                                                        // 20002
      active   : true,                                                                                                 // 20003
      success  : true,                                                                                                 // 20004
      warning  : true,                                                                                                 // 20005
      error    : true                                                                                                  // 20006
    }                                                                                                                  // 20007
  },                                                                                                                   // 20008
                                                                                                                       // 20009
  states     : {                                                                                                       // 20010
    active   : true,                                                                                                   // 20011
    disabled : true,                                                                                                   // 20012
    error    : true,                                                                                                   // 20013
    loading  : true,                                                                                                   // 20014
    success  : true,                                                                                                   // 20015
    warning  : true                                                                                                    // 20016
  },                                                                                                                   // 20017
                                                                                                                       // 20018
  text     : {                                                                                                         // 20019
    disabled   : false,                                                                                                // 20020
    flash      : false,                                                                                                // 20021
    hover      : false,                                                                                                // 20022
    active     : false,                                                                                                // 20023
    inactive   : false,                                                                                                // 20024
    activate   : false,                                                                                                // 20025
    deactivate : false                                                                                                 // 20026
  }                                                                                                                    // 20027
                                                                                                                       // 20028
};                                                                                                                     // 20029
                                                                                                                       // 20030
                                                                                                                       // 20031
                                                                                                                       // 20032
})( jQuery, window , document );                                                                                       // 20033
                                                                                                                       // 20034
/*!                                                                                                                    // 20035
 * # Semantic UI 2.1.2 - Visibility                                                                                    // 20036
 * http://github.com/semantic-org/semantic-ui/                                                                         // 20037
 *                                                                                                                     // 20038
 *                                                                                                                     // 20039
 * Copyright 2015 Contributors                                                                                         // 20040
 * Released under the MIT license                                                                                      // 20041
 * http://opensource.org/licenses/MIT                                                                                  // 20042
 *                                                                                                                     // 20043
 */                                                                                                                    // 20044
                                                                                                                       // 20045
;(function ( $, window, document, undefined ) {                                                                        // 20046
                                                                                                                       // 20047
"use strict";                                                                                                          // 20048
                                                                                                                       // 20049
$.fn.visibility = function(parameters) {                                                                               // 20050
  var                                                                                                                  // 20051
    $allModules    = $(this),                                                                                          // 20052
    moduleSelector = $allModules.selector || '',                                                                       // 20053
                                                                                                                       // 20054
    time           = new Date().getTime(),                                                                             // 20055
    performance    = [],                                                                                               // 20056
                                                                                                                       // 20057
    query          = arguments[0],                                                                                     // 20058
    methodInvoked  = (typeof query == 'string'),                                                                       // 20059
    queryArguments = [].slice.call(arguments, 1),                                                                      // 20060
    returnedValue                                                                                                      // 20061
  ;                                                                                                                    // 20062
                                                                                                                       // 20063
  $allModules                                                                                                          // 20064
    .each(function() {                                                                                                 // 20065
      var                                                                                                              // 20066
        settings        = ( $.isPlainObject(parameters) )                                                              // 20067
          ? $.extend(true, {}, $.fn.visibility.settings, parameters)                                                   // 20068
          : $.extend({}, $.fn.visibility.settings),                                                                    // 20069
                                                                                                                       // 20070
        className       = settings.className,                                                                          // 20071
        namespace       = settings.namespace,                                                                          // 20072
        error           = settings.error,                                                                              // 20073
        metadata        = settings.metadata,                                                                           // 20074
                                                                                                                       // 20075
        eventNamespace  = '.' + namespace,                                                                             // 20076
        moduleNamespace = 'module-' + namespace,                                                                       // 20077
                                                                                                                       // 20078
        $window         = $(window),                                                                                   // 20079
                                                                                                                       // 20080
        $module         = $(this),                                                                                     // 20081
        $context        = $(settings.context),                                                                         // 20082
                                                                                                                       // 20083
        $placeholder,                                                                                                  // 20084
                                                                                                                       // 20085
        selector        = $module.selector || '',                                                                      // 20086
        instance        = $module.data(moduleNamespace),                                                               // 20087
                                                                                                                       // 20088
        requestAnimationFrame = window.requestAnimationFrame                                                           // 20089
          || window.mozRequestAnimationFrame                                                                           // 20090
          || window.webkitRequestAnimationFrame                                                                        // 20091
          || window.msRequestAnimationFrame                                                                            // 20092
          || function(callback) { setTimeout(callback, 0); },                                                          // 20093
                                                                                                                       // 20094
        element         = this,                                                                                        // 20095
        disabled        = false,                                                                                       // 20096
                                                                                                                       // 20097
        observer,                                                                                                      // 20098
        module                                                                                                         // 20099
      ;                                                                                                                // 20100
                                                                                                                       // 20101
      module = {                                                                                                       // 20102
                                                                                                                       // 20103
        initialize: function() {                                                                                       // 20104
          module.debug('Initializing', settings);                                                                      // 20105
                                                                                                                       // 20106
          module.setup.cache();                                                                                        // 20107
                                                                                                                       // 20108
          if( module.should.trackChanges() ) {                                                                         // 20109
                                                                                                                       // 20110
            if(settings.type == 'image') {                                                                             // 20111
              module.setup.image();                                                                                    // 20112
            }                                                                                                          // 20113
            if(settings.type == 'fixed') {                                                                             // 20114
              module.setup.fixed();                                                                                    // 20115
            }                                                                                                          // 20116
                                                                                                                       // 20117
            if(settings.observeChanges) {                                                                              // 20118
              module.observeChanges();                                                                                 // 20119
            }                                                                                                          // 20120
            module.bind.events();                                                                                      // 20121
          }                                                                                                            // 20122
                                                                                                                       // 20123
          module.save.position();                                                                                      // 20124
          if( !module.is.visible() ) {                                                                                 // 20125
            module.error(error.visible, $module);                                                                      // 20126
          }                                                                                                            // 20127
                                                                                                                       // 20128
          if(settings.initialCheck) {                                                                                  // 20129
            module.checkVisibility();                                                                                  // 20130
          }                                                                                                            // 20131
          module.instantiate();                                                                                        // 20132
        },                                                                                                             // 20133
                                                                                                                       // 20134
        instantiate: function() {                                                                                      // 20135
          module.debug('Storing instance', module);                                                                    // 20136
          $module                                                                                                      // 20137
            .data(moduleNamespace, module)                                                                             // 20138
          ;                                                                                                            // 20139
          instance = module;                                                                                           // 20140
        },                                                                                                             // 20141
                                                                                                                       // 20142
        destroy: function() {                                                                                          // 20143
          module.verbose('Destroying previous module');                                                                // 20144
          if(observer) {                                                                                               // 20145
            observer.disconnect();                                                                                     // 20146
          }                                                                                                            // 20147
          $window                                                                                                      // 20148
            .off('load'   + eventNamespace, module.event.load)                                                         // 20149
            .off('resize' + eventNamespace, module.event.resize)                                                       // 20150
          ;                                                                                                            // 20151
          $context                                                                                                     // 20152
            .off('scrollchange' + eventNamespace, module.event.scrollchange)                                           // 20153
          ;                                                                                                            // 20154
          $module                                                                                                      // 20155
            .off(eventNamespace)                                                                                       // 20156
            .removeData(moduleNamespace)                                                                               // 20157
          ;                                                                                                            // 20158
        },                                                                                                             // 20159
                                                                                                                       // 20160
        observeChanges: function() {                                                                                   // 20161
          if('MutationObserver' in window) {                                                                           // 20162
            observer = new MutationObserver(function(mutations) {                                                      // 20163
              module.verbose('DOM tree modified, updating visibility calculations');                                   // 20164
              module.timer = setTimeout(function() {                                                                   // 20165
                module.verbose('DOM tree modified, updating sticky menu');                                             // 20166
                module.refresh();                                                                                      // 20167
              }, 100);                                                                                                 // 20168
            });                                                                                                        // 20169
            observer.observe(element, {                                                                                // 20170
              childList : true,                                                                                        // 20171
              subtree   : true                                                                                         // 20172
            });                                                                                                        // 20173
            module.debug('Setting up mutation observer', observer);                                                    // 20174
          }                                                                                                            // 20175
        },                                                                                                             // 20176
                                                                                                                       // 20177
        bind: {                                                                                                        // 20178
          events: function() {                                                                                         // 20179
            module.verbose('Binding visibility events to scroll and resize');                                          // 20180
            if(settings.refreshOnLoad) {                                                                               // 20181
              $window                                                                                                  // 20182
                .on('load'   + eventNamespace, module.event.load)                                                      // 20183
              ;                                                                                                        // 20184
            }                                                                                                          // 20185
            $window                                                                                                    // 20186
              .on('resize' + eventNamespace, module.event.resize)                                                      // 20187
            ;                                                                                                          // 20188
            // pub/sub pattern                                                                                         // 20189
            $context                                                                                                   // 20190
              .off('scroll'      + eventNamespace)                                                                     // 20191
              .on('scroll'       + eventNamespace, module.event.scroll)                                                // 20192
              .on('scrollchange' + eventNamespace, module.event.scrollchange)                                          // 20193
            ;                                                                                                          // 20194
          }                                                                                                            // 20195
        },                                                                                                             // 20196
                                                                                                                       // 20197
        event: {                                                                                                       // 20198
          resize: function() {                                                                                         // 20199
            module.debug('Window resized');                                                                            // 20200
            if(settings.refreshOnResize) {                                                                             // 20201
              requestAnimationFrame(module.refresh);                                                                   // 20202
            }                                                                                                          // 20203
          },                                                                                                           // 20204
          load: function() {                                                                                           // 20205
            module.debug('Page finished loading');                                                                     // 20206
            requestAnimationFrame(module.refresh);                                                                     // 20207
          },                                                                                                           // 20208
          // publishes scrollchange event on one scroll                                                                // 20209
          scroll: function() {                                                                                         // 20210
            if(settings.throttle) {                                                                                    // 20211
              clearTimeout(module.timer);                                                                              // 20212
              module.timer = setTimeout(function() {                                                                   // 20213
                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);                    // 20214
              }, settings.throttle);                                                                                   // 20215
            }                                                                                                          // 20216
            else {                                                                                                     // 20217
              requestAnimationFrame(function() {                                                                       // 20218
                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);                    // 20219
              });                                                                                                      // 20220
            }                                                                                                          // 20221
          },                                                                                                           // 20222
          // subscribes to scrollchange                                                                                // 20223
          scrollchange: function(event, scrollPosition) {                                                              // 20224
            module.checkVisibility(scrollPosition);                                                                    // 20225
          },                                                                                                           // 20226
        },                                                                                                             // 20227
                                                                                                                       // 20228
        precache: function(images, callback) {                                                                         // 20229
          if (!(images instanceof Array)) {                                                                            // 20230
            images = [images];                                                                                         // 20231
          }                                                                                                            // 20232
          var                                                                                                          // 20233
            imagesLength  = images.length,                                                                             // 20234
            loadedCounter = 0,                                                                                         // 20235
            cache         = [],                                                                                        // 20236
            cacheImage    = document.createElement('img'),                                                             // 20237
            handleLoad    = function() {                                                                               // 20238
              loadedCounter++;                                                                                         // 20239
              if (loadedCounter >= images.length) {                                                                    // 20240
                if ($.isFunction(callback)) {                                                                          // 20241
                  callback();                                                                                          // 20242
                }                                                                                                      // 20243
              }                                                                                                        // 20244
            }                                                                                                          // 20245
          ;                                                                                                            // 20246
          while (imagesLength--) {                                                                                     // 20247
            cacheImage         = document.createElement('img');                                                        // 20248
            cacheImage.onload  = handleLoad;                                                                           // 20249
            cacheImage.onerror = handleLoad;                                                                           // 20250
            cacheImage.src     = images[imagesLength];                                                                 // 20251
            cache.push(cacheImage);                                                                                    // 20252
          }                                                                                                            // 20253
        },                                                                                                             // 20254
                                                                                                                       // 20255
        enableCallbacks: function() {                                                                                  // 20256
          module.debug('Allowing callbacks to occur');                                                                 // 20257
          disabled = false;                                                                                            // 20258
        },                                                                                                             // 20259
                                                                                                                       // 20260
        disableCallbacks: function() {                                                                                 // 20261
          module.debug('Disabling all callbacks temporarily');                                                         // 20262
          disabled = true;                                                                                             // 20263
        },                                                                                                             // 20264
                                                                                                                       // 20265
        should: {                                                                                                      // 20266
          trackChanges: function() {                                                                                   // 20267
            if(methodInvoked) {                                                                                        // 20268
              module.debug('One time query, no need to bind events');                                                  // 20269
              return false;                                                                                            // 20270
            }                                                                                                          // 20271
            module.debug('Callbacks being attached');                                                                  // 20272
            return true;                                                                                               // 20273
          }                                                                                                            // 20274
        },                                                                                                             // 20275
                                                                                                                       // 20276
        setup: {                                                                                                       // 20277
          cache: function() {                                                                                          // 20278
            module.cache = {                                                                                           // 20279
              occurred : {},                                                                                           // 20280
              screen   : {},                                                                                           // 20281
              element  : {},                                                                                           // 20282
            };                                                                                                         // 20283
          },                                                                                                           // 20284
          image: function() {                                                                                          // 20285
            var                                                                                                        // 20286
              src = $module.data(metadata.src)                                                                         // 20287
            ;                                                                                                          // 20288
            if(src) {                                                                                                  // 20289
              module.verbose('Lazy loading image', src);                                                               // 20290
              settings.once           = true;                                                                          // 20291
              settings.observeChanges = false;                                                                         // 20292
                                                                                                                       // 20293
              // show when top visible                                                                                 // 20294
              settings.onOnScreen = function() {                                                                       // 20295
                module.debug('Image on screen', element);                                                              // 20296
                module.precache(src, function() {                                                                      // 20297
                  module.set.image(src);                                                                               // 20298
                });                                                                                                    // 20299
              };                                                                                                       // 20300
            }                                                                                                          // 20301
          },                                                                                                           // 20302
          fixed: function() {                                                                                          // 20303
            module.debug('Setting up fixed');                                                                          // 20304
            settings.once           = false;                                                                           // 20305
            settings.observeChanges = false;                                                                           // 20306
            settings.initialCheck   = true;                                                                            // 20307
            settings.refreshOnLoad  = true;                                                                            // 20308
            if(!parameters.transition) {                                                                               // 20309
              settings.transition = false;                                                                             // 20310
            }                                                                                                          // 20311
            module.create.placeholder();                                                                               // 20312
            module.debug('Added placeholder', $placeholder);                                                           // 20313
            settings.onTopPassed = function() {                                                                        // 20314
              module.debug('Element passed, adding fixed position', $module);                                          // 20315
              module.show.placeholder();                                                                               // 20316
              module.set.fixed();                                                                                      // 20317
              if(settings.transition) {                                                                                // 20318
                if($.fn.transition !== undefined) {                                                                    // 20319
                  $module.transition(settings.transition, settings.duration);                                          // 20320
                }                                                                                                      // 20321
              }                                                                                                        // 20322
            };                                                                                                         // 20323
            settings.onTopPassedReverse = function() {                                                                 // 20324
              module.debug('Element returned to position, removing fixed', $module);                                   // 20325
              module.hide.placeholder();                                                                               // 20326
              module.remove.fixed();                                                                                   // 20327
            };                                                                                                         // 20328
          }                                                                                                            // 20329
        },                                                                                                             // 20330
                                                                                                                       // 20331
        create: {                                                                                                      // 20332
          placeholder: function() {                                                                                    // 20333
            module.verbose('Creating fixed position placeholder');                                                     // 20334
            $placeholder = $module                                                                                     // 20335
              .clone(false)                                                                                            // 20336
              .css('display', 'none')                                                                                  // 20337
              .addClass(className.placeholder)                                                                         // 20338
              .insertAfter($module)                                                                                    // 20339
            ;                                                                                                          // 20340
          }                                                                                                            // 20341
        },                                                                                                             // 20342
                                                                                                                       // 20343
        show: {                                                                                                        // 20344
          placeholder: function() {                                                                                    // 20345
            module.verbose('Showing placeholder');                                                                     // 20346
            $placeholder                                                                                               // 20347
              .css('display', 'block')                                                                                 // 20348
              .css('visibility', 'hidden')                                                                             // 20349
            ;                                                                                                          // 20350
          }                                                                                                            // 20351
        },                                                                                                             // 20352
        hide: {                                                                                                        // 20353
          placeholder: function() {                                                                                    // 20354
            module.verbose('Hiding placeholder');                                                                      // 20355
            $placeholder                                                                                               // 20356
              .css('display', 'none')                                                                                  // 20357
              .css('visibility', '')                                                                                   // 20358
            ;                                                                                                          // 20359
          }                                                                                                            // 20360
        },                                                                                                             // 20361
                                                                                                                       // 20362
        set: {                                                                                                         // 20363
          fixed: function() {                                                                                          // 20364
            module.verbose('Setting element to fixed position');                                                       // 20365
            $module                                                                                                    // 20366
              .addClass(className.fixed)                                                                               // 20367
              .css({                                                                                                   // 20368
                position : 'fixed',                                                                                    // 20369
                top      : settings.offset + 'px',                                                                     // 20370
                left     : 'auto',                                                                                     // 20371
                zIndex   : '1'                                                                                         // 20372
              })                                                                                                       // 20373
            ;                                                                                                          // 20374
          },                                                                                                           // 20375
          image: function(src) {                                                                                       // 20376
            $module                                                                                                    // 20377
              .attr('src', src)                                                                                        // 20378
            ;                                                                                                          // 20379
            if(settings.transition) {                                                                                  // 20380
              if( $.fn.transition !== undefined ) {                                                                    // 20381
                $module.transition(settings.transition, settings.duration);                                            // 20382
              }                                                                                                        // 20383
              else {                                                                                                   // 20384
                $module.fadeIn(settings.duration);                                                                     // 20385
              }                                                                                                        // 20386
            }                                                                                                          // 20387
            else {                                                                                                     // 20388
              $module.show();                                                                                          // 20389
            }                                                                                                          // 20390
          }                                                                                                            // 20391
        },                                                                                                             // 20392
                                                                                                                       // 20393
        is: {                                                                                                          // 20394
          onScreen: function() {                                                                                       // 20395
            var                                                                                                        // 20396
              calculations   = module.get.elementCalculations()                                                        // 20397
            ;                                                                                                          // 20398
            return calculations.onScreen;                                                                              // 20399
          },                                                                                                           // 20400
          offScreen: function() {                                                                                      // 20401
            var                                                                                                        // 20402
              calculations   = module.get.elementCalculations()                                                        // 20403
            ;                                                                                                          // 20404
            return calculations.offScreen;                                                                             // 20405
          },                                                                                                           // 20406
          visible: function() {                                                                                        // 20407
            if(module.cache && module.cache.element) {                                                                 // 20408
              return !(module.cache.element.width === 0 && module.cache.element.offset.top === 0);                     // 20409
            }                                                                                                          // 20410
            return false;                                                                                              // 20411
          }                                                                                                            // 20412
        },                                                                                                             // 20413
                                                                                                                       // 20414
        refresh: function() {                                                                                          // 20415
          module.debug('Refreshing constants (width/height)');                                                         // 20416
          if(settings.type == 'fixed') {                                                                               // 20417
            module.remove.fixed();                                                                                     // 20418
            module.remove.occurred();                                                                                  // 20419
          }                                                                                                            // 20420
          module.reset();                                                                                              // 20421
          module.save.position();                                                                                      // 20422
          if(settings.checkOnRefresh) {                                                                                // 20423
            module.checkVisibility();                                                                                  // 20424
          }                                                                                                            // 20425
          settings.onRefresh.call(element);                                                                            // 20426
        },                                                                                                             // 20427
                                                                                                                       // 20428
        reset: function() {                                                                                            // 20429
          module.verbose('Reseting all cached values');                                                                // 20430
          if( $.isPlainObject(module.cache) ) {                                                                        // 20431
            module.cache.screen = {};                                                                                  // 20432
            module.cache.element = {};                                                                                 // 20433
          }                                                                                                            // 20434
        },                                                                                                             // 20435
                                                                                                                       // 20436
        checkVisibility: function(scroll) {                                                                            // 20437
          module.verbose('Checking visibility of element', module.cache.element);                                      // 20438
                                                                                                                       // 20439
          if( !disabled && module.is.visible() ) {                                                                     // 20440
                                                                                                                       // 20441
            // save scroll position                                                                                    // 20442
            module.save.scroll(scroll);                                                                                // 20443
                                                                                                                       // 20444
            // update calculations derived from scroll                                                                 // 20445
            module.save.calculations();                                                                                // 20446
                                                                                                                       // 20447
            // percentage                                                                                              // 20448
            module.passed();                                                                                           // 20449
                                                                                                                       // 20450
            // reverse (must be first)                                                                                 // 20451
            module.passingReverse();                                                                                   // 20452
            module.topVisibleReverse();                                                                                // 20453
            module.bottomVisibleReverse();                                                                             // 20454
            module.topPassedReverse();                                                                                 // 20455
            module.bottomPassedReverse();                                                                              // 20456
                                                                                                                       // 20457
            // one time                                                                                                // 20458
            module.onScreen();                                                                                         // 20459
            module.offScreen();                                                                                        // 20460
            module.passing();                                                                                          // 20461
            module.topVisible();                                                                                       // 20462
            module.bottomVisible();                                                                                    // 20463
            module.topPassed();                                                                                        // 20464
            module.bottomPassed();                                                                                     // 20465
                                                                                                                       // 20466
            // on update callback                                                                                      // 20467
            if(settings.onUpdate) {                                                                                    // 20468
              settings.onUpdate.call(element, module.get.elementCalculations());                                       // 20469
            }                                                                                                          // 20470
          }                                                                                                            // 20471
        },                                                                                                             // 20472
                                                                                                                       // 20473
        passed: function(amount, newCallback) {                                                                        // 20474
          var                                                                                                          // 20475
            calculations   = module.get.elementCalculations(),                                                         // 20476
            amountInPixels                                                                                             // 20477
          ;                                                                                                            // 20478
          // assign callback                                                                                           // 20479
          if(amount && newCallback) {                                                                                  // 20480
            settings.onPassed[amount] = newCallback;                                                                   // 20481
          }                                                                                                            // 20482
          else if(amount !== undefined) {                                                                              // 20483
            return (module.get.pixelsPassed(amount) > calculations.pixelsPassed);                                      // 20484
          }                                                                                                            // 20485
          else if(calculations.passing) {                                                                              // 20486
            $.each(settings.onPassed, function(amount, callback) {                                                     // 20487
              if(calculations.bottomVisible || calculations.pixelsPassed > module.get.pixelsPassed(amount)) {          // 20488
                module.execute(callback, amount);                                                                      // 20489
              }                                                                                                        // 20490
              else if(!settings.once) {                                                                                // 20491
                module.remove.occurred(callback);                                                                      // 20492
              }                                                                                                        // 20493
            });                                                                                                        // 20494
          }                                                                                                            // 20495
        },                                                                                                             // 20496
                                                                                                                       // 20497
        onScreen: function(newCallback) {                                                                              // 20498
          var                                                                                                          // 20499
            calculations = module.get.elementCalculations(),                                                           // 20500
            callback     = newCallback || settings.onOnScreen,                                                         // 20501
            callbackName = 'onScreen'                                                                                  // 20502
          ;                                                                                                            // 20503
          if(newCallback) {                                                                                            // 20504
            module.debug('Adding callback for onScreen', newCallback);                                                 // 20505
            settings.onOnScreen = newCallback;                                                                         // 20506
          }                                                                                                            // 20507
          if(calculations.onScreen) {                                                                                  // 20508
            module.execute(callback, callbackName);                                                                    // 20509
          }                                                                                                            // 20510
          else if(!settings.once) {                                                                                    // 20511
            module.remove.occurred(callbackName);                                                                      // 20512
          }                                                                                                            // 20513
          if(newCallback !== undefined) {                                                                              // 20514
            return calculations.onOnScreen;                                                                            // 20515
          }                                                                                                            // 20516
        },                                                                                                             // 20517
                                                                                                                       // 20518
        offScreen: function(newCallback) {                                                                             // 20519
          var                                                                                                          // 20520
            calculations = module.get.elementCalculations(),                                                           // 20521
            callback     = newCallback || settings.onOffScreen,                                                        // 20522
            callbackName = 'offScreen'                                                                                 // 20523
          ;                                                                                                            // 20524
          if(newCallback) {                                                                                            // 20525
            module.debug('Adding callback for offScreen', newCallback);                                                // 20526
            settings.onOffScreen = newCallback;                                                                        // 20527
          }                                                                                                            // 20528
          if(calculations.offScreen) {                                                                                 // 20529
            module.execute(callback, callbackName);                                                                    // 20530
          }                                                                                                            // 20531
          else if(!settings.once) {                                                                                    // 20532
            module.remove.occurred(callbackName);                                                                      // 20533
          }                                                                                                            // 20534
          if(newCallback !== undefined) {                                                                              // 20535
            return calculations.onOffScreen;                                                                           // 20536
          }                                                                                                            // 20537
        },                                                                                                             // 20538
                                                                                                                       // 20539
        passing: function(newCallback) {                                                                               // 20540
          var                                                                                                          // 20541
            calculations = module.get.elementCalculations(),                                                           // 20542
            callback     = newCallback || settings.onPassing,                                                          // 20543
            callbackName = 'passing'                                                                                   // 20544
          ;                                                                                                            // 20545
          if(newCallback) {                                                                                            // 20546
            module.debug('Adding callback for passing', newCallback);                                                  // 20547
            settings.onPassing = newCallback;                                                                          // 20548
          }                                                                                                            // 20549
          if(calculations.passing) {                                                                                   // 20550
            module.execute(callback, callbackName);                                                                    // 20551
          }                                                                                                            // 20552
          else if(!settings.once) {                                                                                    // 20553
            module.remove.occurred(callbackName);                                                                      // 20554
          }                                                                                                            // 20555
          if(newCallback !== undefined) {                                                                              // 20556
            return calculations.passing;                                                                               // 20557
          }                                                                                                            // 20558
        },                                                                                                             // 20559
                                                                                                                       // 20560
                                                                                                                       // 20561
        topVisible: function(newCallback) {                                                                            // 20562
          var                                                                                                          // 20563
            calculations = module.get.elementCalculations(),                                                           // 20564
            callback     = newCallback || settings.onTopVisible,                                                       // 20565
            callbackName = 'topVisible'                                                                                // 20566
          ;                                                                                                            // 20567
          if(newCallback) {                                                                                            // 20568
            module.debug('Adding callback for top visible', newCallback);                                              // 20569
            settings.onTopVisible = newCallback;                                                                       // 20570
          }                                                                                                            // 20571
          if(calculations.topVisible) {                                                                                // 20572
            module.execute(callback, callbackName);                                                                    // 20573
          }                                                                                                            // 20574
          else if(!settings.once) {                                                                                    // 20575
            module.remove.occurred(callbackName);                                                                      // 20576
          }                                                                                                            // 20577
          if(newCallback === undefined) {                                                                              // 20578
            return calculations.topVisible;                                                                            // 20579
          }                                                                                                            // 20580
        },                                                                                                             // 20581
                                                                                                                       // 20582
        bottomVisible: function(newCallback) {                                                                         // 20583
          var                                                                                                          // 20584
            calculations = module.get.elementCalculations(),                                                           // 20585
            callback     = newCallback || settings.onBottomVisible,                                                    // 20586
            callbackName = 'bottomVisible'                                                                             // 20587
          ;                                                                                                            // 20588
          if(newCallback) {                                                                                            // 20589
            module.debug('Adding callback for bottom visible', newCallback);                                           // 20590
            settings.onBottomVisible = newCallback;                                                                    // 20591
          }                                                                                                            // 20592
          if(calculations.bottomVisible) {                                                                             // 20593
            module.execute(callback, callbackName);                                                                    // 20594
          }                                                                                                            // 20595
          else if(!settings.once) {                                                                                    // 20596
            module.remove.occurred(callbackName);                                                                      // 20597
          }                                                                                                            // 20598
          if(newCallback === undefined) {                                                                              // 20599
            return calculations.bottomVisible;                                                                         // 20600
          }                                                                                                            // 20601
        },                                                                                                             // 20602
                                                                                                                       // 20603
        topPassed: function(newCallback) {                                                                             // 20604
          var                                                                                                          // 20605
            calculations = module.get.elementCalculations(),                                                           // 20606
            callback     = newCallback || settings.onTopPassed,                                                        // 20607
            callbackName = 'topPassed'                                                                                 // 20608
          ;                                                                                                            // 20609
          if(newCallback) {                                                                                            // 20610
            module.debug('Adding callback for top passed', newCallback);                                               // 20611
            settings.onTopPassed = newCallback;                                                                        // 20612
          }                                                                                                            // 20613
          if(calculations.topPassed) {                                                                                 // 20614
            module.execute(callback, callbackName);                                                                    // 20615
          }                                                                                                            // 20616
          else if(!settings.once) {                                                                                    // 20617
            module.remove.occurred(callbackName);                                                                      // 20618
          }                                                                                                            // 20619
          if(newCallback === undefined) {                                                                              // 20620
            return calculations.topPassed;                                                                             // 20621
          }                                                                                                            // 20622
        },                                                                                                             // 20623
                                                                                                                       // 20624
        bottomPassed: function(newCallback) {                                                                          // 20625
          var                                                                                                          // 20626
            calculations = module.get.elementCalculations(),                                                           // 20627
            callback     = newCallback || settings.onBottomPassed,                                                     // 20628
            callbackName = 'bottomPassed'                                                                              // 20629
          ;                                                                                                            // 20630
          if(newCallback) {                                                                                            // 20631
            module.debug('Adding callback for bottom passed', newCallback);                                            // 20632
            settings.onBottomPassed = newCallback;                                                                     // 20633
          }                                                                                                            // 20634
          if(calculations.bottomPassed) {                                                                              // 20635
            module.execute(callback, callbackName);                                                                    // 20636
          }                                                                                                            // 20637
          else if(!settings.once) {                                                                                    // 20638
            module.remove.occurred(callbackName);                                                                      // 20639
          }                                                                                                            // 20640
          if(newCallback === undefined) {                                                                              // 20641
            return calculations.bottomPassed;                                                                          // 20642
          }                                                                                                            // 20643
        },                                                                                                             // 20644
                                                                                                                       // 20645
        passingReverse: function(newCallback) {                                                                        // 20646
          var                                                                                                          // 20647
            calculations = module.get.elementCalculations(),                                                           // 20648
            callback     = newCallback || settings.onPassingReverse,                                                   // 20649
            callbackName = 'passingReverse'                                                                            // 20650
          ;                                                                                                            // 20651
          if(newCallback) {                                                                                            // 20652
            module.debug('Adding callback for passing reverse', newCallback);                                          // 20653
            settings.onPassingReverse = newCallback;                                                                   // 20654
          }                                                                                                            // 20655
          if(!calculations.passing) {                                                                                  // 20656
            if(module.get.occurred('passing')) {                                                                       // 20657
              module.execute(callback, callbackName);                                                                  // 20658
            }                                                                                                          // 20659
          }                                                                                                            // 20660
          else if(!settings.once) {                                                                                    // 20661
            module.remove.occurred(callbackName);                                                                      // 20662
          }                                                                                                            // 20663
          if(newCallback !== undefined) {                                                                              // 20664
            return !calculations.passing;                                                                              // 20665
          }                                                                                                            // 20666
        },                                                                                                             // 20667
                                                                                                                       // 20668
                                                                                                                       // 20669
        topVisibleReverse: function(newCallback) {                                                                     // 20670
          var                                                                                                          // 20671
            calculations = module.get.elementCalculations(),                                                           // 20672
            callback     = newCallback || settings.onTopVisibleReverse,                                                // 20673
            callbackName = 'topVisibleReverse'                                                                         // 20674
          ;                                                                                                            // 20675
          if(newCallback) {                                                                                            // 20676
            module.debug('Adding callback for top visible reverse', newCallback);                                      // 20677
            settings.onTopVisibleReverse = newCallback;                                                                // 20678
          }                                                                                                            // 20679
          if(!calculations.topVisible) {                                                                               // 20680
            if(module.get.occurred('topVisible')) {                                                                    // 20681
              module.execute(callback, callbackName);                                                                  // 20682
            }                                                                                                          // 20683
          }                                                                                                            // 20684
          else if(!settings.once) {                                                                                    // 20685
            module.remove.occurred(callbackName);                                                                      // 20686
          }                                                                                                            // 20687
          if(newCallback === undefined) {                                                                              // 20688
            return !calculations.topVisible;                                                                           // 20689
          }                                                                                                            // 20690
        },                                                                                                             // 20691
                                                                                                                       // 20692
        bottomVisibleReverse: function(newCallback) {                                                                  // 20693
          var                                                                                                          // 20694
            calculations = module.get.elementCalculations(),                                                           // 20695
            callback     = newCallback || settings.onBottomVisibleReverse,                                             // 20696
            callbackName = 'bottomVisibleReverse'                                                                      // 20697
          ;                                                                                                            // 20698
          if(newCallback) {                                                                                            // 20699
            module.debug('Adding callback for bottom visible reverse', newCallback);                                   // 20700
            settings.onBottomVisibleReverse = newCallback;                                                             // 20701
          }                                                                                                            // 20702
          if(!calculations.bottomVisible) {                                                                            // 20703
            if(module.get.occurred('bottomVisible')) {                                                                 // 20704
              module.execute(callback, callbackName);                                                                  // 20705
            }                                                                                                          // 20706
          }                                                                                                            // 20707
          else if(!settings.once) {                                                                                    // 20708
            module.remove.occurred(callbackName);                                                                      // 20709
          }                                                                                                            // 20710
          if(newCallback === undefined) {                                                                              // 20711
            return !calculations.bottomVisible;                                                                        // 20712
          }                                                                                                            // 20713
        },                                                                                                             // 20714
                                                                                                                       // 20715
        topPassedReverse: function(newCallback) {                                                                      // 20716
          var                                                                                                          // 20717
            calculations = module.get.elementCalculations(),                                                           // 20718
            callback     = newCallback || settings.onTopPassedReverse,                                                 // 20719
            callbackName = 'topPassedReverse'                                                                          // 20720
          ;                                                                                                            // 20721
          if(newCallback) {                                                                                            // 20722
            module.debug('Adding callback for top passed reverse', newCallback);                                       // 20723
            settings.onTopPassedReverse = newCallback;                                                                 // 20724
          }                                                                                                            // 20725
          if(!calculations.topPassed) {                                                                                // 20726
            if(module.get.occurred('topPassed')) {                                                                     // 20727
              module.execute(callback, callbackName);                                                                  // 20728
            }                                                                                                          // 20729
          }                                                                                                            // 20730
          else if(!settings.once) {                                                                                    // 20731
            module.remove.occurred(callbackName);                                                                      // 20732
          }                                                                                                            // 20733
          if(newCallback === undefined) {                                                                              // 20734
            return !calculations.onTopPassed;                                                                          // 20735
          }                                                                                                            // 20736
        },                                                                                                             // 20737
                                                                                                                       // 20738
        bottomPassedReverse: function(newCallback) {                                                                   // 20739
          var                                                                                                          // 20740
            calculations = module.get.elementCalculations(),                                                           // 20741
            callback     = newCallback || settings.onBottomPassedReverse,                                              // 20742
            callbackName = 'bottomPassedReverse'                                                                       // 20743
          ;                                                                                                            // 20744
          if(newCallback) {                                                                                            // 20745
            module.debug('Adding callback for bottom passed reverse', newCallback);                                    // 20746
            settings.onBottomPassedReverse = newCallback;                                                              // 20747
          }                                                                                                            // 20748
          if(!calculations.bottomPassed) {                                                                             // 20749
            if(module.get.occurred('bottomPassed')) {                                                                  // 20750
              module.execute(callback, callbackName);                                                                  // 20751
            }                                                                                                          // 20752
          }                                                                                                            // 20753
          else if(!settings.once) {                                                                                    // 20754
            module.remove.occurred(callbackName);                                                                      // 20755
          }                                                                                                            // 20756
          if(newCallback === undefined) {                                                                              // 20757
            return !calculations.bottomPassed;                                                                         // 20758
          }                                                                                                            // 20759
        },                                                                                                             // 20760
                                                                                                                       // 20761
        execute: function(callback, callbackName) {                                                                    // 20762
          var                                                                                                          // 20763
            calculations = module.get.elementCalculations(),                                                           // 20764
            screen       = module.get.screenCalculations()                                                             // 20765
          ;                                                                                                            // 20766
          callback = callback || false;                                                                                // 20767
          if(callback) {                                                                                               // 20768
            if(settings.continuous) {                                                                                  // 20769
              module.debug('Callback being called continuously', callbackName, calculations);                          // 20770
              callback.call(element, calculations, screen);                                                            // 20771
            }                                                                                                          // 20772
            else if(!module.get.occurred(callbackName)) {                                                              // 20773
              module.debug('Conditions met', callbackName, calculations);                                              // 20774
              callback.call(element, calculations, screen);                                                            // 20775
            }                                                                                                          // 20776
          }                                                                                                            // 20777
          module.save.occurred(callbackName);                                                                          // 20778
        },                                                                                                             // 20779
                                                                                                                       // 20780
        remove: {                                                                                                      // 20781
          fixed: function() {                                                                                          // 20782
            module.debug('Removing fixed position');                                                                   // 20783
            $module                                                                                                    // 20784
              .removeClass(className.fixed)                                                                            // 20785
              .css({                                                                                                   // 20786
                position : '',                                                                                         // 20787
                top      : '',                                                                                         // 20788
                left     : '',                                                                                         // 20789
                zIndex   : ''                                                                                          // 20790
              })                                                                                                       // 20791
            ;                                                                                                          // 20792
          },                                                                                                           // 20793
          occurred: function(callback) {                                                                               // 20794
            if(callback) {                                                                                             // 20795
              var                                                                                                      // 20796
                occurred = module.cache.occurred                                                                       // 20797
              ;                                                                                                        // 20798
              if(occurred[callback] !== undefined && occurred[callback] === true) {                                    // 20799
                module.debug('Callback can now be called again', callback);                                            // 20800
                module.cache.occurred[callback] = false;                                                               // 20801
              }                                                                                                        // 20802
            }                                                                                                          // 20803
            else {                                                                                                     // 20804
              module.cache.occurred = {};                                                                              // 20805
            }                                                                                                          // 20806
          }                                                                                                            // 20807
        },                                                                                                             // 20808
                                                                                                                       // 20809
        save: {                                                                                                        // 20810
          calculations: function() {                                                                                   // 20811
            module.verbose('Saving all calculations necessary to determine positioning');                              // 20812
            module.save.direction();                                                                                   // 20813
            module.save.screenCalculations();                                                                          // 20814
            module.save.elementCalculations();                                                                         // 20815
          },                                                                                                           // 20816
          occurred: function(callback) {                                                                               // 20817
            if(callback) {                                                                                             // 20818
              if(module.cache.occurred[callback] === undefined || (module.cache.occurred[callback] !== true)) {        // 20819
                module.verbose('Saving callback occurred', callback);                                                  // 20820
                module.cache.occurred[callback] = true;                                                                // 20821
              }                                                                                                        // 20822
            }                                                                                                          // 20823
          },                                                                                                           // 20824
          scroll: function(scrollPosition) {                                                                           // 20825
            scrollPosition      = scrollPosition + settings.offset || $context.scrollTop() + settings.offset;          // 20826
            module.cache.scroll = scrollPosition;                                                                      // 20827
          },                                                                                                           // 20828
          direction: function() {                                                                                      // 20829
            var                                                                                                        // 20830
              scroll     = module.get.scroll(),                                                                        // 20831
              lastScroll = module.get.lastScroll(),                                                                    // 20832
              direction                                                                                                // 20833
            ;                                                                                                          // 20834
            if(scroll > lastScroll && lastScroll) {                                                                    // 20835
              direction = 'down';                                                                                      // 20836
            }                                                                                                          // 20837
            else if(scroll < lastScroll && lastScroll) {                                                               // 20838
              direction = 'up';                                                                                        // 20839
            }                                                                                                          // 20840
            else {                                                                                                     // 20841
              direction = 'static';                                                                                    // 20842
            }                                                                                                          // 20843
            module.cache.direction = direction;                                                                        // 20844
            return module.cache.direction;                                                                             // 20845
          },                                                                                                           // 20846
          elementPosition: function() {                                                                                // 20847
            var                                                                                                        // 20848
              element = module.cache.element,                                                                          // 20849
              screen  = module.get.screenSize()                                                                        // 20850
            ;                                                                                                          // 20851
            module.verbose('Saving element position');                                                                 // 20852
            // (quicker than $.extend)                                                                                 // 20853
            element.fits          = (element.height < screen.height);                                                  // 20854
            element.offset        = $module.offset();                                                                  // 20855
            element.width         = $module.outerWidth();                                                              // 20856
            element.height        = $module.outerHeight();                                                             // 20857
            // store                                                                                                   // 20858
            module.cache.element = element;                                                                            // 20859
            return element;                                                                                            // 20860
          },                                                                                                           // 20861
          elementCalculations: function() {                                                                            // 20862
            var                                                                                                        // 20863
              screen     = module.get.screenCalculations(),                                                            // 20864
              element    = module.get.elementPosition()                                                                // 20865
            ;                                                                                                          // 20866
            // offset                                                                                                  // 20867
            if(settings.includeMargin) {                                                                               // 20868
              element.margin        = {};                                                                              // 20869
              element.margin.top    = parseInt($module.css('margin-top'), 10);                                         // 20870
              element.margin.bottom = parseInt($module.css('margin-bottom'), 10);                                      // 20871
              element.top    = element.offset.top - element.margin.top;                                                // 20872
              element.bottom = element.offset.top + element.height + element.margin.bottom;                            // 20873
            }                                                                                                          // 20874
            else {                                                                                                     // 20875
              element.top    = element.offset.top;                                                                     // 20876
              element.bottom = element.offset.top + element.height;                                                    // 20877
            }                                                                                                          // 20878
                                                                                                                       // 20879
            // visibility                                                                                              // 20880
            element.topVisible       = (screen.bottom >= element.top);                                                 // 20881
            element.topPassed        = (screen.top >= element.top);                                                    // 20882
            element.bottomVisible    = (screen.bottom >= element.bottom);                                              // 20883
            element.bottomPassed     = (screen.top >= element.bottom);                                                 // 20884
            element.pixelsPassed     = 0;                                                                              // 20885
            element.percentagePassed = 0;                                                                              // 20886
                                                                                                                       // 20887
            // meta calculations                                                                                       // 20888
            element.onScreen  = (element.topVisible && !element.bottomPassed);                                         // 20889
            element.passing   = (element.topPassed && !element.bottomPassed);                                          // 20890
            element.offScreen = (!element.onScreen);                                                                   // 20891
                                                                                                                       // 20892
            // passing calculations                                                                                    // 20893
            if(element.passing) {                                                                                      // 20894
              element.pixelsPassed     = (screen.top - element.top);                                                   // 20895
              element.percentagePassed = (screen.top - element.top) / element.height;                                  // 20896
            }                                                                                                          // 20897
            module.cache.element = element;                                                                            // 20898
            module.verbose('Updated element calculations', element);                                                   // 20899
            return element;                                                                                            // 20900
          },                                                                                                           // 20901
          screenCalculations: function() {                                                                             // 20902
            var                                                                                                        // 20903
              scroll = module.get.scroll()                                                                             // 20904
            ;                                                                                                          // 20905
            module.save.direction();                                                                                   // 20906
            module.cache.screen.top    = scroll;                                                                       // 20907
            module.cache.screen.bottom = scroll + module.cache.screen.height;                                          // 20908
            return module.cache.screen;                                                                                // 20909
          },                                                                                                           // 20910
          screenSize: function() {                                                                                     // 20911
            module.verbose('Saving window position');                                                                  // 20912
            module.cache.screen = {                                                                                    // 20913
              height: $context.height()                                                                                // 20914
            };                                                                                                         // 20915
          },                                                                                                           // 20916
          position: function() {                                                                                       // 20917
            module.save.screenSize();                                                                                  // 20918
            module.save.elementPosition();                                                                             // 20919
          }                                                                                                            // 20920
        },                                                                                                             // 20921
                                                                                                                       // 20922
        get: {                                                                                                         // 20923
          pixelsPassed: function(amount) {                                                                             // 20924
            var                                                                                                        // 20925
              element = module.get.elementCalculations()                                                               // 20926
            ;                                                                                                          // 20927
            if(amount.search('%') > -1) {                                                                              // 20928
              return ( element.height * (parseInt(amount, 10) / 100) );                                                // 20929
            }                                                                                                          // 20930
            return parseInt(amount, 10);                                                                               // 20931
          },                                                                                                           // 20932
          occurred: function(callback) {                                                                               // 20933
            return (module.cache.occurred !== undefined)                                                               // 20934
              ? module.cache.occurred[callback] || false                                                               // 20935
              : false                                                                                                  // 20936
            ;                                                                                                          // 20937
          },                                                                                                           // 20938
          direction: function() {                                                                                      // 20939
            if(module.cache.direction === undefined) {                                                                 // 20940
              module.save.direction();                                                                                 // 20941
            }                                                                                                          // 20942
            return module.cache.direction;                                                                             // 20943
          },                                                                                                           // 20944
          elementPosition: function() {                                                                                // 20945
            if(module.cache.element === undefined) {                                                                   // 20946
              module.save.elementPosition();                                                                           // 20947
            }                                                                                                          // 20948
            return module.cache.element;                                                                               // 20949
          },                                                                                                           // 20950
          elementCalculations: function() {                                                                            // 20951
            if(module.cache.element === undefined) {                                                                   // 20952
              module.save.elementCalculations();                                                                       // 20953
            }                                                                                                          // 20954
            return module.cache.element;                                                                               // 20955
          },                                                                                                           // 20956
          screenCalculations: function() {                                                                             // 20957
            if(module.cache.screen === undefined) {                                                                    // 20958
              module.save.screenCalculations();                                                                        // 20959
            }                                                                                                          // 20960
            return module.cache.screen;                                                                                // 20961
          },                                                                                                           // 20962
          screenSize: function() {                                                                                     // 20963
            if(module.cache.screen === undefined) {                                                                    // 20964
              module.save.screenSize();                                                                                // 20965
            }                                                                                                          // 20966
            return module.cache.screen;                                                                                // 20967
          },                                                                                                           // 20968
          scroll: function() {                                                                                         // 20969
            if(module.cache.scroll === undefined) {                                                                    // 20970
              module.save.scroll();                                                                                    // 20971
            }                                                                                                          // 20972
            return module.cache.scroll;                                                                                // 20973
          },                                                                                                           // 20974
          lastScroll: function() {                                                                                     // 20975
            if(module.cache.screen === undefined) {                                                                    // 20976
              module.debug('First scroll event, no last scroll could be found');                                       // 20977
              return false;                                                                                            // 20978
            }                                                                                                          // 20979
            return module.cache.screen.top;                                                                            // 20980
          }                                                                                                            // 20981
        },                                                                                                             // 20982
                                                                                                                       // 20983
        setting: function(name, value) {                                                                               // 20984
          if( $.isPlainObject(name) ) {                                                                                // 20985
            $.extend(true, settings, name);                                                                            // 20986
          }                                                                                                            // 20987
          else if(value !== undefined) {                                                                               // 20988
            settings[name] = value;                                                                                    // 20989
          }                                                                                                            // 20990
          else {                                                                                                       // 20991
            return settings[name];                                                                                     // 20992
          }                                                                                                            // 20993
        },                                                                                                             // 20994
        internal: function(name, value) {                                                                              // 20995
          if( $.isPlainObject(name) ) {                                                                                // 20996
            $.extend(true, module, name);                                                                              // 20997
          }                                                                                                            // 20998
          else if(value !== undefined) {                                                                               // 20999
            module[name] = value;                                                                                      // 21000
          }                                                                                                            // 21001
          else {                                                                                                       // 21002
            return module[name];                                                                                       // 21003
          }                                                                                                            // 21004
        },                                                                                                             // 21005
        debug: function() {                                                                                            // 21006
          if(settings.debug) {                                                                                         // 21007
            if(settings.performance) {                                                                                 // 21008
              module.performance.log(arguments);                                                                       // 21009
            }                                                                                                          // 21010
            else {                                                                                                     // 21011
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 21012
              module.debug.apply(console, arguments);                                                                  // 21013
            }                                                                                                          // 21014
          }                                                                                                            // 21015
        },                                                                                                             // 21016
        verbose: function() {                                                                                          // 21017
          if(settings.verbose && settings.debug) {                                                                     // 21018
            if(settings.performance) {                                                                                 // 21019
              module.performance.log(arguments);                                                                       // 21020
            }                                                                                                          // 21021
            else {                                                                                                     // 21022
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 21023
              module.verbose.apply(console, arguments);                                                                // 21024
            }                                                                                                          // 21025
          }                                                                                                            // 21026
        },                                                                                                             // 21027
        error: function() {                                                                                            // 21028
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 21029
          module.error.apply(console, arguments);                                                                      // 21030
        },                                                                                                             // 21031
        performance: {                                                                                                 // 21032
          log: function(message) {                                                                                     // 21033
            var                                                                                                        // 21034
              currentTime,                                                                                             // 21035
              executionTime,                                                                                           // 21036
              previousTime                                                                                             // 21037
            ;                                                                                                          // 21038
            if(settings.performance) {                                                                                 // 21039
              currentTime   = new Date().getTime();                                                                    // 21040
              previousTime  = time || currentTime;                                                                     // 21041
              executionTime = currentTime - previousTime;                                                              // 21042
              time          = currentTime;                                                                             // 21043
              performance.push({                                                                                       // 21044
                'Name'           : message[0],                                                                         // 21045
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 21046
                'Element'        : element,                                                                            // 21047
                'Execution Time' : executionTime                                                                       // 21048
              });                                                                                                      // 21049
            }                                                                                                          // 21050
            clearTimeout(module.performance.timer);                                                                    // 21051
            module.performance.timer = setTimeout(module.performance.display, 500);                                    // 21052
          },                                                                                                           // 21053
          display: function() {                                                                                        // 21054
            var                                                                                                        // 21055
              title = settings.name + ':',                                                                             // 21056
              totalTime = 0                                                                                            // 21057
            ;                                                                                                          // 21058
            time = false;                                                                                              // 21059
            clearTimeout(module.performance.timer);                                                                    // 21060
            $.each(performance, function(index, data) {                                                                // 21061
              totalTime += data['Execution Time'];                                                                     // 21062
            });                                                                                                        // 21063
            title += ' ' + totalTime + 'ms';                                                                           // 21064
            if(moduleSelector) {                                                                                       // 21065
              title += ' \'' + moduleSelector + '\'';                                                                  // 21066
            }                                                                                                          // 21067
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 21068
              console.groupCollapsed(title);                                                                           // 21069
              if(console.table) {                                                                                      // 21070
                console.table(performance);                                                                            // 21071
              }                                                                                                        // 21072
              else {                                                                                                   // 21073
                $.each(performance, function(index, data) {                                                            // 21074
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 21075
                });                                                                                                    // 21076
              }                                                                                                        // 21077
              console.groupEnd();                                                                                      // 21078
            }                                                                                                          // 21079
            performance = [];                                                                                          // 21080
          }                                                                                                            // 21081
        },                                                                                                             // 21082
        invoke: function(query, passedArguments, context) {                                                            // 21083
          var                                                                                                          // 21084
            object = instance,                                                                                         // 21085
            maxDepth,                                                                                                  // 21086
            found,                                                                                                     // 21087
            response                                                                                                   // 21088
          ;                                                                                                            // 21089
          passedArguments = passedArguments || queryArguments;                                                         // 21090
          context         = element         || context;                                                                // 21091
          if(typeof query == 'string' && object !== undefined) {                                                       // 21092
            query    = query.split(/[\. ]/);                                                                           // 21093
            maxDepth = query.length - 1;                                                                               // 21094
            $.each(query, function(depth, value) {                                                                     // 21095
              var camelCaseValue = (depth != maxDepth)                                                                 // 21096
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 21097
                : query                                                                                                // 21098
              ;                                                                                                        // 21099
              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {                                 // 21100
                object = object[camelCaseValue];                                                                       // 21101
              }                                                                                                        // 21102
              else if( object[camelCaseValue] !== undefined ) {                                                        // 21103
                found = object[camelCaseValue];                                                                        // 21104
                return false;                                                                                          // 21105
              }                                                                                                        // 21106
              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {                                     // 21107
                object = object[value];                                                                                // 21108
              }                                                                                                        // 21109
              else if( object[value] !== undefined ) {                                                                 // 21110
                found = object[value];                                                                                 // 21111
                return false;                                                                                          // 21112
              }                                                                                                        // 21113
              else {                                                                                                   // 21114
                module.error(error.method, query);                                                                     // 21115
                return false;                                                                                          // 21116
              }                                                                                                        // 21117
            });                                                                                                        // 21118
          }                                                                                                            // 21119
          if ( $.isFunction( found ) ) {                                                                               // 21120
            response = found.apply(context, passedArguments);                                                          // 21121
          }                                                                                                            // 21122
          else if(found !== undefined) {                                                                               // 21123
            response = found;                                                                                          // 21124
          }                                                                                                            // 21125
          if($.isArray(returnedValue)) {                                                                               // 21126
            returnedValue.push(response);                                                                              // 21127
          }                                                                                                            // 21128
          else if(returnedValue !== undefined) {                                                                       // 21129
            returnedValue = [returnedValue, response];                                                                 // 21130
          }                                                                                                            // 21131
          else if(response !== undefined) {                                                                            // 21132
            returnedValue = response;                                                                                  // 21133
          }                                                                                                            // 21134
          return found;                                                                                                // 21135
        }                                                                                                              // 21136
      };                                                                                                               // 21137
                                                                                                                       // 21138
      if(methodInvoked) {                                                                                              // 21139
        if(instance === undefined) {                                                                                   // 21140
          module.initialize();                                                                                         // 21141
        }                                                                                                              // 21142
        instance.save.scroll();                                                                                        // 21143
        instance.save.calculations();                                                                                  // 21144
        module.invoke(query);                                                                                          // 21145
      }                                                                                                                // 21146
      else {                                                                                                           // 21147
        if(instance !== undefined) {                                                                                   // 21148
          instance.invoke('destroy');                                                                                  // 21149
        }                                                                                                              // 21150
        module.initialize();                                                                                           // 21151
      }                                                                                                                // 21152
    })                                                                                                                 // 21153
  ;                                                                                                                    // 21154
                                                                                                                       // 21155
  return (returnedValue !== undefined)                                                                                 // 21156
    ? returnedValue                                                                                                    // 21157
    : this                                                                                                             // 21158
  ;                                                                                                                    // 21159
};                                                                                                                     // 21160
                                                                                                                       // 21161
$.fn.visibility.settings = {                                                                                           // 21162
                                                                                                                       // 21163
  name                   : 'Visibility',                                                                               // 21164
  namespace              : 'visibility',                                                                               // 21165
                                                                                                                       // 21166
  debug                  : false,                                                                                      // 21167
  verbose                : false,                                                                                      // 21168
  performance            : true,                                                                                       // 21169
                                                                                                                       // 21170
  // whether to use mutation observers to follow changes                                                               // 21171
  observeChanges         : true,                                                                                       // 21172
                                                                                                                       // 21173
  // check position immediately on init                                                                                // 21174
  initialCheck           : true,                                                                                       // 21175
                                                                                                                       // 21176
  // whether to refresh calculations after all page images load                                                        // 21177
  refreshOnLoad          : true,                                                                                       // 21178
                                                                                                                       // 21179
  // whether to refresh calculations after page resize event                                                           // 21180
  refreshOnResize        : true,                                                                                       // 21181
                                                                                                                       // 21182
  // should call callbacks on refresh event (resize, etc)                                                              // 21183
  checkOnRefresh         : true,                                                                                       // 21184
                                                                                                                       // 21185
  // callback should only occur one time                                                                               // 21186
  once                   : true,                                                                                       // 21187
                                                                                                                       // 21188
  // callback should fire continuously whe evaluates to true                                                           // 21189
  continuous             : false,                                                                                      // 21190
                                                                                                                       // 21191
  // offset to use with scroll top                                                                                     // 21192
  offset                 : 0,                                                                                          // 21193
                                                                                                                       // 21194
  // whether to include margin in elements position                                                                    // 21195
  includeMargin          : false,                                                                                      // 21196
                                                                                                                       // 21197
  // scroll context for visibility checks                                                                              // 21198
  context                : window,                                                                                     // 21199
                                                                                                                       // 21200
  // visibility check delay in ms (defaults to animationFrame)                                                         // 21201
  throttle               : false,                                                                                      // 21202
                                                                                                                       // 21203
  // special visibility type (image, fixed)                                                                            // 21204
  type                   : false,                                                                                      // 21205
                                                                                                                       // 21206
  // image only animation settings                                                                                     // 21207
  transition             : 'fade in',                                                                                  // 21208
  duration               : 1000,                                                                                       // 21209
                                                                                                                       // 21210
  // array of callbacks for percentage                                                                                 // 21211
  onPassed               : {},                                                                                         // 21212
                                                                                                                       // 21213
  // standard callbacks                                                                                                // 21214
  onOnScreen             : false,                                                                                      // 21215
  onOffScreen            : false,                                                                                      // 21216
  onPassing              : false,                                                                                      // 21217
  onTopVisible           : false,                                                                                      // 21218
  onBottomVisible        : false,                                                                                      // 21219
  onTopPassed            : false,                                                                                      // 21220
  onBottomPassed         : false,                                                                                      // 21221
                                                                                                                       // 21222
  // reverse callbacks                                                                                                 // 21223
  onPassingReverse       : false,                                                                                      // 21224
  onTopVisibleReverse    : false,                                                                                      // 21225
  onBottomVisibleReverse : false,                                                                                      // 21226
  onTopPassedReverse     : false,                                                                                      // 21227
  onBottomPassedReverse  : false,                                                                                      // 21228
                                                                                                                       // 21229
  // utility callbacks                                                                                                 // 21230
  onUpdate               : false, // disabled by default for performance                                               // 21231
  onRefresh              : function(){},                                                                               // 21232
                                                                                                                       // 21233
  metadata : {                                                                                                         // 21234
    src: 'src'                                                                                                         // 21235
  },                                                                                                                   // 21236
                                                                                                                       // 21237
  className: {                                                                                                         // 21238
    fixed       : 'fixed',                                                                                             // 21239
    placeholder : 'placeholder'                                                                                        // 21240
  },                                                                                                                   // 21241
                                                                                                                       // 21242
  error : {                                                                                                            // 21243
    method  : 'The method you called is not defined.',                                                                 // 21244
    visible : 'Element is hidden, you must call refresh after element becomes visible'                                 // 21245
  }                                                                                                                    // 21246
                                                                                                                       // 21247
};                                                                                                                     // 21248
                                                                                                                       // 21249
})( jQuery, window , document );                                                                                       // 21250
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);

///////////////////////////////////////////////////////////////////////

}).call(this);


/* Exports */
if (typeof Package === 'undefined') Package = {};
Package['semantic:ui-css'] = {};

})();
